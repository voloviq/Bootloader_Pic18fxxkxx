

Microchip Technology PIC18 PRO Macro Assembler V1.34 build -361300703 
                                                                                               Thu Jul 23 21:47:55 2015

Microchip Technology Omniscient Code Generator (PRO mode) build 201502162209
     1                           	processor	18F26K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    23  0000                     _BAUDCON1bits	set	4007
    24  0000                     _EECON1	set	3967
    25  0000                     _EECON1bits	set	3967
    26  0000                     _EECON2	set	3966
    27  0000                     _INTCONbits	set	4082
    28  0000                     _LATBbits	set	3978
    29  0000                     _OSCCONbits	set	4051
    30  0000                     _OSCTUNEbits	set	3995
    31  0000                     _PIR4bits	set	4023
    32  0000                     _RCON	set	4048
    33  0000                     _RCREG1	set	4014
    34  0000                     _RCSTAbits	set	4011
    35  0000                     _SPBRG	set	4015
    36  0000                     _TABLAT	set	4085
    37  0000                     _TBLPTRH	set	4087
    38  0000                     _TBLPTRL	set	4086
    39  0000                     _TBLPTRU	set	4088
    40  0000                     _TRISBbits	set	3987
    41  0000                     _TRISCbits	set	3988
    42  0000                     _TXREG1	set	4013
    43  0000                     _TXSTA1bits	set	4012
    44  0000                     _TXSTAbits	set	4012
    45  0000                     _RCIF	set	31989
    46                           
    47                           	psect	smallconst
    48  000F00                     __psmallconst:
    49                           	opt stack 0
    50  000F00  00                 	db	0
    51  000F01                     STR_1:
    52  000F01  31                 	db	49	;'1'
    53  000F02  2E                 	db	46
    54  000F03  30                 	db	48	;'0'
    55  000F04  2E                 	db	46
    56  000F05  61                 	db	97	;'a'
    57  000F06  00                 	db	0
    58                           
    59                           ; #config settings
    60  000F07  00                 	db	0	; dummy byte at the end
    61  0000                     
    62                           	psect	cinit
    63  000BB4                     __pcinit:
    64                           	opt stack 0
    65  000BB4                     start_initialization:
    66                           	opt stack 0
    67  000BB4                     __initialization:
    68                           	opt stack 0
    69                           
    70                           ; Clear objects allocated to BANK0 (64 bytes)
    71  000BB4  EE00  F060         	lfsr	0,__pbssBANK0
    72  000BB8  0E40               	movlw	64
    73  000BBA                     clear_0:
    74  000BBA  6AEE               	clrf	postinc0,c
    75  000BBC  06E8               	decf	wreg,f,c
    76  000BBE  E1FD               	bnz	clear_0
    77                           
    78                           ; Clear objects allocated to COMRAM (15 bytes)
    79  000BC0  EE00  F01E         	lfsr	0,__pbssCOMRAM
    80  000BC4  0E0F               	movlw	15
    81  000BC6                     clear_1:
    82  000BC6  6AEE               	clrf	postinc0,c
    83  000BC8  06E8               	decf	wreg,f,c
    84  000BCA  E1FD               	bnz	clear_1
    85  000BCC                     end_of_initialization:
    86                           	opt stack 0
    87  000BCC                     __end_of__initialization:
    88                           	opt stack 0
    89  000BCC  0E00               	movlw	low (__Lmediumconst shr (0+16))
    90  000BCE  6EF8               	movwf	tblptru,c
    91  000BD0  0100               	movlb	0
    92  000BD2  EF84  F007         	goto	_main	;jump to C main() function
    93                           tblptru	equ	0xFF8
    94                           postinc0	equ	0xFEE
    95                           wreg	equ	0xFE8
    96                           
    97                           	psect	bssCOMRAM
    98  00001E                     __pbssCOMRAM:
    99                           	opt stack 0
   100  00001E                     bootloader_state_machine@timeout:
   101                           	opt stack 0
   102  00001E                     	ds	4
   103  000022                     bootloader_state_machine@byte_index:
   104                           	opt stack 0
   105  000022                     	ds	2
   106  000024                     bootloader_state_machine@page_index:
   107                           	opt stack 0
   108  000024                     	ds	2
   109  000026                     bootloader_state_machine@record_type:
   110                           	opt stack 0
   111  000026                     	ds	2
   112  000028                     bootloader_state_machine@byte_in_record:
   113                           	opt stack 0
   114  000028                     	ds	1
   115  000029                     bootloader_state_machine@crc:
   116                           	opt stack 0
   117  000029                     	ds	1
   118  00002A                     bootloader_state_machine@end_of_record:
   119                           	opt stack 0
   120  00002A                     	ds	1
   121  00002B                     bootloader_state_machine@i:
   122                           	opt stack 0
   123  00002B                     	ds	1
   124  00002C                     bootloader_state_machine@temp:
   125                           	opt stack 0
   126  00002C                     	ds	1
   127                           tblptru	equ	0xFF8
   128                           postinc0	equ	0xFEE
   129                           wreg	equ	0xFE8
   130                           
   131                           	psect	bssBANK0
   132  000060                     __pbssBANK0:
   133                           	opt stack 0
   134  000060                     _gbuffer:
   135                           	opt stack 0
   136  000060                     	ds	64
   137                           tblptru	equ	0xFF8
   138                           postinc0	equ	0xFEE
   139                           wreg	equ	0xFE8
   140                           
   141                           	psect	cstackCOMRAM
   142  000001                     __pcstackCOMRAM:
   143                           	opt stack 0
   144  000001                     UART_putchar@outchar:
   145                           	opt stack 0
   146  000001                     clear_buffer@idx:
   147                           	opt stack 0
   148  000001                     erase_flash@address:
   149                           	opt stack 0
   150  000001                     write_flash@address:
   151                           	opt stack 0
   152                           
   153                           ; 4 bytes @ 0x0
   154  000001                     	ds	1
   155  000002                     ??_send_boot_version:
   156                           
   157                           ; 0 bytes @ 0x1
   158  000002                     	ds	1
   159  000003                     clear_buffer@buf:
   160                           	opt stack 0
   161                           
   162                           ; 1 bytes @ 0x2
   163  000003                     	ds	1
   164  000004                     send_boot_version@i:
   165                           	opt stack 0
   166  000004                     clear_buffer@i:
   167                           	opt stack 0
   168                           
   169                           ; 2 bytes @ 0x3
   170  000004                     	ds	1
   171  000005                     send_boot_version@buf:
   172                           	opt stack 0
   173  000005                     write_flash@buffer:
   174                           	opt stack 0
   175                           
   176                           ; 1 bytes @ 0x4
   177  000005                     	ds	1
   178  000006                     write_flash@length:
   179                           	opt stack 0
   180                           
   181                           ; 1 bytes @ 0x5
   182  000006                     	ds	1
   183  000007                     ??_write_flash:
   184                           
   185                           ; 0 bytes @ 0x6
   186  000007                     	ds	3
   187  00000A                     write_flash@counter:
   188                           	opt stack 0
   189                           
   190                           ; 2 bytes @ 0x9
   191  00000A                     	ds	2
   192  00000C                     ??_bootloader_state_machine:
   193                           
   194                           ; 0 bytes @ 0xB
   195  00000C                     	ds	4
   196  000010                     bootloader_state_machine@state:
   197                           	opt stack 0
   198                           
   199                           ; 1 bytes @ 0xF
   200  000010                     	ds	1
   201  000011                     bootloader_state_machine@adr:
   202                           	opt stack 0
   203                           
   204                           ; 4 bytes @ 0x10
   205  000011                     	ds	4
   206  000015                     
   207                           ; 2 bytes @ 0x14
   208  000015                     	ds	2
   209  000017                     
   210                           ; 3 bytes @ 0x16
   211  000017                     	ds	3
   212  00001A                     main@hbeat:
   213                           	opt stack 0
   214                           
   215                           ; 4 bytes @ 0x19
   216  00001A                     	ds	4
   217                           tblptru	equ	0xFF8
   218                           postinc0	equ	0xFEE
   219                           wreg	equ	0xFE8
   220                           
   221 ;;
   222 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   223 ;;
   224 ;; *************** function _main *****************
   225 ;; Defined at:
   226 ;;		line 350 in file "main.c"
   227 ;; Parameters:    Size  Location     Type
   228 ;;  argc            2   20[COMRAM] int 
   229 ;;  argv            3   22[COMRAM] PTR PTR unsigned char 
   230 ;; Auto vars:     Size  Location     Type
   231 ;;  hbeat           4   25[COMRAM] unsigned long 
   232 ;; Return value:  Size  Location     Type
   233 ;;                  2   20[COMRAM] int 
   234 ;; Registers used:
   235 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   236 ;; Tracked objects:
   237 ;;		On entry : 0/0
   238 ;;		On exit  : 0/0
   239 ;;		Unchanged: 0/0
   240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   241 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   242 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   244 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   245 ;;Total ram usage:        9 bytes
   246 ;; Hardware stack levels required when called:    3
   247 ;; This function calls:
   248 ;;		_UART_getchar
   249 ;;		_UART_init
   250 ;;		_bootloader_state_machine
   251 ;; This function is called by:
   252 ;;		Startup code after reset
   253 ;; This function uses a non-reentrant model
   254 ;;
   255                           
   256                           	psect	text0
   257  000F08                     __ptext0:
   258                           	opt stack 0
   259  000F08                     _main:
   260                           	opt stack 28
   261                           
   262                           ;main.c: 352: u32 hbeat = 0;
   263                           
   264                           ;incstack = 0
   265  000F08  6A1A               	clrf	main@hbeat,c
   266  000F0A  6A1B               	clrf	main@hbeat+1,c
   267  000F0C  6A1C               	clrf	main@hbeat+2,c
   268  000F0E  6A1D               	clrf	main@hbeat+3,c
   269                           
   270                           ;main.c: 357: OSCCONbits.IRCF2 = 1;
   271  000F10  8CD3               	bsf	4051,6,c	;volatile
   272                           
   273                           ;main.c: 358: OSCCONbits.IRCF1 = 1;
   274  000F12  8AD3               	bsf	4051,5,c	;volatile
   275                           
   276                           ;main.c: 359: OSCCONbits.IRCF0 = 1;
   277  000F14  88D3               	bsf	4051,4,c	;volatile
   278                           
   279                           ;main.c: 362: OSCCONbits.HFIOFS = 1;
   280  000F16  84D3               	bsf	4051,2,c	;volatile
   281                           
   282                           ;main.c: 365: OSCTUNEbits.PLLEN = 1;
   283  000F18  8C9B               	bsf	3995,6,c	;volatile
   284                           
   285                           ;main.c: 370: TRISBbits.TRISB0 = 0;
   286  000F1A  9093               	bcf	3987,0,c	;volatile
   287                           
   288                           ;main.c: 373: UART_init();
   289  000F1C  ECC3  F005         	call	_UART_init	;wreg free
   290  000F20                     l1295:
   291                           
   292                           ;main.c: 376: if(hbeat == 0x03FF){
   293  000F20  281A               	incf	main@hbeat,w,c
   294  000F22  E10D               	bnz	l1301
   295  000F24  0E03               	movlw	3
   296  000F26  181B               	xorwf	main@hbeat+1,w,c
   297  000F28  101C               	iorwf	main@hbeat+2,w,c
   298  000F2A  101D               	iorwf	main@hbeat+3,w,c
   299  000F2C  A4D8               	btfss	status,2,c
   300  000F2E  D007               	goto	l1301
   301                           
   302                           ;main.c: 377: LATBbits.LATB0 = 1;
   303  000F30  808A               	bsf	3978,0,c	;volatile
   304  000F32                     l1299:
   305                           
   306                           ;main.c: 378: hbeat++;
   307  000F32  2A1A               	incf	main@hbeat,f,c
   308  000F34  0E00               	movlw	0
   309  000F36  221B               	addwfc	main@hbeat+1,f,c
   310  000F38  221C               	addwfc	main@hbeat+2,f,c
   311  000F3A  221D               	addwfc	main@hbeat+3,f,c
   312                           
   313                           ;main.c: 379: }
   314  000F3C  D016               	goto	l1313
   315  000F3E                     l1301:
   316                           
   317                           ;main.c: 380: else if( hbeat == 0x2FFF ){
   318  000F3E  281A               	incf	main@hbeat,w,c
   319  000F40  E108               	bnz	l1307
   320  000F42  0E2F               	movlw	47
   321  000F44  181B               	xorwf	main@hbeat+1,w,c
   322  000F46  101C               	iorwf	main@hbeat+2,w,c
   323  000F48  101D               	iorwf	main@hbeat+3,w,c
   324  000F4A  A4D8               	btfss	status,2,c
   325  000F4C  D002               	goto	l1307
   326                           
   327                           ;main.c: 381: LATBbits.LATB0 = 0;
   328  000F4E  908A               	bcf	3978,0,c	;volatile
   329  000F50  D7F0               	goto	l1299
   330  000F52                     l1307:
   331                           
   332                           ;main.c: 384: else if (hbeat == 0x1FFFF){
   333  000F52  281A               	incf	main@hbeat,w,c
   334  000F54  E1EE               	bnz	l1299
   335  000F56  281B               	incf	main@hbeat+1,w,c
   336  000F58  E1EC               	bnz	l1299
   337  000F5A  041C               	decf	main@hbeat+2,w,c
   338  000F5C  101D               	iorwf	main@hbeat+3,w,c
   339  000F5E  A4D8               	btfss	status,2,c
   340  000F60  D7E8               	goto	l1299
   341                           
   342                           ;main.c: 385: hbeat = 0x00;
   343  000F62  6A1A               	clrf	main@hbeat,c
   344  000F64  6A1B               	clrf	main@hbeat+1,c
   345  000F66  6A1C               	clrf	main@hbeat+2,c
   346  000F68  6A1D               	clrf	main@hbeat+3,c
   347  000F6A                     l1313:
   348                           
   349                           ;main.c: 389: }
   350                           ;main.c: 390: bootloader_state_machine(UART_getchar());
   351  000F6A  ECCE  F005         	call	_UART_getchar	;wreg free
   352  000F6E  EC25  F006         	call	_bootloader_state_machine
   353  000F72  D7D6               	goto	l1295
   354  000F74                     __end_of_main:
   355                           	opt stack 0
   356                           tblptru	equ	0xFF8
   357                           postinc0	equ	0xFEE
   358                           wreg	equ	0xFE8
   359                           status	equ	0xFD8
   360                           
   361 ;; *************** function _bootloader_state_machine *****************
   362 ;; Defined at:
   363 ;;		line 501 in file "main.c"
   364 ;; Parameters:    Size  Location     Type
   365 ;;  state           1    wreg     unsigned char 
   366 ;; Auto vars:     Size  Location     Type
   367 ;;  state           1   15[COMRAM] unsigned char 
   368 ;;  adr             4   16[COMRAM] unsigned long 
   369 ;; Return value:  Size  Location     Type
   370 ;;		None               void
   371 ;; Registers used:
   372 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   373 ;; Tracked objects:
   374 ;;		On entry : 0/0
   375 ;;		On exit  : 0/0
   376 ;;		Unchanged: 0/0
   377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   379 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   380 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   381 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   382 ;;Total ram usage:        9 bytes
   383 ;; Hardware stack levels used:    1
   384 ;; Hardware stack levels required when called:    2
   385 ;; This function calls:
   386 ;;		_UART_putchar
   387 ;;		_UART_wait_for_char
   388 ;;		_clear_buffer
   389 ;;		_erase_flash
   390 ;;		_jump_to_app
   391 ;;		_send_boot_version
   392 ;;		_write_flash
   393 ;; This function is called by:
   394 ;;		_main
   395 ;; This function uses a non-reentrant model
   396 ;;
   397                           
   398                           	psect	text1
   399  000C4A                     __ptext1:
   400                           	opt stack 0
   401  000C4A                     _bootloader_state_machine:
   402                           	opt stack 28
   403                           
   404                           ;incstack = 0
   405                           ;bootloader_state_machine@state stored from wreg
   406  000C4A  6E10               	movwf	bootloader_state_machine@state,c
   407                           
   408                           ;main.c: 503: static u8 byte_in_record = 0x00;
   409                           ;main.c: 504: static u8 temp = 0x00;
   410                           ;main.c: 505: static u8 crc = 0x00;
   411                           ;main.c: 506: static u32 record_address = 0x00;
   412                           ;main.c: 507: static u16 record_type = 0x00;
   413                           ;main.c: 508: static u8 end_of_record = 0x00;
   414                           ;main.c: 509: static u16 byte_index = 0x00;
   415                           ;main.c: 510: static u16 page_index = 0x00;
   416                           ;main.c: 511: static u32 timeout = 0x00;
   417                           ;main.c: 512: static u8 i = 0;
   418                           ;main.c: 514: switch (state)
   419  000C4C  D149               	goto	l1289
   420  000C4E                     l1127:
   421                           
   422                           ;main.c: 517: send_boot_version((u8 *)"1.0.a");
   423  000C4E  0E01               	movlw	STR_1& (0+255)
   424  000C50  ECFF  F005         	call	_send_boot_version
   425                           
   426                           ;main.c: 518: timeout = 0;
   427  000C54  6A1E               	clrf	bootloader_state_machine@timeout,c
   428  000C56  6A1F               	clrf	bootloader_state_machine@timeout+1,c
   429  000C58  6A20               	clrf	bootloader_state_machine@timeout+2,c
   430  000C5A  6A21               	clrf	bootloader_state_machine@timeout+3,c
   431                           
   432                           ;main.c: 519: break;
   433  000C5C  0012               	return	
   434  000C5E                     l1131:
   435                           
   436                           ;main.c: 522: UART_putchar(0x55);
   437  000C5E  0E55               	movlw	85
   438  000C60  EFB1  F005         	goto	_UART_putchar
   439  000C64                     l1135:
   440                           
   441                           ;main.c: 527: if(UART_wait_for_char() == 'Q'){
   442  000C64  ECB9  F005         	call	_UART_wait_for_char	;wreg free
   443  000C68  0A51               	xorlw	81
   444  000C6A  A4D8               	btfss	status,2,c
   445  000C6C  0012               	return	
   446                           
   447                           ;main.c: 528: if(UART_wait_for_char() == 'W'){
   448  000C6E  ECB9  F005         	call	_UART_wait_for_char	;wreg free
   449  000C72  0A57               	xorlw	87
   450  000C74  A4D8               	btfss	status,2,c
   451  000C76  0012               	return	
   452                           
   453                           ;main.c: 529: if(UART_wait_for_char() == 'E'){
   454  000C78  ECB9  F005         	call	_UART_wait_for_char	;wreg free
   455  000C7C  0A45               	xorlw	69
   456  000C7E  A4D8               	btfss	status,2,c
   457  000C80  0012               	return	
   458                           
   459                           ;main.c: 530: if(UART_wait_for_char() == 'R'){
   460  000C82  ECB9  F005         	call	_UART_wait_for_char	;wreg free
   461  000C86  0A52               	xorlw	82
   462  000C88  A4D8               	btfss	status,2,c
   463  000C8A  0012               	return	
   464                           
   465                           ;main.c: 531: if(UART_wait_for_char() == 'T'){
   466  000C8C  ECB9  F005         	call	_UART_wait_for_char	;wreg free
   467  000C90  0A54               	xorlw	84
   468  000C92  A4D8               	btfss	status,2,c
   469  000C94  0012               	return	
   470                           
   471                           ;main.c: 532: for (u32 adr = 0x1000; adr < 0x10000; adr += 64){
   472  000C96  6A11               	clrf	bootloader_state_machine@adr,c
   473  000C98  0E10               	movlw	16
   474  000C9A  6E12               	movwf	bootloader_state_machine@adr+1,c
   475  000C9C  6A13               	clrf	bootloader_state_machine@adr+2,c
   476  000C9E  6A14               	clrf	bootloader_state_machine@adr+3,c
   477  000CA0                     l1151:
   478                           
   479                           ;main.c: 533: erase_flash(adr);
   480  000CA0  C011  F001         	movff	bootloader_state_machine@adr,erase_flash@address
   481  000CA4  C012  F002         	movff	bootloader_state_machine@adr+1,erase_flash@address+1
   482  000CA8  C013  F003         	movff	bootloader_state_machine@adr+2,erase_flash@address+2
   483  000CAC  C014  F004         	movff	bootloader_state_machine@adr+3,erase_flash@address+3
   484  000CB0  ECE8  F007         	call	_erase_flash	;wreg free
   485  000CB4  0E40               	movlw	64
   486  000CB6  2611               	addwf	bootloader_state_machine@adr,f,c
   487  000CB8  0E00               	movlw	0
   488  000CBA  2212               	addwfc	bootloader_state_machine@adr+1,f,c
   489  000CBC  2213               	addwfc	bootloader_state_machine@adr+2,f,c
   490  000CBE  2214               	addwfc	bootloader_state_machine@adr+3,f,c
   491  000CC0  5014               	movf	bootloader_state_machine@adr+3,w,c
   492  000CC2  E102               	bnz	u600
   493  000CC4  0413               	decf	bootloader_state_machine@adr+2,w,c
   494  000CC6  E3EC               	bnc	l1151
   495  000CC8                     u600:
   496                           
   497                           ;main.c: 534: }
   498                           ;main.c: 535: UART_putchar(0xEE);
   499  000CC8  0EEE               	movlw	238
   500  000CCA  EFB1  F005         	goto	_UART_putchar
   501  000CCE                     l1161:
   502                           
   503                           ;main.c: 545: if(UART_wait_for_char() == 'Q'){
   504  000CCE  ECB9  F005         	call	_UART_wait_for_char	;wreg free
   505  000CD2  0A51               	xorlw	81
   506  000CD4  A4D8               	btfss	status,2,c
   507  000CD6  0012               	return	
   508                           
   509                           ;main.c: 546: if(UART_wait_for_char() == 'W'){
   510  000CD8  ECB9  F005         	call	_UART_wait_for_char	;wreg free
   511  000CDC  0A57               	xorlw	87
   512  000CDE  A4D8               	btfss	status,2,c
   513  000CE0  0012               	return	
   514                           
   515                           ;main.c: 547: if(UART_wait_for_char() == 'E'){
   516  000CE2  ECB9  F005         	call	_UART_wait_for_char	;wreg free
   517  000CE6  0A45               	xorlw	69
   518  000CE8  A4D8               	btfss	status,2,c
   519  000CEA  0012               	return	
   520                           
   521                           ;main.c: 548: if(UART_wait_for_char() == 'R'){
   522  000CEC  ECB9  F005         	call	_UART_wait_for_char	;wreg free
   523  000CF0  0A52               	xorlw	82
   524  000CF2  A4D8               	btfss	status,2,c
   525  000CF4  0012               	return	
   526                           
   527                           ;main.c: 549: if(UART_wait_for_char() == 'T'){
   528  000CF6  ECB9  F005         	call	_UART_wait_for_char	;wreg free
   529  000CFA  0A54               	xorlw	84
   530  000CFC  E001 D0DD          	bnz	l152
   531  000D00                     l1171:
   532                           
   533                           ;main.c: 552: if(UART_wait_for_char() == ':'){
   534  000D00  ECB9  F005         	call	_UART_wait_for_char	;wreg free
   535  000D04  0A3A               	xorlw	58
   536  000D06  E001 D0C7          	bnz	l1275
   537                           
   538                           ;main.c: 554: byte_in_record = UART_wait_for_char();
   539  000D0A  ECB9  F005         	call	_UART_wait_for_char	;wreg free
   540  000D0E  6E28               	movwf	bootloader_state_machine@byte_in_record,c
   541                           
   542                           ;main.c: 555: crc += byte_in_record;
   543  000D10  5028               	movf	bootloader_state_machine@byte_in_record,w,c
   544  000D12  2629               	addwf	bootloader_state_machine@crc,f,c
   545                           
   546                           ;main.c: 558: temp = UART_wait_for_char();
   547  000D14  ECB9  F005         	call	_UART_wait_for_char	;wreg free
   548  000D18  6E2C               	movwf	bootloader_state_machine@temp,c
   549                           
   550                           ;main.c: 560: record_address = temp<<8;
   551  000D1A  502C               	movf	bootloader_state_machine@temp,w,c
   552  000D1C  2629               	addwf	bootloader_state_machine@crc,f,c
   553                           
   554                           ;main.c: 563: temp = UART_wait_for_char();
   555  000D1E  ECB9  F005         	call	_UART_wait_for_char	;wreg free
   556  000D22  6E2C               	movwf	bootloader_state_machine@temp,c
   557                           
   558                           ;main.c: 565: record_address |= temp;
   559  000D24  502C               	movf	bootloader_state_machine@temp,w,c
   560  000D26  2629               	addwf	bootloader_state_machine@crc,f,c
   561                           
   562                           ;main.c: 568: temp = UART_wait_for_char();
   563  000D28  ECB9  F005         	call	_UART_wait_for_char	;wreg free
   564  000D2C  6E2C               	movwf	bootloader_state_machine@temp,c
   565                           
   566                           ;main.c: 569: crc += temp;
   567  000D2E  502C               	movf	bootloader_state_machine@temp,w,c
   568  000D30  2629               	addwf	bootloader_state_machine@crc,f,c
   569                           
   570                           ;main.c: 570: record_type = temp;
   571  000D32  C02C  F026         	movff	bootloader_state_machine@temp,bootloader_state_machine@record_type
   572  000D36  6A27               	clrf	bootloader_state_machine@record_type+1,c
   573                           
   574                           ;main.c: 573: if(record_type == 0){
   575  000D38  5026               	movf	bootloader_state_machine@record_type,w,c
   576  000D3A  1027               	iorwf	bootloader_state_machine@record_type+1,w,c
   577  000D3C  E154               	bnz	l1227
   578                           
   579                           ;main.c: 575: for(i=0; i<=byte_in_record; i++){
   580  000D3E  6A2B               	clrf	bootloader_state_machine@i,c
   581  000D40  D010               	goto	l1199
   582  000D42                     l1191:
   583                           
   584                           ;main.c: 576: gbuffer[byte_index] = UART_wait_for_char();
   585  000D42  5022               	movf	bootloader_state_machine@byte_index,w,c
   586  000D44  0F60               	addlw	low _gbuffer
   587  000D46  6ED9               	movwf	fsr2l,c
   588  000D48  6ADA               	clrf	fsr2h,c
   589  000D4A  ECB9  F005         	call	_UART_wait_for_char	;wreg free
   590  000D4E  6EDF               	movwf	indf2,c
   591                           
   592                           ;main.c: 577: crc += gbuffer[byte_index];
   593  000D50  5022               	movf	bootloader_state_machine@byte_index,w,c
   594  000D52  0F60               	addlw	low _gbuffer
   595  000D54  6ED9               	movwf	fsr2l,c
   596  000D56  6ADA               	clrf	fsr2h,c
   597  000D58  50DF               	movf	indf2,w,c
   598  000D5A  2629               	addwf	bootloader_state_machine@crc,f,c
   599                           
   600                           ;main.c: 578: byte_index++;
   601  000D5C  4A22               	infsnz	bootloader_state_machine@byte_index,f,c
   602  000D5E  2A23               	incf	bootloader_state_machine@byte_index+1,f,c
   603  000D60  2A2B               	incf	bootloader_state_machine@i,f,c
   604  000D62                     l1199:
   605  000D62  502B               	movf	bootloader_state_machine@i,w,c
   606  000D64  5C28               	subwf	bootloader_state_machine@byte_in_record,w,c
   607  000D66  E2ED               	bc	l1191
   608                           
   609                           ;main.c: 579: }
   610                           ;main.c: 580: byte_index--;
   611  000D68  0622               	decf	bootloader_state_machine@byte_index,f,c
   612  000D6A  A0D8               	btfss	status,0,c
   613  000D6C  0623               	decf	bootloader_state_machine@byte_index+1,f,c
   614                           
   615                           ;main.c: 581: if((crc&0xFF) == 0){
   616  000D6E  5029               	movf	bootloader_state_machine@crc,w,c
   617  000D70  E131               	bnz	l1219
   618                           
   619                           ;main.c: 583: if(byte_index >= 64){
   620  000D72  5023               	movf	bootloader_state_machine@byte_index+1,w,c
   621  000D74  E103               	bnz	u700
   622  000D76  0E40               	movlw	64
   623  000D78  5C22               	subwf	bootloader_state_machine@byte_index,w,c
   624  000D7A  E323               	bnc	l1213
   625  000D7C                     u700:
   626                           
   627                           ;main.c: 584: write_flash((page_index+0x1000), gbuffer, 64);
   628  000D7C  6A0C               	clrf	??_bootloader_state_machine& (0+255),c
   629  000D7E  0E10               	movlw	16
   630  000D80  6E0D               	movwf	(??_bootloader_state_machine+1)& (0+255),c
   631  000D82  C024  F00E         	movff	bootloader_state_machine@page_index,??_bootloader_state_machine+2
   632  000D86  C025  F00F         	movff	bootloader_state_machine@page_index+1,??_bootloader_state_machine+3
   633  000D8A  500C               	movf	??_bootloader_state_machine,w,c
   634  000D8C  260E               	addwf	??_bootloader_state_machine+2,f,c
   635  000D8E  500D               	movf	??_bootloader_state_machine+1,w,c
   636  000D90  220F               	addwfc	??_bootloader_state_machine+3,f,c
   637  000D92  C00E  F001         	movff	??_bootloader_state_machine+2,write_flash@address
   638  000D96  C00F  F002         	movff	??_bootloader_state_machine+3,write_flash@address+1
   639  000D9A  6A03               	clrf	write_flash@address+2,c
   640  000D9C  6A04               	clrf	write_flash@address+3,c
   641  000D9E  0E60               	movlw	low _gbuffer
   642  000DA0  6E05               	movwf	write_flash@buffer,c
   643  000DA2  0E40               	movlw	64
   644  000DA4  6E06               	movwf	write_flash@length,c
   645  000DA6  ECBA  F007         	call	_write_flash	;wreg free
   646                           
   647                           ;main.c: 585: clear_buffer(gbuffer,64);
   648  000DAA  6A02               	clrf	clear_buffer@idx+1,c
   649  000DAC  0E40               	movlw	64
   650  000DAE  6E01               	movwf	clear_buffer@idx,c
   651  000DB0  0E60               	movlw	_gbuffer& (0+255)
   652  000DB2  ECEB  F005         	call	_clear_buffer
   653                           
   654                           ;main.c: 586: byte_index = 0x00;
   655  000DB6  6A22               	clrf	bootloader_state_machine@byte_index,c
   656  000DB8  6A23               	clrf	bootloader_state_machine@byte_index+1,c
   657                           
   658                           ;main.c: 587: page_index += 64;
   659  000DBA  0E40               	movlw	64
   660  000DBC  2624               	addwf	bootloader_state_machine@page_index,f,c
   661  000DBE  0E00               	movlw	0
   662  000DC0  2225               	addwfc	bootloader_state_machine@page_index+1,f,c
   663  000DC2                     l1213:
   664                           
   665                           ;main.c: 588: }
   666                           ;main.c: 589: UART_putchar(0xCC);
   667  000DC2  0ECC               	movlw	204
   668  000DC4  ECB1  F005         	call	_UART_putchar
   669                           
   670                           ;main.c: 590: crc = 0x00;
   671  000DC8  6A29               	clrf	bootloader_state_machine@crc,c
   672                           
   673                           ;main.c: 591: timeout = 0x00;
   674  000DCA  6A1E               	clrf	bootloader_state_machine@timeout,c
   675  000DCC  6A1F               	clrf	bootloader_state_machine@timeout+1,c
   676  000DCE  6A20               	clrf	bootloader_state_machine@timeout+2,c
   677  000DD0  6A21               	clrf	bootloader_state_machine@timeout+3,c
   678                           
   679                           ;main.c: 592: }
   680  000DD2  D004               	goto	l1223
   681  000DD4                     l1219:
   682                           
   683                           ;main.c: 593: else{
   684                           ;main.c: 594: UART_putchar(0xCE);
   685  000DD4  0ECE               	movlw	206
   686  000DD6  ECB1  F005         	call	_UART_putchar
   687                           
   688                           ;main.c: 595: crc = 0x00;
   689  000DDA  6A29               	clrf	bootloader_state_machine@crc,c
   690  000DDC                     l1223:
   691                           
   692                           ;main.c: 596: }
   693                           ;main.c: 597: crc = 0;
   694  000DDC  6A29               	clrf	bootloader_state_machine@crc,c
   695                           
   696                           ;main.c: 598: record_type = 1;
   697  000DDE  6A27               	clrf	bootloader_state_machine@record_type+1,c
   698  000DE0  0E01               	movlw	1
   699  000DE2  6E26               	movwf	bootloader_state_machine@record_type,c
   700                           
   701                           ;main.c: 599: }
   702  000DE4  D05B               	goto	l1277
   703  000DE6                     l1227:
   704                           
   705                           ;main.c: 601: else if(record_type == 2){
   706  000DE6  0E02               	movlw	2
   707  000DE8  1826               	xorwf	bootloader_state_machine@record_type,w,c
   708  000DEA  1027               	iorwf	bootloader_state_machine@record_type+1,w,c
   709  000DEC  E118               	bnz	l1247
   710                           
   711                           ;main.c: 604: for(i=0; i<=byte_in_record; i++){
   712  000DEE  6A2B               	clrf	bootloader_state_machine@i,c
   713  000DF0  D004               	goto	l1235
   714  000DF2                     l1231:
   715                           
   716                           ;main.c: 605: crc += UART_wait_for_char();
   717  000DF2  ECB9  F005         	call	_UART_wait_for_char	;wreg free
   718  000DF6  2629               	addwf	bootloader_state_machine@crc,f,c
   719  000DF8  2A2B               	incf	bootloader_state_machine@i,f,c
   720  000DFA                     l1235:
   721  000DFA  502B               	movf	bootloader_state_machine@i,w,c
   722  000DFC  5C28               	subwf	bootloader_state_machine@byte_in_record,w,c
   723  000DFE  E2F9               	bc	l1231
   724                           
   725                           ;main.c: 606: }
   726                           ;main.c: 607: if((crc&0xFF) == 0){
   727  000E00  5029               	movf	bootloader_state_machine@crc,w,c
   728  000E02  E108               	bnz	l1243
   729                           
   730                           ;main.c: 608: UART_putchar(0xCC);
   731  000E04  0ECC               	movlw	204
   732  000E06  ECB1  F005         	call	_UART_putchar
   733  000E0A                     l1241:
   734                           
   735                           ;main.c: 609: timeout = 0x00;
   736  000E0A  6A1E               	clrf	bootloader_state_machine@timeout,c
   737  000E0C  6A1F               	clrf	bootloader_state_machine@timeout+1,c
   738  000E0E  6A20               	clrf	bootloader_state_machine@timeout+2,c
   739  000E10  6A21               	clrf	bootloader_state_machine@timeout+3,c
   740                           
   741                           ;main.c: 610: }
   742  000E12  D003               	goto	l1245
   743  000E14                     l1243:
   744                           
   745                           ;main.c: 611: else{
   746                           ;main.c: 612: UART_putchar(0xCE);
   747  000E14  0ECE               	movlw	206
   748  000E16  ECB1  F005         	call	_UART_putchar
   749  000E1A                     l1245:
   750                           
   751                           ;main.c: 613: }
   752                           ;main.c: 614: crc = 0;
   753  000E1A  6A29               	clrf	bootloader_state_machine@crc,c
   754                           
   755                           ;main.c: 615: }
   756  000E1C  D03F               	goto	l1277
   757  000E1E                     l1247:
   758                           
   759                           ;main.c: 617: else if(record_type == 4){
   760  000E1E  0E04               	movlw	4
   761  000E20  1826               	xorwf	bootloader_state_machine@record_type,w,c
   762  000E22  1027               	iorwf	bootloader_state_machine@record_type+1,w,c
   763  000E24  E113               	bnz	l1267
   764                           
   765                           ;main.c: 620: for(i=0; i<=byte_in_record; i++){
   766  000E26  6A2B               	clrf	bootloader_state_machine@i,c
   767  000E28  D004               	goto	l1255
   768  000E2A                     l1251:
   769                           
   770                           ;main.c: 621: crc += UART_wait_for_char();
   771  000E2A  ECB9  F005         	call	_UART_wait_for_char	;wreg free
   772  000E2E  2629               	addwf	bootloader_state_machine@crc,f,c
   773  000E30  2A2B               	incf	bootloader_state_machine@i,f,c
   774  000E32                     l1255:
   775  000E32  502B               	movf	bootloader_state_machine@i,w,c
   776  000E34  5C28               	subwf	bootloader_state_machine@byte_in_record,w,c
   777  000E36  E2F9               	bc	l1251
   778                           
   779                           ;main.c: 622: }
   780                           ;main.c: 623: if((crc&0xFF) == 0){
   781  000E38  5029               	movf	bootloader_state_machine@crc,w,c
   782  000E3A  E104               	bnz	l1263
   783                           
   784                           ;main.c: 624: UART_putchar(0xCC);
   785  000E3C  0ECC               	movlw	204
   786  000E3E  ECB1  F005         	call	_UART_putchar
   787  000E42  D7E3               	goto	l1241
   788  000E44                     l1263:
   789                           
   790                           ;main.c: 627: else{
   791                           ;main.c: 628: UART_putchar(0xCE);
   792  000E44  0ECE               	movlw	206
   793  000E46  ECB1  F005         	call	_UART_putchar
   794  000E4A  D7E7               	goto	l1245
   795  000E4C                     l1267:
   796                           
   797                           ;main.c: 632: else if(record_type == 1){
   798  000E4C  0426               	decf	bootloader_state_machine@record_type,w,c
   799  000E4E  1027               	iorwf	bootloader_state_machine@record_type+1,w,c
   800  000E50  E125               	bnz	l1277
   801                           
   802                           ;main.c: 634: write_flash((page_index+0x1000), gbuffer, 64);
   803  000E52  6A0C               	clrf	??_bootloader_state_machine& (0+255),c
   804  000E54  0E10               	movlw	16
   805  000E56  6E0D               	movwf	(??_bootloader_state_machine+1)& (0+255),c
   806  000E58  C024  F00E         	movff	bootloader_state_machine@page_index,??_bootloader_state_machine+2
   807  000E5C  C025  F00F         	movff	bootloader_state_machine@page_index+1,??_bootloader_state_machine+3
   808  000E60  500C               	movf	??_bootloader_state_machine,w,c
   809  000E62  260E               	addwf	??_bootloader_state_machine+2,f,c
   810  000E64  500D               	movf	??_bootloader_state_machine+1,w,c
   811  000E66  220F               	addwfc	??_bootloader_state_machine+3,f,c
   812  000E68  C00E  F001         	movff	??_bootloader_state_machine+2,write_flash@address
   813  000E6C  C00F  F002         	movff	??_bootloader_state_machine+3,write_flash@address+1
   814  000E70  6A03               	clrf	write_flash@address+2,c
   815  000E72  6A04               	clrf	write_flash@address+3,c
   816  000E74  0E60               	movlw	low _gbuffer
   817  000E76  6E05               	movwf	write_flash@buffer,c
   818  000E78  0E40               	movlw	64
   819  000E7A  6E06               	movwf	write_flash@length,c
   820  000E7C  ECBA  F007         	call	_write_flash	;wreg free
   821                           
   822                           ;main.c: 635: clear_buffer(gbuffer,64);
   823  000E80  6A02               	clrf	clear_buffer@idx+1,c
   824  000E82  0E40               	movlw	64
   825  000E84  6E01               	movwf	clear_buffer@idx,c
   826  000E86  0E60               	movlw	_gbuffer& (0+255)
   827  000E88  ECEB  F005         	call	_clear_buffer
   828                           
   829                           ;main.c: 636: end_of_record = 1;
   830  000E8C  0E01               	movlw	1
   831  000E8E  6E2A               	movwf	bootloader_state_machine@end_of_record,c
   832                           
   833                           ;main.c: 637: UART_putchar(0xF0);
   834  000E90  0EF0               	movlw	240
   835  000E92  ECB1  F005         	call	_UART_putchar
   836  000E96  D002               	goto	l1277
   837  000E98                     l1275:
   838                           
   839                           ;main.c: 640: else{
   840                           ;main.c: 641: end_of_record = 1;
   841  000E98  0E01               	movlw	1
   842  000E9A  6E2A               	movwf	bootloader_state_machine@end_of_record,c
   843  000E9C                     l1277:
   844                           
   845                           ;main.c: 642: }
   846                           ;main.c: 643: timeout++;
   847  000E9C  2A1E               	incf	bootloader_state_machine@timeout,f,c
   848  000E9E  0E00               	movlw	0
   849  000EA0  221F               	addwfc	bootloader_state_machine@timeout+1,f,c
   850  000EA2  2220               	addwfc	bootloader_state_machine@timeout+2,f,c
   851  000EA4  2221               	addwfc	bootloader_state_machine@timeout+3,f,c
   852                           
   853                           ;main.c: 645: }while((end_of_record != 1)||(timeout==100));
   854  000EA6  042A               	decf	bootloader_state_machine@end_of_record,w,c
   855  000EA8  E001 D72A          	bnz	l1171
   856  000EAC  0E64               	movlw	100
   857  000EAE  181E               	xorwf	bootloader_state_machine@timeout,w,c
   858  000EB0  101F               	iorwf	bootloader_state_machine@timeout+1,w,c
   859  000EB2  1020               	iorwf	bootloader_state_machine@timeout+2,w,c
   860  000EB4  1021               	iorwf	bootloader_state_machine@timeout+3,w,c
   861  000EB6  E101 D723          	bz	l1171
   862  000EBA                     l152:
   863                           
   864                           ;main.c: 648: page_index =0x00;
   865  000EBA  6A24               	clrf	bootloader_state_machine@page_index,c
   866  000EBC  6A25               	clrf	bootloader_state_machine@page_index+1,c
   867                           
   868                           ;main.c: 650: record_address = 0x00;
   869  000EBE  6A22               	clrf	bootloader_state_machine@byte_index,c
   870  000EC0  6A23               	clrf	bootloader_state_machine@byte_index+1,c
   871                           
   872                           ;main.c: 651: byte_in_record = 0x00;
   873  000EC2  6A28               	clrf	bootloader_state_machine@byte_in_record,c
   874                           
   875                           ;main.c: 652: record_type = 0x00;
   876  000EC4  6A26               	clrf	bootloader_state_machine@record_type,c
   877  000EC6  6A27               	clrf	bootloader_state_machine@record_type+1,c
   878                           
   879                           ;main.c: 653: timeout = 0x00;
   880  000EC8  6A1E               	clrf	bootloader_state_machine@timeout,c
   881  000ECA  6A1F               	clrf	bootloader_state_machine@timeout+1,c
   882  000ECC  6A20               	clrf	bootloader_state_machine@timeout+2,c
   883  000ECE  6A21               	clrf	bootloader_state_machine@timeout+3,c
   884                           
   885                           ;main.c: 654: end_of_record = 0x00;
   886  000ED0  6A2A               	clrf	bootloader_state_machine@end_of_record,c
   887                           
   888                           ;main.c: 655: crc = 0x00;
   889  000ED2  6A29               	clrf	bootloader_state_machine@crc,c
   890  000ED4  0012               	return	
   891  000ED6                     l1283:
   892                           
   893                           ;main.c: 663: {
   894                           ;main.c: 664: UART_putchar(0x76);
   895  000ED6  0E76               	movlw	118
   896  000ED8  ECB1  F005         	call	_UART_putchar
   897                           
   898                           ;main.c: 665: jump_to_app();
   899  000EDC  EFAC  F005         	goto	_jump_to_app	;wreg free
   900  000EE0                     l1289:
   901  000EE0  5010               	movf	bootloader_state_machine@state,w,c
   902                           
   903                           ; Switch size 1, requested type "speed"
   904                           ; Number of cases is 5, Range of values is 49 to 193
   905                           ; switch strategies available:
   906                           ; Name         Instructions Cycles
   907                           ; simple_byte           16     9 (average)
   908                           ;	Chosen strategy is simple_byte
   909  000EE2  0A31               	xorlw	49	; case 49
   910  000EE4  E101 D6BE          	bz	l1135
   911  000EE8  0A03               	xorlw	3	; case 50
   912  000EEA  E101 D6F0          	bz	l1161
   913  000EEE  0A01               	xorlw	1	; case 51
   914  000EF0  E0F2               	bz	l1283
   915  000EF2  0A99               	xorlw	153	; case 170
   916  000EF4  E101 D6B3          	bz	l1131
   917  000EF8  0A6B               	xorlw	107	; case 193
   918  000EFA  A4D8               	btfss	status,2,c
   919  000EFC  0012               	return	
   920  000EFE  D6A7               	goto	l1127
   921  000F00                     __end_of_bootloader_state_machine:
   922                           	opt stack 0
   923                           tblptru	equ	0xFF8
   924                           postinc0	equ	0xFEE
   925                           wreg	equ	0xFE8
   926                           indf2	equ	0xFDF
   927                           fsr2h	equ	0xFDA
   928                           fsr2l	equ	0xFD9
   929                           status	equ	0xFD8
   930                           
   931 ;; *************** function _write_flash *****************
   932 ;; Defined at:
   933 ;;		line 739 in file "main.c"
   934 ;; Parameters:    Size  Location     Type
   935 ;;  address         4    0[COMRAM] unsigned long 
   936 ;;  buffer          1    4[COMRAM] PTR unsigned char 
   937 ;;		 -> gbuffer(64), 
   938 ;;  length          1    5[COMRAM] unsigned char 
   939 ;; Auto vars:     Size  Location     Type
   940 ;;  counter         2    9[COMRAM] int 
   941 ;; Return value:  Size  Location     Type
   942 ;;		None               void
   943 ;; Registers used:
   944 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   945 ;; Tracked objects:
   946 ;;		On entry : 0/0
   947 ;;		On exit  : 0/0
   948 ;;		Unchanged: 0/0
   949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   950 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   951 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   952 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   953 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   954 ;;Total ram usage:       11 bytes
   955 ;; Hardware stack levels used:    1
   956 ;; This function calls:
   957 ;;		Nothing
   958 ;; This function is called by:
   959 ;;		_bootloader_state_machine
   960 ;; This function uses a non-reentrant model
   961 ;;
   962                           
   963                           	psect	text2
   964  000F74                     __ptext2:
   965                           	opt stack 0
   966  000F74                     _write_flash:
   967                           	opt stack 29
   968                           
   969                           ;main.c: 741: int counter;
   970                           ;main.c: 743: PIR4bits.EEIF = 0;
   971                           
   972                           ;incstack = 0
   973  000F74  9CB7               	bcf	4023,6,c	;volatile
   974                           
   975                           ;main.c: 745: TBLPTRL = (address) & 0xFF;
   976  000F76  C001  FFF6         	movff	write_flash@address,tblptrl	;volatile
   977                           
   978                           ;main.c: 746: TBLPTRH = (address >> 8) & 0xFF;
   979  000F7A  C002  FFF7         	movff	write_flash@address+1,tblptrh	;volatile
   980                           
   981                           ;main.c: 747: TBLPTRU = (address >> 16) & 0xFF;
   982  000F7E  C003  FFF8         	movff	write_flash@address+2,tblptru	;volatile
   983                           
   984                           ;main.c: 760: EECON1 = 0xA4;
   985  000F82  0EA4               	movlw	164
   986  000F84  6E7F               	movwf	3967,c	;volatile
   987                           
   988                           ;main.c: 762: INTCONbits.GIE = 0;
   989  000F86  9EF2               	bcf	intcon,7,c	;volatile
   990                           
   991                           ;main.c: 768: for (counter = 0; counter < length; counter++) {
   992  000F88  6A0A               	clrf	write_flash@counter,c
   993  000F8A  6A0B               	clrf	write_flash@counter+1,c
   994  000F8C  D009               	goto	l1107
   995  000F8E                     l1103:
   996                           
   997                           ;main.c: 769: TABLAT = buffer[counter];
   998  000F8E  5005               	movf	write_flash@buffer,w,c
   999  000F90  240A               	addwf	write_flash@counter,w,c
  1000  000F92  6ED9               	movwf	fsr2l,c
  1001  000F94  6ADA               	clrf	fsr2h,c
  1002  000F96  50DF               	movf	indf2,w,c
  1003  000F98  6EF5               	movwf	tablat,c	;volatile
  1004  000F9A  000D               	tblwt		*+	;# 
  1005  000F9C  4A0A               	infsnz	write_flash@counter,f,c
  1006  000F9E  2A0B               	incf	write_flash@counter+1,f,c
  1007  000FA0                     l1107:
  1008  000FA0  5006               	movf	write_flash@length,w,c
  1009  000FA2  6E07               	movwf	??_write_flash& (0+255),c
  1010  000FA4  6A08               	clrf	(??_write_flash+1)& (0+255),c
  1011  000FA6  5007               	movf	??_write_flash,w,c
  1012  000FA8  5C0A               	subwf	write_flash@counter,w,c
  1013  000FAA  500B               	movf	write_flash@counter+1,w,c
  1014  000FAC  0A80               	xorlw	128
  1015  000FAE  6E09               	movwf	(??_write_flash+2)& (0+255),c
  1016  000FB0  5008               	movf	??_write_flash+1,w,c
  1017  000FB2  0A80               	xorlw	128
  1018  000FB4  5809               	subwfb	(??_write_flash+2)& (0+255),w,c
  1019  000FB6  E3EB               	bnc	l1103
  1020  000FB8  000A               	tblrd		*-	;# 
  1021                           
  1022                           ;main.c: 784: EECON2 = 0x55;
  1023  000FBA  0E55               	movlw	85
  1024  000FBC  6E7E               	movwf	3966,c	;volatile
  1025                           
  1026                           ;main.c: 785: EECON2 = 0xAA;
  1027  000FBE  0EAA               	movlw	170
  1028  000FC0  6E7E               	movwf	3966,c	;volatile
  1029                           
  1030                           ;main.c: 787: EECON1bits.WR = 1;
  1031  000FC2  827F               	bsf	3967,1,c	;volatile
  1032                           
  1033                           ;main.c: 793: INTCONbits.GIE = 1;
  1034  000FC4  8EF2               	bsf	intcon,7,c	;volatile
  1035  000FC6                     l203:
  1036  000FC6  ACB7               	btfss	4023,6,c	;volatile
  1037  000FC8  D7FE               	goto	l203
  1038                           
  1039                           ;main.c: 796: PIR4bits.EEIF = 0;
  1040  000FCA  9CB7               	bcf	4023,6,c	;volatile
  1041                           
  1042                           ;main.c: 797: EECON1bits.WREN = 0;
  1043  000FCC  947F               	bcf	3967,2,c	;volatile
  1044  000FCE  0012               	return		;funcret
  1045  000FD0                     __end_of_write_flash:
  1046                           	opt stack 0
  1047                           tblptru	equ	0xFF8
  1048                           tblptrh	equ	0xFF7
  1049                           tblptrl	equ	0xFF6
  1050                           tablat	equ	0xFF5
  1051                           intcon	equ	0xFF2
  1052                           postinc0	equ	0xFEE
  1053                           wreg	equ	0xFE8
  1054                           indf2	equ	0xFDF
  1055                           fsr2h	equ	0xFDA
  1056                           fsr2l	equ	0xFD9
  1057                           status	equ	0xFD8
  1058                           
  1059 ;; *************** function _send_boot_version *****************
  1060 ;; Defined at:
  1061 ;;		line 487 in file "main.c"
  1062 ;; Parameters:    Size  Location     Type
  1063 ;;  buf             1    wreg     PTR unsigned char 
  1064 ;;		 -> STR_1(6), 
  1065 ;; Auto vars:     Size  Location     Type
  1066 ;;  buf             1    4[COMRAM] PTR unsigned char 
  1067 ;;		 -> STR_1(6), 
  1068 ;;  i               1    3[COMRAM] unsigned char 
  1069 ;; Return value:  Size  Location     Type
  1070 ;;		None               void
  1071 ;; Registers used:
  1072 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1073 ;; Tracked objects:
  1074 ;;		On entry : 0/0
  1075 ;;		On exit  : 0/0
  1076 ;;		Unchanged: 0/0
  1077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1079 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1080 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1081 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1082 ;;Total ram usage:        4 bytes
  1083 ;; Hardware stack levels used:    1
  1084 ;; Hardware stack levels required when called:    1
  1085 ;; This function calls:
  1086 ;;		_UART_putchar
  1087 ;; This function is called by:
  1088 ;;		_bootloader_state_machine
  1089 ;; This function uses a non-reentrant model
  1090 ;;
  1091                           
  1092                           	psect	text3
  1093  000BFE                     __ptext3:
  1094                           	opt stack 0
  1095  000BFE                     _send_boot_version:
  1096                           	opt stack 28
  1097                           
  1098                           ;incstack = 0
  1099                           ;send_boot_version@buf stored from wreg
  1100  000BFE  6E05               	movwf	send_boot_version@buf,c
  1101                           
  1102                           ;main.c: 489: u8 i = 0x00;
  1103  000C00  6A04               	clrf	send_boot_version@i,c
  1104  000C02                     l1077:
  1105                           
  1106                           ;main.c: 492: if(buf[i] != '\0'){
  1107  000C02  5005               	movf	send_boot_version@buf,w,c
  1108  000C04  2404               	addwf	send_boot_version@i,w,c
  1109  000C06  6E02               	movwf	??_send_boot_version& (0+255),c
  1110  000C08  C002  FFF6         	movff	??_send_boot_version,tblptrl
  1111  000C0C                     	if	1	;There is more than 1 active tblptr byte
  1112  000C0C  0E0F               	movlw	high __smallconst
  1113  000C0E  6EF7               	movwf	tblptrh,c
  1114  000C10                     	endif
  1115  000C10                     	if	0	;tblptru may be non-zero
  1116  000C10                     	endif
  1117  000C10                     	if	0	;tblptru may be non-zero
  1118  000C10                     	endif
  1119  000C10  0008               	tblrd		*
  1120  000C12  50F5               	movf	tablat,w,c
  1121  000C14  E00B               	bz	l1081
  1122                           
  1123                           ;main.c: 493: UART_putchar(buf[i]);
  1124  000C16  5005               	movf	send_boot_version@buf,w,c
  1125  000C18  2404               	addwf	send_boot_version@i,w,c
  1126  000C1A  6E02               	movwf	??_send_boot_version& (0+255),c
  1127  000C1C  C002  FFF6         	movff	??_send_boot_version,tblptrl
  1128  000C20                     	if	1	;There is more than 1 active tblptr byte
  1129  000C20  0E0F               	movlw	high __smallconst
  1130  000C22  6EF7               	movwf	tblptrh,c
  1131  000C24                     	endif
  1132  000C24                     	if	0	;tblptru may be non-zero
  1133  000C24                     	endif
  1134  000C24                     	if	0	;tblptru may be non-zero
  1135  000C24                     	endif
  1136  000C24  0008               	tblrd		*
  1137  000C26  50F5               	movf	tablat,w,c
  1138  000C28  ECB1  F005         	call	_UART_putchar
  1139  000C2C                     l1081:
  1140                           
  1141                           ;main.c: 494: }
  1142                           ;main.c: 495: }while(buf[i++] != '\0');
  1143  000C2C  2A04               	incf	send_boot_version@i,f,c
  1144  000C2E  0404               	decf	send_boot_version@i,w,c
  1145  000C30  6E02               	movwf	??_send_boot_version& (0+255),c
  1146  000C32  5005               	movf	send_boot_version@buf,w,c
  1147  000C34  2402               	addwf	??_send_boot_version,w,c
  1148  000C36  6E03               	movwf	(??_send_boot_version+1)& (0+255),c
  1149  000C38  C003  FFF6         	movff	??_send_boot_version+1,tblptrl
  1150  000C3C                     	if	1	;There is more than 1 active tblptr byte
  1151  000C3C  0E0F               	movlw	high __smallconst
  1152  000C3E  6EF7               	movwf	tblptrh,c
  1153  000C40                     	endif
  1154  000C40                     	if	0	;tblptru may be non-zero
  1155  000C40                     	endif
  1156  000C40                     	if	0	;tblptru may be non-zero
  1157  000C40                     	endif
  1158  000C40  0008               	tblrd		*
  1159  000C42  50F5               	movf	tablat,w,c
  1160  000C44  B4D8               	btfsc	status,2,c
  1161  000C46  0012               	return		;funcret
  1162  000C48  D7DC               	goto	l1077
  1163  000C4A                     __end_of_send_boot_version:
  1164                           	opt stack 0
  1165                           tblptru	equ	0xFF8
  1166                           tblptrh	equ	0xFF7
  1167                           tblptrl	equ	0xFF6
  1168                           tablat	equ	0xFF5
  1169                           intcon	equ	0xFF2
  1170                           postinc0	equ	0xFEE
  1171                           wreg	equ	0xFE8
  1172                           indf2	equ	0xFDF
  1173                           fsr2h	equ	0xFDA
  1174                           fsr2l	equ	0xFD9
  1175                           status	equ	0xFD8
  1176                           
  1177 ;; *************** function _UART_putchar *****************
  1178 ;; Defined at:
  1179 ;;		line 444 in file "main.c"
  1180 ;; Parameters:    Size  Location     Type
  1181 ;;  outchar         1    wreg     unsigned char 
  1182 ;; Auto vars:     Size  Location     Type
  1183 ;;  outchar         1    0[COMRAM] unsigned char 
  1184 ;; Return value:  Size  Location     Type
  1185 ;;		None               void
  1186 ;; Registers used:
  1187 ;;		wreg
  1188 ;; Tracked objects:
  1189 ;;		On entry : 0/0
  1190 ;;		On exit  : 0/0
  1191 ;;		Unchanged: 0/0
  1192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1194 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1196 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1197 ;;Total ram usage:        1 bytes
  1198 ;; Hardware stack levels used:    1
  1199 ;; This function calls:
  1200 ;;		Nothing
  1201 ;; This function is called by:
  1202 ;;		_send_boot_version
  1203 ;;		_bootloader_state_machine
  1204 ;; This function uses a non-reentrant model
  1205 ;;
  1206                           
  1207                           	psect	text4
  1208  000B62                     __ptext4:
  1209                           	opt stack 0
  1210  000B62                     _UART_putchar:
  1211                           	opt stack 28
  1212                           
  1213                           ;incstack = 0
  1214                           ;UART_putchar@outchar stored from wreg
  1215  000B62  6E01               	movwf	UART_putchar@outchar,c
  1216  000B64                     l80:
  1217  000B64  A2AC               	btfss	4012,1,c	;volatile
  1218  000B66  D7FE               	goto	l80
  1219                           
  1220                           ;main.c: 448: TXREG1 = outchar;
  1221  000B68  C001  FFAD         	movff	UART_putchar@outchar,4013	;volatile
  1222  000B6C                     l83:
  1223  000B6C  B2AC               	btfsc	4012,1,c	;volatile
  1224  000B6E  0012               	return		;funcret
  1225  000B70  D7FD               	goto	l83
  1226  000B72                     __end_of_UART_putchar:
  1227                           	opt stack 0
  1228                           tblptru	equ	0xFF8
  1229                           tblptrh	equ	0xFF7
  1230                           tblptrl	equ	0xFF6
  1231                           tablat	equ	0xFF5
  1232                           intcon	equ	0xFF2
  1233                           postinc0	equ	0xFEE
  1234                           wreg	equ	0xFE8
  1235                           indf2	equ	0xFDF
  1236                           fsr2h	equ	0xFDA
  1237                           fsr2l	equ	0xFD9
  1238                           status	equ	0xFD8
  1239                           
  1240 ;; *************** function _jump_to_app *****************
  1241 ;; Defined at:
  1242 ;;		line 691 in file "main.c"
  1243 ;; Parameters:    Size  Location     Type
  1244 ;;		None
  1245 ;; Auto vars:     Size  Location     Type
  1246 ;;		None
  1247 ;; Return value:  Size  Location     Type
  1248 ;;		None               void
  1249 ;; Registers used:
  1250 ;;		wreg, status,2, status,0
  1251 ;; Tracked objects:
  1252 ;;		On entry : 0/0
  1253 ;;		On exit  : 0/0
  1254 ;;		Unchanged: 0/0
  1255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1260 ;;Total ram usage:        0 bytes
  1261 ;; Hardware stack levels used:    1
  1262 ;; This function calls:
  1263 ;;		Nothing
  1264 ;; This function is called by:
  1265 ;;		_bootloader_state_machine
  1266 ;; This function uses a non-reentrant model
  1267 ;;
  1268                           
  1269                           	psect	text5
  1270  000B58                     __ptext5:
  1271                           	opt stack 0
  1272  000B58                     _jump_to_app:
  1273                           	opt stack 29
  1274                           
  1275                           ;main.c: 693: RCON |= 0x93;
  1276                           
  1277                           ;incstack = 0
  1278  000B58  0E93               	movlw	147
  1279  000B5A  12D0               	iorwf	4048,f,c	;volatile
  1280  000B5C  EF00 F008          	goto	4096	;# 
  1281  000B60  0012               	return		;funcret
  1282  000B62                     __end_of_jump_to_app:
  1283                           	opt stack 0
  1284                           tblptru	equ	0xFF8
  1285                           tblptrh	equ	0xFF7
  1286                           tblptrl	equ	0xFF6
  1287                           tablat	equ	0xFF5
  1288                           intcon	equ	0xFF2
  1289                           postinc0	equ	0xFEE
  1290                           wreg	equ	0xFE8
  1291                           indf2	equ	0xFDF
  1292                           fsr2h	equ	0xFDA
  1293                           fsr2l	equ	0xFD9
  1294                           status	equ	0xFD8
  1295                           
  1296 ;; *************** function _erase_flash *****************
  1297 ;; Defined at:
  1298 ;;		line 700 in file "main.c"
  1299 ;; Parameters:    Size  Location     Type
  1300 ;;  address         4    0[COMRAM] unsigned long 
  1301 ;; Auto vars:     Size  Location     Type
  1302 ;;		None
  1303 ;; Return value:  Size  Location     Type
  1304 ;;		None               void
  1305 ;; Registers used:
  1306 ;;		wreg, status,2
  1307 ;; Tracked objects:
  1308 ;;		On entry : 0/0
  1309 ;;		On exit  : 0/0
  1310 ;;		Unchanged: 0/0
  1311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1312 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1315 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1316 ;;Total ram usage:        4 bytes
  1317 ;; Hardware stack levels used:    1
  1318 ;; This function calls:
  1319 ;;		Nothing
  1320 ;; This function is called by:
  1321 ;;		_bootloader_state_machine
  1322 ;; This function uses a non-reentrant model
  1323 ;;
  1324                           
  1325                           	psect	text6
  1326  000FD0                     __ptext6:
  1327                           	opt stack 0
  1328  000FD0                     _erase_flash:
  1329                           	opt stack 29
  1330                           
  1331                           ;main.c: 702: PIR4bits.EEIF = 0;
  1332                           
  1333                           ;incstack = 0
  1334  000FD0  9CB7               	bcf	4023,6,c	;volatile
  1335                           
  1336                           ;main.c: 704: TBLPTRL = (address) & 0xFF;
  1337  000FD2  C001  FFF6         	movff	erase_flash@address,tblptrl	;volatile
  1338                           
  1339                           ;main.c: 705: TBLPTRH = (address >> 8) & 0xFF;
  1340  000FD6  C002  FFF7         	movff	erase_flash@address+1,tblptrh	;volatile
  1341                           
  1342                           ;main.c: 706: TBLPTRU = (address >> 16) & 0xFF;
  1343  000FDA  C003  FFF8         	movff	erase_flash@address+2,tblptru	;volatile
  1344                           
  1345                           ;main.c: 719: EECON1 = 0xA4;
  1346  000FDE  0EA4               	movlw	164
  1347  000FE0  6E7F               	movwf	3967,c	;volatile
  1348                           
  1349                           ;main.c: 721: EECON1bits.FREE = 1;
  1350  000FE2  887F               	bsf	3967,4,c	;volatile
  1351                           
  1352                           ;main.c: 722: EECON2 = 0x55;
  1353  000FE4  0E55               	movlw	85
  1354  000FE6  6E7E               	movwf	3966,c	;volatile
  1355                           
  1356                           ;main.c: 723: EECON2 = 0xAA;
  1357  000FE8  0EAA               	movlw	170
  1358  000FEA  6E7E               	movwf	3966,c	;volatile
  1359                           
  1360                           ;main.c: 724: EECON1bits.WR = 1;
  1361  000FEC  827F               	bsf	3967,1,c	;volatile
  1362                           
  1363                           ;main.c: 725: EECON1bits.FREE = 0;
  1364  000FEE  987F               	bcf	3967,4,c	;volatile
  1365                           
  1366                           ;main.c: 727: INTCONbits.GIE = 1;
  1367  000FF0  8EF2               	bsf	intcon,7,c	;volatile
  1368  000FF2                     l194:
  1369  000FF2  ACB7               	btfss	4023,6,c	;volatile
  1370  000FF4  D7FE               	goto	l194
  1371                           
  1372                           ;main.c: 730: PIR4bits.EEIF = 0;
  1373  000FF6  9CB7               	bcf	4023,6,c	;volatile
  1374                           
  1375                           ;main.c: 731: EECON1bits.WREN = 0;
  1376  000FF8  947F               	bcf	3967,2,c	;volatile
  1377                           
  1378                           ;main.c: 733: INTCONbits.GIE = 0;
  1379  000FFA  9EF2               	bcf	intcon,7,c	;volatile
  1380  000FFC  0012               	return		;funcret
  1381  000FFE                     __end_of_erase_flash:
  1382                           	opt stack 0
  1383                           tblptru	equ	0xFF8
  1384                           tblptrh	equ	0xFF7
  1385                           tblptrl	equ	0xFF6
  1386                           tablat	equ	0xFF5
  1387                           intcon	equ	0xFF2
  1388                           postinc0	equ	0xFEE
  1389                           wreg	equ	0xFE8
  1390                           indf2	equ	0xFDF
  1391                           fsr2h	equ	0xFDA
  1392                           fsr2l	equ	0xFD9
  1393                           status	equ	0xFD8
  1394                           
  1395 ;; *************** function _clear_buffer *****************
  1396 ;; Defined at:
  1397 ;;		line 679 in file "main.c"
  1398 ;; Parameters:    Size  Location     Type
  1399 ;;  buf             1    wreg     PTR unsigned char 
  1400 ;;		 -> gbuffer(64), 
  1401 ;;  idx             2    0[COMRAM] unsigned int 
  1402 ;; Auto vars:     Size  Location     Type
  1403 ;;  buf             1    2[COMRAM] PTR unsigned char 
  1404 ;;		 -> gbuffer(64), 
  1405 ;;  i               2    3[COMRAM] unsigned int 
  1406 ;; Return value:  Size  Location     Type
  1407 ;;		None               void
  1408 ;; Registers used:
  1409 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1410 ;; Tracked objects:
  1411 ;;		On entry : 0/0
  1412 ;;		On exit  : 0/0
  1413 ;;		Unchanged: 0/0
  1414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1415 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1416 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1418 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1419 ;;Total ram usage:        5 bytes
  1420 ;; Hardware stack levels used:    1
  1421 ;; This function calls:
  1422 ;;		Nothing
  1423 ;; This function is called by:
  1424 ;;		_bootloader_state_machine
  1425 ;; This function uses a non-reentrant model
  1426 ;;
  1427                           
  1428                           	psect	text7
  1429  000BD6                     __ptext7:
  1430                           	opt stack 0
  1431  000BD6                     _clear_buffer:
  1432                           	opt stack 29
  1433                           
  1434                           ;incstack = 0
  1435                           ;clear_buffer@buf stored from wreg
  1436  000BD6  6E03               	movwf	clear_buffer@buf,c
  1437                           
  1438                           ;main.c: 681: u16 i = 0x00;
  1439  000BD8  6A04               	clrf	clear_buffer@i,c
  1440  000BDA  6A05               	clrf	clear_buffer@i+1,c
  1441                           
  1442                           ;main.c: 682: for(i=0; i<idx; i++)
  1443  000BDC  6A04               	clrf	clear_buffer@i,c
  1444  000BDE  6A05               	clrf	clear_buffer@i+1,c
  1445  000BE0  D007               	goto	l1121
  1446  000BE2                     l1117:
  1447                           
  1448                           ;main.c: 683: {
  1449                           ;main.c: 684: buf[i]=0xFF;
  1450  000BE2  5003               	movf	clear_buffer@buf,w,c
  1451  000BE4  2404               	addwf	clear_buffer@i,w,c
  1452  000BE6  6ED9               	movwf	fsr2l,c
  1453  000BE8  6ADA               	clrf	fsr2h,c
  1454  000BEA  68DF               	setf	indf2,c
  1455  000BEC  4A04               	infsnz	clear_buffer@i,f,c
  1456  000BEE  2A05               	incf	clear_buffer@i+1,f,c
  1457  000BF0                     l1121:
  1458  000BF0  5001               	movf	clear_buffer@idx,w,c
  1459  000BF2  5C04               	subwf	clear_buffer@i,w,c
  1460  000BF4  5002               	movf	clear_buffer@idx+1,w,c
  1461  000BF6  5805               	subwfb	clear_buffer@i+1,w,c
  1462  000BF8  B0D8               	btfsc	status,0,c
  1463  000BFA  0012               	return		;funcret
  1464  000BFC  D7F2               	goto	l1117
  1465  000BFE                     __end_of_clear_buffer:
  1466                           	opt stack 0
  1467                           tblptru	equ	0xFF8
  1468                           tblptrh	equ	0xFF7
  1469                           tblptrl	equ	0xFF6
  1470                           tablat	equ	0xFF5
  1471                           intcon	equ	0xFF2
  1472                           postinc0	equ	0xFEE
  1473                           wreg	equ	0xFE8
  1474                           indf2	equ	0xFDF
  1475                           fsr2h	equ	0xFDA
  1476                           fsr2l	equ	0xFD9
  1477                           status	equ	0xFD8
  1478                           
  1479 ;; *************** function _UART_wait_for_char *****************
  1480 ;; Defined at:
  1481 ;;		line 474 in file "main.c"
  1482 ;; Parameters:    Size  Location     Type
  1483 ;;		None
  1484 ;; Auto vars:     Size  Location     Type
  1485 ;;		None
  1486 ;; Return value:  Size  Location     Type
  1487 ;;                  1    wreg      unsigned char 
  1488 ;; Registers used:
  1489 ;;		wreg, status,2
  1490 ;; Tracked objects:
  1491 ;;		On entry : 0/0
  1492 ;;		On exit  : 0/0
  1493 ;;		Unchanged: 0/0
  1494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1499 ;;Total ram usage:        0 bytes
  1500 ;; Hardware stack levels used:    1
  1501 ;; This function calls:
  1502 ;;		Nothing
  1503 ;; This function is called by:
  1504 ;;		_bootloader_state_machine
  1505 ;; This function uses a non-reentrant model
  1506 ;;
  1507                           
  1508                           	psect	text8
  1509  000B72                     __ptext8:
  1510                           	opt stack 0
  1511  000B72                     _UART_wait_for_char:
  1512                           	opt stack 29
  1513  000B72                     l100:
  1514  000B72  AA9E               	btfss	3998,5,c	;volatile
  1515  000B74  D7FE               	goto	l100
  1516                           
  1517                           ;main.c: 477: if( (RCSTAbits.FERR == 1) || (RCSTAbits.OERR == 1) ){
  1518  000B76  B4AB               	btfsc	4011,2,c	;volatile
  1519  000B78  D002               	goto	l105
  1520  000B7A  A2AB               	btfss	4011,1,c	;volatile
  1521  000B7C  D002               	goto	l1071
  1522  000B7E                     l105:
  1523                           
  1524                           ;main.c: 478: RCSTAbits.CREN = 0;
  1525  000B7E  98AB               	bcf	4011,4,c	;volatile
  1526                           
  1527                           ;main.c: 479: RCSTAbits.CREN = 1;
  1528  000B80  88AB               	bsf	4011,4,c	;volatile
  1529  000B82                     l1071:
  1530                           
  1531                           ;main.c: 480: }
  1532                           ;main.c: 481: return((u8)RCREG1);
  1533  000B82  50AE               	movf	4014,w,c	;volatile
  1534  000B84  0012               	return		;funcret
  1535  000B86                     __end_of_UART_wait_for_char:
  1536                           	opt stack 0
  1537                           tblptru	equ	0xFF8
  1538                           tblptrh	equ	0xFF7
  1539                           tblptrl	equ	0xFF6
  1540                           tablat	equ	0xFF5
  1541                           intcon	equ	0xFF2
  1542                           postinc0	equ	0xFEE
  1543                           wreg	equ	0xFE8
  1544                           indf2	equ	0xFDF
  1545                           fsr2h	equ	0xFDA
  1546                           fsr2l	equ	0xFD9
  1547                           status	equ	0xFD8
  1548                           
  1549 ;; *************** function _UART_init *****************
  1550 ;; Defined at:
  1551 ;;		line 417 in file "main.c"
  1552 ;; Parameters:    Size  Location     Type
  1553 ;;		None
  1554 ;; Auto vars:     Size  Location     Type
  1555 ;;		None
  1556 ;; Return value:  Size  Location     Type
  1557 ;;		None               void
  1558 ;; Registers used:
  1559 ;;		wreg, status,2
  1560 ;; Tracked objects:
  1561 ;;		On entry : 0/0
  1562 ;;		On exit  : 0/0
  1563 ;;		Unchanged: 0/0
  1564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1569 ;;Total ram usage:        0 bytes
  1570 ;; Hardware stack levels used:    1
  1571 ;; This function calls:
  1572 ;;		Nothing
  1573 ;; This function is called by:
  1574 ;;		_main
  1575 ;; This function uses a non-reentrant model
  1576 ;;
  1577                           
  1578                           	psect	text9
  1579  000B86                     __ptext9:
  1580                           	opt stack 0
  1581  000B86                     _UART_init:
  1582                           	opt stack 30
  1583                           
  1584                           ;main.c: 419: TRISCbits.TRISC6 = 0;
  1585                           
  1586                           ;incstack = 0
  1587  000B86  9C94               	bcf	3988,6,c	;volatile
  1588                           
  1589                           ;main.c: 420: TRISCbits.TRISC7 = 1;
  1590  000B88  8E94               	bsf	3988,7,c	;volatile
  1591                           
  1592                           ;main.c: 426: TXSTAbits.SYNC = 0;
  1593  000B8A  98AC               	bcf	4012,4,c	;volatile
  1594                           
  1595                           ;main.c: 427: TXSTAbits.BRGH = 0;
  1596  000B8C  94AC               	bcf	4012,2,c	;volatile
  1597                           
  1598                           ;main.c: 428: BAUDCON1bits.BRG16 = 0;
  1599  000B8E  96A7               	bcf	4007,3,c	;volatile
  1600                           
  1601                           ;main.c: 429: SPBRG = 103;
  1602  000B90  0E67               	movlw	103
  1603  000B92  6EAF               	movwf	4015,c	;volatile
  1604                           
  1605                           ;main.c: 432: TXSTAbits.TXEN = 1;
  1606  000B94  8AAC               	bsf	4012,5,c	;volatile
  1607                           
  1608                           ;main.c: 435: RCSTAbits.SPEN = 1;
  1609  000B96  8EAB               	bsf	4011,7,c	;volatile
  1610                           
  1611                           ;main.c: 438: RCSTAbits.CREN = 1;
  1612  000B98  88AB               	bsf	4011,4,c	;volatile
  1613  000B9A  0012               	return		;funcret
  1614  000B9C                     __end_of_UART_init:
  1615                           	opt stack 0
  1616                           tblptru	equ	0xFF8
  1617                           tblptrh	equ	0xFF7
  1618                           tblptrl	equ	0xFF6
  1619                           tablat	equ	0xFF5
  1620                           intcon	equ	0xFF2
  1621                           postinc0	equ	0xFEE
  1622                           wreg	equ	0xFE8
  1623                           indf2	equ	0xFDF
  1624                           fsr2h	equ	0xFDA
  1625                           fsr2l	equ	0xFD9
  1626                           status	equ	0xFD8
  1627                           
  1628 ;; *************** function _UART_getchar *****************
  1629 ;; Defined at:
  1630 ;;		line 456 in file "main.c"
  1631 ;; Parameters:    Size  Location     Type
  1632 ;;		None
  1633 ;; Auto vars:     Size  Location     Type
  1634 ;;		None
  1635 ;; Return value:  Size  Location     Type
  1636 ;;                  1    wreg      unsigned char 
  1637 ;; Registers used:
  1638 ;;		wreg, status,2
  1639 ;; Tracked objects:
  1640 ;;		On entry : 0/0
  1641 ;;		On exit  : 0/0
  1642 ;;		Unchanged: 0/0
  1643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1648 ;;Total ram usage:        0 bytes
  1649 ;; Hardware stack levels used:    1
  1650 ;; This function calls:
  1651 ;;		Nothing
  1652 ;; This function is called by:
  1653 ;;		_main
  1654 ;; This function uses a non-reentrant model
  1655 ;;
  1656                           
  1657                           	psect	text10
  1658  000B9C                     __ptext10:
  1659                           	opt stack 0
  1660  000B9C                     _UART_getchar:
  1661                           	opt stack 30
  1662                           
  1663                           ;main.c: 458: if(RCIF){
  1664                           
  1665                           ;incstack = 0
  1666  000B9C  AA9E               	btfss	3998,5,c	;volatile
  1667  000B9E  0C00               	retlw	0
  1668  000BA0                     l90:
  1669  000BA0  AA9E               	btfss	3998,5,c	;volatile
  1670  000BA2  D7FE               	goto	l90
  1671                           
  1672                           ;main.c: 460: if( (RCSTAbits.FERR == 1) || (RCSTAbits.OERR == 1) ){
  1673  000BA4  B4AB               	btfsc	4011,2,c	;volatile
  1674  000BA6  D002               	goto	l95
  1675  000BA8  A2AB               	btfss	4011,1,c	;volatile
  1676  000BAA  D002               	goto	l863
  1677  000BAC                     l95:
  1678                           
  1679                           ;main.c: 461: RCSTAbits.CREN = 0;
  1680  000BAC  98AB               	bcf	4011,4,c	;volatile
  1681                           
  1682                           ;main.c: 462: RCSTAbits.CREN = 1;
  1683  000BAE  88AB               	bsf	4011,4,c	;volatile
  1684  000BB0                     l863:
  1685                           
  1686                           ;main.c: 463: }
  1687                           ;main.c: 464: return((u8)RCREG1);
  1688  000BB0  50AE               	movf	4014,w,c	;volatile
  1689  000BB2  0012               	return	
  1690  000BB4                     __end_of_UART_getchar:
  1691                           	opt stack 0
  1692                           tblptru	equ	0xFF8
  1693                           tblptrh	equ	0xFF7
  1694                           tblptrl	equ	0xFF6
  1695                           tablat	equ	0xFF5
  1696                           intcon	equ	0xFF2
  1697                           postinc0	equ	0xFEE
  1698                           wreg	equ	0xFE8
  1699                           indf2	equ	0xFDF
  1700                           fsr2h	equ	0xFDA
  1701                           fsr2l	equ	0xFD9
  1702                           status	equ	0xFD8
  1703                           tblptru	equ	0xFF8
  1704                           tblptrh	equ	0xFF7
  1705                           tblptrl	equ	0xFF6
  1706                           tablat	equ	0xFF5
  1707                           intcon	equ	0xFF2
  1708                           postinc0	equ	0xFEE
  1709                           wreg	equ	0xFE8
  1710                           indf2	equ	0xFDF
  1711                           fsr2h	equ	0xFDA
  1712                           fsr2l	equ	0xFD9
  1713                           status	equ	0xFD8
  1714                           
  1715                           	psect	rparam
  1716  0000                     tblptru	equ	0xFF8
  1717                           tblptrh	equ	0xFF7
  1718                           tblptrl	equ	0xFF6
  1719                           tablat	equ	0xFF5
  1720                           intcon	equ	0xFF2
  1721                           postinc0	equ	0xFEE
  1722                           wreg	equ	0xFE8
  1723                           indf2	equ	0xFDF
  1724                           fsr2h	equ	0xFDA
  1725                           fsr2l	equ	0xFD9
  1726                           status	equ	0xFD8


Data Sizes:
    Strings     6
    Constant    0
    Data        0
    BSS         79
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     29      44
    BANK0           160      0      64
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    write_flash@buffer	PTR unsigned char  size(1) Largest target is 64
		 -> gbuffer(BANK0[64]), 

    clear_buffer@buf	PTR unsigned char  size(1) Largest target is 64
		 -> gbuffer(BANK0[64]), 

    send_boot_version@buf	PTR unsigned char  size(1) Largest target is 6
		 -> STR_1(CODE[6]), 


Critical Paths under _main in COMRAM

    _main->_bootloader_state_machine
    _bootloader_state_machine->_write_flash
    _send_boot_version->_UART_putchar

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     4      5    1216
                                             20 COMRAM     9     4      5
                       _UART_getchar
                          _UART_init
           _bootloader_state_machine
 ---------------------------------------------------------------------------------
 (1) _bootloader_state_machine                             9     9      0    1145
                                             11 COMRAM     9     9      0
                       _UART_putchar
                 _UART_wait_for_char
                       _clear_buffer
                        _erase_flash
                        _jump_to_app
                  _send_boot_version
                        _write_flash
 ---------------------------------------------------------------------------------
 (2) _write_flash                                         11     5      6     476
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (2) _send_boot_version                                    4     4      0     182
                                              1 COMRAM     4     4      0
                       _UART_putchar
 ---------------------------------------------------------------------------------
 (3) _UART_putchar                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _jump_to_app                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _erase_flash                                          4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _clear_buffer                                         5     3      2     251
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _UART_wait_for_char                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_getchar                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_getchar
   _UART_init
   _bootloader_state_machine
     _UART_putchar
     _UART_wait_for_char
     _clear_buffer
     _erase_flash
     _jump_to_app
     _send_boot_version
       _UART_putchar
     _write_flash

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      40       5       40.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1D      2C       1       46.3%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      6C       6        0.0%
DATA                 0      0      6C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Thu Jul 23 21:47:55 2015

                                    l80 0B64                                      l90 0BA0  
                                    l83 0B6C                                      l95 0BAC  
                           __CFG_BORV$1 000000                            __CFG_CP0$OFF 000000  
                          __CFG_CP1$OFF 000000                            __CFG_CP2$OFF 000000  
                          __CFG_CP3$OFF 000000                                     l100 0B72  
                                   l105 0B7E                                     l203 0FC6  
                                   l152 0EBA                                     l194 0FF2  
                                   l863 0BB0                            ?_erase_flash 0001  
                          __CFG_CPB$OFF 000000                                     u600 0CC8  
                          __CFG_CPD$OFF 000000                                     u700 0D7C  
             __end_of_send_boot_version 0C4A       __size_of_bootloader_state_machine 02B6  
                                   wreg 000FE8                              _TXSTA1bits 000FAC  
             ?_bootloader_state_machine 0001      bootloader_state_machine@page_index 0024  
                                  l1103 0F8E                                    l1121 0BF0  
                                  l1107 0FA0                                    l1131 0C5E  
                                  l1117 0BE2                                    l1213 0DC2  
                                  l1301 0F3E                                    l1071 0B82  
                                  l1231 0DF2                                    l1223 0DDC  
                                  l1151 0CA0                                    l1135 0C64  
                                  l1127 0C4E                                    l1081 0C2C  
                                  l1241 0E0A                                    l1161 0CCE  
                                  l1313 0F6A                                    l1251 0E2A  
                                  l1243 0E14                                    l1235 0DFA  
                                  l1219 0DD4                                    l1227 0DE6  
                                  l1171 0D00                                    l1307 0F52  
                                  l1077 0C02                                    l1245 0E1A  
                                  l1263 0E44                                    l1255 0E32  
                                  l1247 0E1E                                    l1191 0D42  
                                  l1283 0ED6                                    l1267 0E4C  
                                  l1275 0E98                                    l1277 0E9C  
                                  l1199 0D62                                    l1295 0F20  
                                  l1289 0EE0                                    l1299 0F32  
                                  STR_1 0F01                                    _RCIF 007CF5  
                                  _RCON 000FD0                           __CFG_FCMEN$ON 000000  
    bootloader_state_machine@byte_index 0022                                    _main 0F08  
                                  fsr2h 000FDA                                    indf2 000FDF  
                                  fsr2l 000FD9                                    start 0004  
                         __CFG_IESO$OFF 000000                           __CFG_MCLRE$ON 000000  
                          ___param_bank 000010                    send_boot_version@buf 0005  
                          _BAUDCON1bits 000FA7                                   ?_main 0015  
          bootloader_state_machine@temp 002C                                   _SPBRG 000FAF  
                  __end_of_clear_buffer 0BFE                           __CFG_WRT0$OFF 000000  
                         __CFG_WRT1$OFF 000000                           __CFG_WRT2$OFF 000000  
                           _write_flash 0F74                           __CFG_WRT3$OFF 000000  
                        __CFG_EBTR0$OFF 000000                          __CFG_EBTR1$OFF 000000  
                        __CFG_EBTR2$OFF 000000                          __CFG_EBTR3$OFF 000000  
                         __CFG_WRTB$OFF 000000                           __CFG_WRTC$OFF 000000  
                         __CFG_WRTD$OFF 000000                          __CFG_EBTRB$OFF 000000  
                    __size_of_UART_init 0016                                   tablat 000FF5  
                                 status 000FD8                         __initialization 0BB4  
                          __end_of_main 0F74   bootloader_state_machine@end_of_record 002A  
                                ??_main 001A                           __activetblptr 000002  
                        __CFG_PLLCFG$ON 000000              __size_of_send_boot_version 004C  
                        __CFG_RETEN$OFF 000000     bootloader_state_machine@record_type 0026  
                                _EECON1 000F7F                                  _EECON2 000F7E  
                       __CFG_BBSIZ$BB2K 000000                          __CFG_WDTEN$OFF 000000  
         bootloader_state_machine@state 0010                                  _TABLAT 000FF5  
                                _RCREG1 000FAE                            ?_jump_to_app 0001  
                        __CFG_WDTPS$256 000000                                  _TXREG1 000FAD  
                        __CFG_XINST$OFF 000000                       __end_of_UART_init 0B9C  
                        __CFG_STVREN$ON 000000                                  clear_0 0BBA  
                                clear_1 0BC6                            __mediumconst 0000  
                  __size_of_erase_flash 002E                                  tblptrh 000FF7  
                                tblptrl 000FF6                                  tblptru 000FF8  
           bootloader_state_machine@adr 0011             bootloader_state_machine@crc 0029  
                            __accesstop 0060                 __end_of__initialization 0BCC  
                    _UART_wait_for_char 0B72                      erase_flash@address 0001  
                         ___rparam_used 000001                     ?_UART_wait_for_char 0001  
                        __pcstackCOMRAM 0001                   __size_of_clear_buffer 0028  
                  ??_UART_wait_for_char 0001                              __pbssBANK0 0060  
                   UART_putchar@outchar 0001                            _clear_buffer 0BD6  
                       clear_buffer@buf 0003                         clear_buffer@idx 0001  
                      __CFG_CANMX$PORTB 000000                            ?_write_flash 0001  
                               _TBLPTRH 000FF7                                 _TBLPTRL 000FF6  
                               _TBLPTRU 000FF8                    __size_of_jump_to_app 000A  
                       __CFG_PWRTEN$OFF 000000                                 __Hparam 0000  
                               __Lparam 0000                            __psmallconst 0F00  
                         ?_UART_getchar 0001                                 __pcinit 0BB4  
                               __ramtop 0F00                                 __ptext0 0F08  
                               __ptext1 0C4A                                 __ptext2 0F74  
                               __ptext3 0BFE                                 __ptext4 0B62  
                               __ptext5 0B58                                 __ptext6 0FD0  
                               __ptext7 0BD6                                 __ptext8 0B72  
                               __ptext9 0B86                _bootloader_state_machine 0C4A  
                               _gbuffer 0060                           ?_UART_putchar 0001  
                     __CFG_MSSPMSK$MSK7 000000                    end_of_initialization 0BCC  
                         __Lmediumconst 0000                      write_flash@address 0001  
                             _RCSTAbits 000FAB                                 postinc0 000FEE  
                    write_flash@counter 000A                          ??_UART_getchar 0001  
                             _UART_init 0B86                          ??_UART_putchar 0001  
                      __CFG_FOSC$INTIO2 000000                               _TRISBbits 000F93  
                             _TRISCbits 000F94               bootloader_state_machine@i 002B  
                    send_boot_version@i 0004                               _TXSTAbits 000FAC  
                            ?_UART_init 0001                           ??_erase_flash 0005  
                   start_initialization 0BB4                    __size_of_write_flash 005C  
                         clear_buffer@i 0004                             __pbssCOMRAM 001E  
           __size_of_UART_wait_for_char 0014                     __end_of_erase_flash 0FFE  
                  __end_of_UART_getchar 0BB4                    __end_of_UART_putchar 0B72  
            ??_bootloader_state_machine 000C                             ??_UART_init 0001  
                           __smallconst 0F00                           ??_jump_to_app 0001  
                              _LATBbits 000F8A         bootloader_state_machine@timeout 001E  
                              _PIR4bits 000FB7                       write_flash@buffer 0005  
                     write_flash@length 0006                        __CFG_SOSCSEL$DIG 000000  
                           _erase_flash 0FD0                               main@hbeat 001A  
bootloader_state_machine@byte_in_record 0028                              _EECON1bits 000F7F  
                              __Hrparam 0000                     __end_of_jump_to_app 0B62  
                              __Lrparam 0000                      __CFG_BOREN$SBORDIS 000000  
                 __size_of_UART_getchar 0018                                __ptext10 0B9C  
                 __size_of_UART_putchar 0010                           __size_of_main 006C  
                         ?_clear_buffer 0001        __end_of_bootloader_state_machine 0F00  
                              main@argc 0015                                main@argv 0017  
                          _UART_getchar 0B9C                     __CFG_INTOSCSEL$HIGH 000000  
                           _OSCTUNEbits 000F9B                              _INTCONbits 000FF2  
                         ??_write_flash 0007                            _UART_putchar 0B62  
                           _jump_to_app 0B58                          ??_clear_buffer 0003  
                            _OSCCONbits 000FD3              __end_of_UART_wait_for_char 0B86  
                     _send_boot_version 0BFE                      ?_send_boot_version 0001  
                   __end_of_write_flash 0FD0                     __CFG_BORPWR$ZPBORMV 000000  
                   ??_send_boot_version 0002  
