

Microchip Technology PIC18 PRO Macro Assembler V1.34 build -361300703 
                                                                                               Tue Jul 28 22:03:03 2015

Microchip Technology Omniscient Code Generator (PRO mode) build 201502162209
     1                           	processor	18F26K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    23                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    24  0000                     _BAUDCON1bits	set	4007
    25  0000                     _EECON1	set	3967
    26  0000                     _EECON1bits	set	3967
    27  0000                     _EECON2	set	3966
    28  0000                     _INTCONbits	set	4082
    29  0000                     _LATBbits	set	3978
    30  0000                     _OSCCONbits	set	4051
    31  0000                     _OSCTUNEbits	set	3995
    32  0000                     _PIR4bits	set	4023
    33  0000                     _RCON	set	4048
    34  0000                     _RCREG1	set	4014
    35  0000                     _RCSTAbits	set	4011
    36  0000                     _SPBRG	set	4015
    37  0000                     _TABLAT	set	4085
    38  0000                     _TBLPTRH	set	4087
    39  0000                     _TBLPTRL	set	4086
    40  0000                     _TBLPTRU	set	4088
    41  0000                     _TRISBbits	set	3987
    42  0000                     _TRISCbits	set	3988
    43  0000                     _TXREG1	set	4013
    44  0000                     _TXSTA1bits	set	4012
    45  0000                     _TXSTAbits	set	4012
    46  0000                     _RCIF	set	31989
    47                           
    48                           	psect	smallconst
    49  000F00                     __psmallconst:
    50                           	opt stack 0
    51  000F00  00                 	db	0
    52  000F01                     STR_1:
    53  000F01  31                 	db	49	;'1'
    54  000F02  2E                 	db	46
    55  000F03  30                 	db	48	;'0'
    56  000F04  2E                 	db	46
    57  000F05  61                 	db	97	;'a'
    58  000F06  00                 	db	0
    59                           
    60                           ; #config settings
    61  000F07  00                 	db	0	; dummy byte at the end
    62  0000                     
    63                           	psect	cinit
    64  0010BA                     __pcinit:
    65                           	opt stack 0
    66  0010BA                     start_initialization:
    67                           	opt stack 0
    68  0010BA                     __initialization:
    69                           	opt stack 0
    70                           
    71                           ; Clear objects allocated to BANK0 (64 bytes)
    72  0010BA  EE00  F060         	lfsr	0,__pbssBANK0
    73  0010BE  0E40               	movlw	64
    74  0010C0                     clear_0:
    75  0010C0  6AEE               	clrf	postinc0,c
    76  0010C2  06E8               	decf	wreg,f,c
    77  0010C4  E1FD               	bnz	clear_0
    78                           
    79                           ; Clear objects allocated to COMRAM (19 bytes)
    80  0010C6  EE00  F022         	lfsr	0,__pbssCOMRAM
    81  0010CA  0E13               	movlw	19
    82  0010CC                     clear_1:
    83  0010CC  6AEE               	clrf	postinc0,c
    84  0010CE  06E8               	decf	wreg,f,c
    85  0010D0  E1FD               	bnz	clear_1
    86  0010D2                     end_of_initialization:
    87                           	opt stack 0
    88  0010D2                     __end_of__initialization:
    89                           	opt stack 0
    90  0010D2  0E00               	movlw	low (__Lmediumconst shr (0+16))
    91  0010D4  6EF8               	movwf	tblptru,c
    92  0010D6  0100               	movlb	0
    93  0010D8  EF84  F007         	goto	_main	;jump to C main() function
    94                           tblptru	equ	0xFF8
    95                           postinc0	equ	0xFEE
    96                           wreg	equ	0xFE8
    97                           
    98                           	psect	bssCOMRAM
    99  000022                     __pbssCOMRAM:
   100                           	opt stack 0
   101  000022                     _address:
   102                           	opt stack 0
   103  000022                     	ds	4
   104  000026                     _timeout:
   105                           	opt stack 0
   106  000026                     	ds	4
   107  00002A                     _byte_index:
   108                           	opt stack 0
   109  00002A                     	ds	2
   110  00002C                     _offset:
   111                           	opt stack 0
   112  00002C                     	ds	2
   113  00002E                     _byte_in_record:
   114                           	opt stack 0
   115  00002E                     	ds	1
   116  00002F                     _crc:
   117                           	opt stack 0
   118  00002F                     	ds	1
   119  000030                     _end_of_record:
   120                           	opt stack 0
   121  000030                     	ds	1
   122  000031                     _i:
   123                           	opt stack 0
   124  000031                     	ds	1
   125  000032                     _record_type:
   126                           	opt stack 0
   127  000032                     	ds	1
   128  000033                     _temp:
   129                           	opt stack 0
   130  000033                     	ds	1
   131  000034                     _vl:
   132                           	opt stack 0
   133  000034                     	ds	1
   134                           tblptru	equ	0xFF8
   135                           postinc0	equ	0xFEE
   136                           wreg	equ	0xFE8
   137                           
   138                           	psect	bssBANK0
   139  000060                     __pbssBANK0:
   140                           	opt stack 0
   141  000060                     _gbuffer:
   142                           	opt stack 0
   143  000060                     	ds	64
   144                           tblptru	equ	0xFF8
   145                           postinc0	equ	0xFEE
   146                           wreg	equ	0xFE8
   147                           
   148                           	psect	cstackCOMRAM
   149  000001                     __pcstackCOMRAM:
   150                           	opt stack 0
   151  000001                     UART_putchar@outchar:
   152                           	opt stack 0
   153  000001                     ___lbmod@divisor:
   154                           	opt stack 0
   155  000001                     clear_buffer@idx:
   156                           	opt stack 0
   157  000001                     erase_flash@address:
   158                           	opt stack 0
   159  000001                     write_flash@address:
   160                           	opt stack 0
   161                           
   162                           ; 4 bytes @ 0x0
   163  000001                     	ds	1
   164  000002                     ??_send_boot_version:
   165  000002                     ___lbmod@dividend:
   166                           	opt stack 0
   167                           
   168                           ; 1 bytes @ 0x1
   169  000002                     	ds	1
   170  000003                     ___lbmod@counter:
   171                           	opt stack 0
   172  000003                     clear_buffer@i:
   173                           	opt stack 0
   174                           
   175                           ; 2 bytes @ 0x2
   176  000003                     	ds	1
   177  000004                     send_boot_version@i:
   178                           	opt stack 0
   179  000004                     ___lbmod@rem:
   180                           	opt stack 0
   181                           
   182                           ; 1 bytes @ 0x3
   183  000004                     	ds	1
   184  000005                     send_boot_version@buf:
   185                           	opt stack 0
   186  000005                     clear_buffer@buf:
   187                           	opt stack 0
   188  000005                     write_flash@buffer:
   189                           	opt stack 0
   190                           
   191                           ; 1 bytes @ 0x4
   192  000005                     	ds	1
   193  000006                     write_flash@length:
   194                           	opt stack 0
   195                           
   196                           ; 1 bytes @ 0x5
   197  000006                     	ds	1
   198  000007                     ??_write_flash:
   199                           
   200                           ; 0 bytes @ 0x6
   201  000007                     	ds	3
   202  00000A                     write_flash@counter:
   203                           	opt stack 0
   204                           
   205                           ; 2 bytes @ 0x9
   206  00000A                     	ds	2
   207  00000C                     ??_bootloader_state_machine:
   208                           
   209                           ; 0 bytes @ 0xB
   210  00000C                     	ds	8
   211  000014                     bootloader_state_machine@state:
   212                           	opt stack 0
   213                           
   214                           ; 1 bytes @ 0x13
   215  000014                     	ds	1
   216  000015                     bootloader_state_machine@adr:
   217                           	opt stack 0
   218                           
   219                           ; 4 bytes @ 0x14
   220  000015                     	ds	4
   221  000019                     
   222                           ; 2 bytes @ 0x18
   223  000019                     	ds	2
   224  00001B                     
   225                           ; 3 bytes @ 0x1A
   226  00001B                     	ds	3
   227  00001E                     main@hbeat:
   228                           	opt stack 0
   229                           
   230                           ; 4 bytes @ 0x1D
   231  00001E                     	ds	4
   232                           tblptru	equ	0xFF8
   233                           postinc0	equ	0xFEE
   234                           wreg	equ	0xFE8
   235                           
   236 ;;
   237 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   238 ;;
   239 ;; *************** function _main *****************
   240 ;; Defined at:
   241 ;;		line 364 in file "main.c"
   242 ;; Parameters:    Size  Location     Type
   243 ;;  argc            2   24[COMRAM] int 
   244 ;;  argv            3   26[COMRAM] PTR PTR unsigned char 
   245 ;; Auto vars:     Size  Location     Type
   246 ;;  hbeat           4   29[COMRAM] unsigned long 
   247 ;; Return value:  Size  Location     Type
   248 ;;                  2   24[COMRAM] int 
   249 ;; Registers used:
   250 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   251 ;; Tracked objects:
   252 ;;		On entry : 0/0
   253 ;;		On exit  : 0/0
   254 ;;		Unchanged: 0/0
   255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   256 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   257 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   259 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   260 ;;Total ram usage:        9 bytes
   261 ;; Hardware stack levels required when called:    3
   262 ;; This function calls:
   263 ;;		_UART_getchar
   264 ;;		_UART_init
   265 ;;		_bootloader_state_machine
   266 ;; This function is called by:
   267 ;;		Startup code after reset
   268 ;; This function uses a non-reentrant model
   269 ;;
   270                           
   271                           	psect	text0
   272  000F08                     __ptext0:
   273                           	opt stack 0
   274  000F08                     _main:
   275                           	opt stack 28
   276                           
   277                           ;main.c: 372: OSCCONbits.IRCF2 = 1;
   278                           
   279                           ;incstack = 0
   280  000F08  8CD3               	bsf	4051,6,c	;volatile
   281                           
   282                           ;main.c: 373: OSCCONbits.IRCF1 = 1;
   283  000F0A  8AD3               	bsf	4051,5,c	;volatile
   284                           
   285                           ;main.c: 374: OSCCONbits.IRCF0 = 1;
   286  000F0C  88D3               	bsf	4051,4,c	;volatile
   287                           
   288                           ;main.c: 377: OSCCONbits.HFIOFS = 1;
   289  000F0E  84D3               	bsf	4051,2,c	;volatile
   290                           
   291                           ;main.c: 380: OSCTUNEbits.PLLEN = 1;
   292  000F10  8C9B               	bsf	3995,6,c	;volatile
   293                           
   294                           ;main.c: 385: TRISBbits.TRISB0 = 0;
   295  000F12  9093               	bcf	3987,0,c	;volatile
   296                           
   297                           ;main.c: 388: UART_init();
   298  000F14  EC19  F005         	call	_UART_init	;wreg free
   299                           
   300                           ;main.c: 391: for(hbeat=0; hbeat<64; hbeat++)
   301  000F18  6A1E               	clrf	main@hbeat,c
   302  000F1A  6A1F               	clrf	main@hbeat+1,c
   303  000F1C  6A20               	clrf	main@hbeat+2,c
   304  000F1E  6A21               	clrf	main@hbeat+3,c
   305  000F20                     l1502:
   306                           
   307                           ;main.c: 392: {
   308                           ;main.c: 393: gbuffer[hbeat] = 0xFF;
   309  000F20  501E               	movf	main@hbeat,w,c
   310  000F22  0F60               	addlw	low _gbuffer
   311  000F24  6ED9               	movwf	fsr2l,c
   312  000F26  6ADA               	clrf	fsr2h,c
   313  000F28  68DF               	setf	indf2,c
   314  000F2A  2A1E               	incf	main@hbeat,f,c
   315  000F2C  0E00               	movlw	0
   316  000F2E  221F               	addwfc	main@hbeat+1,f,c
   317  000F30  2220               	addwfc	main@hbeat+2,f,c
   318  000F32  2221               	addwfc	main@hbeat+3,f,c
   319  000F34  5021               	movf	main@hbeat+3,w,c
   320  000F36  1020               	iorwf	main@hbeat+2,w,c
   321  000F38  101F               	iorwf	main@hbeat+1,w,c
   322  000F3A  E103               	bnz	u830
   323  000F3C  0E40               	movlw	64
   324  000F3E  5C1E               	subwf	main@hbeat,w,c
   325  000F40  E3EF               	bnc	l1502
   326  000F42                     u830:
   327  000F42                     l1508:
   328                           
   329                           ;main.c: 397: if(hbeat == 0x03FF){
   330  000F42  281E               	incf	main@hbeat,w,c
   331  000F44  E10D               	bnz	l1514
   332  000F46  0E03               	movlw	3
   333  000F48  181F               	xorwf	main@hbeat+1,w,c
   334  000F4A  1020               	iorwf	main@hbeat+2,w,c
   335  000F4C  1021               	iorwf	main@hbeat+3,w,c
   336  000F4E  A4D8               	btfss	status,2,c
   337  000F50  D007               	goto	l1514
   338                           
   339                           ;main.c: 398: LATBbits.LATB0 = 1;
   340  000F52  808A               	bsf	3978,0,c	;volatile
   341  000F54                     l1512:
   342                           
   343                           ;main.c: 399: hbeat++;
   344  000F54  2A1E               	incf	main@hbeat,f,c
   345  000F56  0E00               	movlw	0
   346  000F58  221F               	addwfc	main@hbeat+1,f,c
   347  000F5A  2220               	addwfc	main@hbeat+2,f,c
   348  000F5C  2221               	addwfc	main@hbeat+3,f,c
   349                           
   350                           ;main.c: 400: }
   351  000F5E  D016               	goto	l1526
   352  000F60                     l1514:
   353                           
   354                           ;main.c: 401: else if( hbeat == 0x2FFF ){
   355  000F60  281E               	incf	main@hbeat,w,c
   356  000F62  E108               	bnz	l1520
   357  000F64  0E2F               	movlw	47
   358  000F66  181F               	xorwf	main@hbeat+1,w,c
   359  000F68  1020               	iorwf	main@hbeat+2,w,c
   360  000F6A  1021               	iorwf	main@hbeat+3,w,c
   361  000F6C  A4D8               	btfss	status,2,c
   362  000F6E  D002               	goto	l1520
   363                           
   364                           ;main.c: 402: LATBbits.LATB0 = 0;
   365  000F70  908A               	bcf	3978,0,c	;volatile
   366  000F72  D7F0               	goto	l1512
   367  000F74                     l1520:
   368                           
   369                           ;main.c: 405: else if (hbeat == 0x1FFFF){
   370  000F74  281E               	incf	main@hbeat,w,c
   371  000F76  E1EE               	bnz	l1512
   372  000F78  281F               	incf	main@hbeat+1,w,c
   373  000F7A  E1EC               	bnz	l1512
   374  000F7C  0420               	decf	main@hbeat+2,w,c
   375  000F7E  1021               	iorwf	main@hbeat+3,w,c
   376  000F80  A4D8               	btfss	status,2,c
   377  000F82  D7E8               	goto	l1512
   378                           
   379                           ;main.c: 406: hbeat = 0x00;
   380  000F84  6A1E               	clrf	main@hbeat,c
   381  000F86  6A1F               	clrf	main@hbeat+1,c
   382  000F88  6A20               	clrf	main@hbeat+2,c
   383  000F8A  6A21               	clrf	main@hbeat+3,c
   384  000F8C                     l1526:
   385                           
   386                           ;main.c: 410: }
   387                           ;main.c: 411: bootloader_state_machine(UART_getchar());
   388  000F8C  EC6E  F008         	call	_UART_getchar	;wreg free
   389  000F90  EC24  F005         	call	_bootloader_state_machine
   390  000F94  D7D6               	goto	l1508
   391  000F96                     __end_of_main:
   392                           	opt stack 0
   393                           tblptru	equ	0xFF8
   394                           postinc0	equ	0xFEE
   395                           wreg	equ	0xFE8
   396                           indf2	equ	0xFDF
   397                           fsr2h	equ	0xFDA
   398                           fsr2l	equ	0xFD9
   399                           status	equ	0xFD8
   400                           
   401 ;; *************** function _bootloader_state_machine *****************
   402 ;; Defined at:
   403 ;;		line 533 in file "main.c"
   404 ;; Parameters:    Size  Location     Type
   405 ;;  state           1    wreg     unsigned char 
   406 ;; Auto vars:     Size  Location     Type
   407 ;;  state           1   19[COMRAM] unsigned char 
   408 ;;  adr             4   20[COMRAM] unsigned long 
   409 ;; Return value:  Size  Location     Type
   410 ;;		None               void
   411 ;; Registers used:
   412 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   413 ;; Tracked objects:
   414 ;;		On entry : 0/0
   415 ;;		On exit  : 0/0
   416 ;;		Unchanged: 0/0
   417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   419 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   420 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   421 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   422 ;;Total ram usage:       13 bytes
   423 ;; Hardware stack levels used:    1
   424 ;; Hardware stack levels required when called:    2
   425 ;; This function calls:
   426 ;;		_UART_putchar
   427 ;;		_UART_wait_for_char
   428 ;;		___lbmod
   429 ;;		_clear_buffer
   430 ;;		_erase_flash
   431 ;;		_jump_to_app
   432 ;;		_send_boot_version
   433 ;;		_write_flash
   434 ;; This function is called by:
   435 ;;		_main
   436 ;; This function uses a non-reentrant model
   437 ;;
   438                           
   439                           	psect	text1
   440  000A48                     __ptext1:
   441                           	opt stack 0
   442  000A48                     _bootloader_state_machine:
   443                           	opt stack 28
   444                           
   445                           ;incstack = 0
   446                           ;bootloader_state_machine@state stored from wreg
   447  000A48  6E14               	movwf	bootloader_state_machine@state,c
   448                           
   449                           ;main.c: 537: switch (state)
   450  000A4A  D24A               	goto	l1490
   451  000A4C                     l1270:
   452                           
   453                           ;main.c: 540: send_boot_version((u8 *)"1.0.a");
   454  000A4C  0E01               	movlw	STR_1& (0+255)
   455  000A4E  ECF9  F007         	call	_send_boot_version
   456                           
   457                           ;main.c: 541: timeout = 0;
   458  000A52  6A26               	clrf	_timeout,c
   459  000A54  6A27               	clrf	_timeout+1,c
   460  000A56  6A28               	clrf	_timeout+2,c
   461  000A58  6A29               	clrf	_timeout+3,c
   462                           
   463                           ;main.c: 542: break;
   464  000A5A  0012               	return	
   465  000A5C                     l1274:
   466                           
   467                           ;main.c: 545: UART_putchar(0x55);
   468  000A5C  0E55               	movlw	85
   469  000A5E  EF07  F005         	goto	_UART_putchar
   470  000A62                     l1278:
   471                           
   472                           ;main.c: 550: if(UART_wait_for_char() == 'Q'){
   473  000A62  EC0F  F005         	call	_UART_wait_for_char	;wreg free
   474  000A66  0A51               	xorlw	81
   475  000A68  A4D8               	btfss	status,2,c
   476  000A6A  0012               	return	
   477                           
   478                           ;main.c: 551: if(UART_wait_for_char() == 'W'){
   479  000A6C  EC0F  F005         	call	_UART_wait_for_char	;wreg free
   480  000A70  0A57               	xorlw	87
   481  000A72  A4D8               	btfss	status,2,c
   482  000A74  0012               	return	
   483                           
   484                           ;main.c: 552: if(UART_wait_for_char() == 'E'){
   485  000A76  EC0F  F005         	call	_UART_wait_for_char	;wreg free
   486  000A7A  0A45               	xorlw	69
   487  000A7C  A4D8               	btfss	status,2,c
   488  000A7E  0012               	return	
   489                           
   490                           ;main.c: 553: if(UART_wait_for_char() == 'R'){
   491  000A80  EC0F  F005         	call	_UART_wait_for_char	;wreg free
   492  000A84  0A52               	xorlw	82
   493  000A86  A4D8               	btfss	status,2,c
   494  000A88  0012               	return	
   495                           
   496                           ;main.c: 554: if(UART_wait_for_char() == 'T'){
   497  000A8A  EC0F  F005         	call	_UART_wait_for_char	;wreg free
   498  000A8E  0A54               	xorlw	84
   499  000A90  A4D8               	btfss	status,2,c
   500  000A92  0012               	return	
   501                           
   502                           ;main.c: 555: for (u32 adr = 0x1100; adr < 0x10000; adr += 64){
   503  000A94  6A15               	clrf	bootloader_state_machine@adr,c
   504  000A96  0E11               	movlw	17
   505  000A98  6E16               	movwf	bootloader_state_machine@adr+1,c
   506  000A9A  6A17               	clrf	bootloader_state_machine@adr+2,c
   507  000A9C  6A18               	clrf	bootloader_state_machine@adr+3,c
   508  000A9E                     l1294:
   509                           
   510                           ;main.c: 556: erase_flash(adr);
   511  000A9E  C015  F001         	movff	bootloader_state_machine@adr,erase_flash@address
   512  000AA2  C016  F002         	movff	bootloader_state_machine@adr+1,erase_flash@address+1
   513  000AA6  C017  F003         	movff	bootloader_state_machine@adr+2,erase_flash@address+2
   514  000AAA  C018  F004         	movff	bootloader_state_machine@adr+3,erase_flash@address+3
   515  000AAE  EC1F  F008         	call	_erase_flash	;wreg free
   516  000AB2  0E40               	movlw	64
   517  000AB4  2615               	addwf	bootloader_state_machine@adr,f,c
   518  000AB6  0E00               	movlw	0
   519  000AB8  2216               	addwfc	bootloader_state_machine@adr+1,f,c
   520  000ABA  2217               	addwfc	bootloader_state_machine@adr+2,f,c
   521  000ABC  2218               	addwfc	bootloader_state_machine@adr+3,f,c
   522  000ABE  5018               	movf	bootloader_state_machine@adr+3,w,c
   523  000AC0  E102               	bnz	u650
   524  000AC2  0417               	decf	bootloader_state_machine@adr+2,w,c
   525  000AC4  E3EC               	bnc	l1294
   526  000AC6                     u650:
   527                           
   528                           ;main.c: 557: }
   529                           ;main.c: 558: UART_putchar(0xEE);
   530  000AC6  0EEE               	movlw	238
   531  000AC8  EF07  F005         	goto	_UART_putchar
   532  000ACC                     l1304:
   533                           
   534                           ;main.c: 568: if(UART_wait_for_char() == 'Q'){
   535  000ACC  EC0F  F005         	call	_UART_wait_for_char	;wreg free
   536  000AD0  0A51               	xorlw	81
   537  000AD2  A4D8               	btfss	status,2,c
   538  000AD4  0012               	return	
   539                           
   540                           ;main.c: 569: if(UART_wait_for_char() == 'W'){
   541  000AD6  EC0F  F005         	call	_UART_wait_for_char	;wreg free
   542  000ADA  0A57               	xorlw	87
   543  000ADC  A4D8               	btfss	status,2,c
   544  000ADE  0012               	return	
   545                           
   546                           ;main.c: 570: if(UART_wait_for_char() == 'E'){
   547  000AE0  EC0F  F005         	call	_UART_wait_for_char	;wreg free
   548  000AE4  0A45               	xorlw	69
   549  000AE6  A4D8               	btfss	status,2,c
   550  000AE8  0012               	return	
   551                           
   552                           ;main.c: 571: if(UART_wait_for_char() == 'R'){
   553  000AEA  EC0F  F005         	call	_UART_wait_for_char	;wreg free
   554  000AEE  0A52               	xorlw	82
   555  000AF0  A4D8               	btfss	status,2,c
   556  000AF2  0012               	return	
   557                           
   558                           ;main.c: 572: if(UART_wait_for_char() == 'T'){
   559  000AF4  EC0F  F005         	call	_UART_wait_for_char	;wreg free
   560  000AF8  0A54               	xorlw	84
   561  000AFA  E001 D1DB          	bnz	l158
   562  000AFE                     l1314:
   563                           
   564                           ;main.c: 575: if(UART_wait_for_char() == ':'){
   565  000AFE  EC0F  F005         	call	_UART_wait_for_char	;wreg free
   566  000B02  0A3A               	xorlw	58
   567  000B04  E001 D1C7          	bnz	l1480
   568                           
   569                           ;main.c: 577: byte_in_record = UART_wait_for_char();
   570  000B08  EC0F  F005         	call	_UART_wait_for_char	;wreg free
   571  000B0C  6E2E               	movwf	_byte_in_record,c
   572                           
   573                           ;main.c: 578: crc += byte_in_record;
   574  000B0E  502E               	movf	_byte_in_record,w,c
   575  000B10  262F               	addwf	_crc,f,c
   576                           
   577                           ;main.c: 581: temp = UART_wait_for_char();
   578  000B12  EC0F  F005         	call	_UART_wait_for_char	;wreg free
   579  000B16  6E33               	movwf	_temp,c
   580                           
   581                           ;main.c: 582: crc += temp;
   582  000B18  5033               	movf	_temp,w,c
   583  000B1A  262F               	addwf	_crc,f,c
   584                           
   585                           ;main.c: 583: offset = temp<<8;
   586  000B1C  5033               	movf	_temp,w,c
   587  000B1E  6E2D               	movwf	_offset+1,c
   588  000B20  6A2C               	clrf	_offset,c
   589                           
   590                           ;main.c: 586: temp = UART_wait_for_char();
   591  000B22  EC0F  F005         	call	_UART_wait_for_char	;wreg free
   592  000B26  6E33               	movwf	_temp,c
   593                           
   594                           ;main.c: 587: crc += temp;
   595  000B28  5033               	movf	_temp,w,c
   596  000B2A  262F               	addwf	_crc,f,c
   597                           
   598                           ;main.c: 588: offset |= temp;
   599  000B2C  5033               	movf	_temp,w,c
   600  000B2E  122C               	iorwf	_offset,f,c
   601                           
   602                           ;main.c: 591: temp = UART_wait_for_char();
   603  000B30  EC0F  F005         	call	_UART_wait_for_char	;wreg free
   604  000B34  6E33               	movwf	_temp,c
   605                           
   606                           ;main.c: 592: crc += temp;
   607  000B36  5033               	movf	_temp,w,c
   608  000B38  262F               	addwf	_crc,f,c
   609                           
   610                           ;main.c: 593: record_type = temp;
   611  000B3A  C033  F032         	movff	_temp,_record_type
   612                           
   613                           ;main.c: 596: switch (record_type){
   614  000B3E  D19C               	goto	l1478
   615  000B40                     l1336:
   616                           
   617                           ;main.c: 598: if((u32)address == (u32)0x00){
   618  000B40  5022               	movf	_address,w,c
   619  000B42  1023               	iorwf	_address+1,w,c
   620  000B44  1024               	iorwf	_address+2,w,c
   621  000B46  1025               	iorwf	_address+3,w,c
   622  000B48  E135               	bnz	l1348
   623                           
   624                           ;main.c: 600: address = (u32)offset;
   625  000B4A  C02C  F022         	movff	_offset,_address
   626  000B4E  C02D  F023         	movff	_offset+1,_address+1
   627  000B52  6A24               	clrf	_address+2,c
   628  000B54  6A25               	clrf	_address+3,c
   629                           
   630                           ;main.c: 602: vl = (u8)address;
   631  000B56  C022  F034         	movff	_address,_vl
   632                           
   633                           ;main.c: 604: vl = (vl % 0x3F)>>4;
   634  000B5A  0E3F               	movlw	63
   635  000B5C  6E01               	movwf	___lbmod@divisor,c
   636  000B5E  5034               	movf	_vl,w,c
   637  000B60  EC4A  F008         	call	___lbmod
   638  000B64  6E0C               	movwf	??_bootloader_state_machine& (0+255),c
   639  000B66  380C               	swapf	??_bootloader_state_machine,w,c
   640  000B68  0B0F               	andlw	15
   641  000B6A  6E34               	movwf	_vl,c
   642                           
   643                           ;main.c: 606: byte_index = (u16)(0x10*vl);
   644  000B6C  5034               	movf	_vl,w,c
   645  000B6E  0D10               	mullw	16
   646  000B70  CFF3 F02A          	movff	prodl,_byte_index
   647  000B74  CFF4 F02B          	movff	prodh,_byte_index+1
   648                           
   649                           ;main.c: 610: size += byte_in_record;
   650  000B78  5034               	movf	_vl,w,c
   651  000B7A  6E0C               	movwf	??_bootloader_state_machine& (0+255),c
   652  000B7C  6A0D               	clrf	(??_bootloader_state_machine+1)& (0+255),c
   653  000B7E  3A0C               	swapf	??_bootloader_state_machine,f,c
   654  000B80  3A0D               	swapf	??_bootloader_state_machine+1,f,c
   655  000B82  0EF0               	movlw	240
   656  000B84  160D               	andwf	??_bootloader_state_machine+1,f,c
   657  000B86  500C               	movf	??_bootloader_state_machine,w,c
   658  000B88  0B0F               	andlw	15
   659  000B8A  120D               	iorwf	??_bootloader_state_machine+1,f,c
   660  000B8C  0EF0               	movlw	240
   661  000B8E  160C               	andwf	??_bootloader_state_machine,f,c
   662  000B90  C00C  F00E         	movff	??_bootloader_state_machine,??_bootloader_state_machine+2
   663  000B94  C00D  F00F         	movff	??_bootloader_state_machine+1,??_bootloader_state_machine+3
   664  000B98  0E00               	movlw	0
   665  000B9A  BE0F               	btfsc	(??_bootloader_state_machine+3)& (0+255),7,c
   666  000B9C  0EFF               	movlw	255
   667  000B9E  6E10               	movwf	(??_bootloader_state_machine+4)& (0+255),c
   668  000BA0  6E11               	movwf	(??_bootloader_state_machine+5)& (0+255),c
   669  000BA2  500E               	movf	??_bootloader_state_machine+2,w,c
   670  000BA4  5E22               	subwf	_address,f,c
   671  000BA6  500F               	movf	??_bootloader_state_machine+3,w,c
   672  000BA8  5A23               	subwfb	_address+1,f,c
   673  000BAA  5010               	movf	??_bootloader_state_machine+4,w,c
   674  000BAC  5A24               	subwfb	_address+2,f,c
   675  000BAE  5011               	movf	??_bootloader_state_machine+5,w,c
   676  000BB0  5A25               	subwfb	_address+3,f,c
   677                           
   678                           ;main.c: 611: }
   679  000BB2  D047               	goto	l164
   680  000BB4                     l1348:
   681                           
   682                           ;main.c: 612: else if((address+(u32)64) < (u32)(offset)){
   683  000BB4  502C               	movf	_offset,w,c
   684  000BB6  6E0C               	movwf	??_bootloader_state_machine& (0+255),c
   685  000BB8  502D               	movf	_offset+1,w,c
   686  000BBA  6E0D               	movwf	(??_bootloader_state_machine+1)& (0+255),c
   687  000BBC  6A0E               	clrf	(??_bootloader_state_machine+2)& (0+255),c
   688  000BBE  6A0F               	clrf	(??_bootloader_state_machine+3)& (0+255),c
   689  000BC0  0E40               	movlw	64
   690  000BC2  2422               	addwf	_address,w,c
   691  000BC4  6E10               	movwf	(??_bootloader_state_machine+4)& (0+255),c
   692  000BC6  0E00               	movlw	0
   693  000BC8  2023               	addwfc	_address+1,w,c
   694  000BCA  6E11               	movwf	(??_bootloader_state_machine+5)& (0+255),c
   695  000BCC  0E00               	movlw	0
   696  000BCE  2024               	addwfc	_address+2,w,c
   697  000BD0  6E12               	movwf	(??_bootloader_state_machine+6)& (0+255),c
   698  000BD2  0E00               	movlw	0
   699  000BD4  2025               	addwfc	_address+3,w,c
   700  000BD6  6E13               	movwf	(??_bootloader_state_machine+7)& (0+255),c
   701  000BD8  500C               	movf	??_bootloader_state_machine,w,c
   702  000BDA  5C10               	subwf	??_bootloader_state_machine+4,w,c
   703  000BDC  500D               	movf	??_bootloader_state_machine+1,w,c
   704  000BDE  5811               	subwfb	??_bootloader_state_machine+5,w,c
   705  000BE0  500E               	movf	??_bootloader_state_machine+2,w,c
   706  000BE2  5812               	subwfb	??_bootloader_state_machine+6,w,c
   707  000BE4  500F               	movf	??_bootloader_state_machine+3,w,c
   708  000BE6  5813               	subwfb	??_bootloader_state_machine+7,w,c
   709  000BE8  E22C               	bc	l164
   710                           
   711                           ;main.c: 615: erase_flash(address);
   712  000BEA  C022  F001         	movff	_address,erase_flash@address
   713  000BEE  C023  F002         	movff	_address+1,erase_flash@address+1
   714  000BF2  C024  F003         	movff	_address+2,erase_flash@address+2
   715  000BF6  C025  F004         	movff	_address+3,erase_flash@address+3
   716  000BFA  EC1F  F008         	call	_erase_flash	;wreg free
   717                           
   718                           ;main.c: 616: write_flash(address, gbuffer, 64);
   719  000BFE  C022  F001         	movff	_address,write_flash@address
   720  000C02  C023  F002         	movff	_address+1,write_flash@address+1
   721  000C06  C024  F003         	movff	_address+2,write_flash@address+2
   722  000C0A  C025  F004         	movff	_address+3,write_flash@address+3
   723  000C0E  0E60               	movlw	low _gbuffer
   724  000C10  6E05               	movwf	write_flash@buffer,c
   725  000C12  0E40               	movlw	64
   726  000C14  6E06               	movwf	write_flash@length,c
   727  000C16  ECCB  F007         	call	_write_flash	;wreg free
   728                           
   729                           ;main.c: 619: clear_buffer(gbuffer,64);
   730  000C1A  6A02               	clrf	clear_buffer@idx+1,c
   731  000C1C  0E40               	movlw	64
   732  000C1E  6E01               	movwf	clear_buffer@idx,c
   733  000C20  0E60               	movlw	_gbuffer& (0+255)
   734  000C22  EC36  F008         	call	_clear_buffer
   735                           
   736                           ;main.c: 622: address = (u32)offset;
   737  000C26  C02C  F022         	movff	_offset,_address
   738  000C2A  C02D  F023         	movff	_offset+1,_address+1
   739  000C2E  6A24               	clrf	_address+2,c
   740  000C30  6A25               	clrf	_address+3,c
   741                           
   742                           ;main.c: 624: vl = (u8)address;
   743  000C32  C022  F034         	movff	_address,_vl
   744                           
   745                           ;main.c: 626: vl = (vl % 0x3F)>>4;
   746  000C36  0E3F               	movlw	63
   747  000C38  6E01               	movwf	___lbmod@divisor,c
   748  000C3A  5034               	movf	_vl,w,c
   749  000C3C  EC4A  F008         	call	___lbmod
   750  000C40  D791               	goto	L1
   751  000C42                     l164:
   752                           
   753                           ;main.c: 637: }
   754                           ;main.c: 639: for(i=0; i<=byte_in_record; i++){
   755  000C42  6A31               	clrf	_i,c
   756  000C44  D010               	goto	l1374
   757  000C46                     l1366:
   758                           
   759                           ;main.c: 640: gbuffer[byte_index] = UART_wait_for_char();
   760  000C46  502A               	movf	_byte_index,w,c
   761  000C48  0F60               	addlw	low _gbuffer
   762  000C4A  6ED9               	movwf	fsr2l,c
   763  000C4C  6ADA               	clrf	fsr2h,c
   764  000C4E  EC0F  F005         	call	_UART_wait_for_char	;wreg free
   765  000C52  6EDF               	movwf	indf2,c
   766                           
   767                           ;main.c: 641: crc += gbuffer[byte_index];
   768  000C54  502A               	movf	_byte_index,w,c
   769  000C56  0F60               	addlw	low _gbuffer
   770  000C58  6ED9               	movwf	fsr2l,c
   771  000C5A  6ADA               	clrf	fsr2h,c
   772  000C5C  50DF               	movf	indf2,w,c
   773  000C5E  262F               	addwf	_crc,f,c
   774                           
   775                           ;main.c: 642: byte_index++;
   776  000C60  4A2A               	infsnz	_byte_index,f,c
   777  000C62  2A2B               	incf	_byte_index+1,f,c
   778  000C64  2A31               	incf	_i,f,c
   779  000C66                     l1374:
   780  000C66  5031               	movf	_i,w,c
   781  000C68  5C2E               	subwf	_byte_in_record,w,c
   782  000C6A  E2ED               	bc	l1366
   783                           
   784                           ;main.c: 643: }
   785                           ;main.c: 644: byte_index--;
   786  000C6C  062A               	decf	_byte_index,f,c
   787  000C6E  A0D8               	btfss	status,0,c
   788  000C70  062B               	decf	_byte_index+1,f,c
   789                           
   790                           ;main.c: 645: if((crc&0xFF) == 0){
   791  000C72  502F               	movf	_crc,w,c
   792  000C74  E132               	bnz	l1398
   793                           
   794                           ;main.c: 647: if(byte_index >= 64){
   795  000C76  502B               	movf	_byte_index+1,w,c
   796  000C78  E103               	bnz	u760
   797  000C7A  0E40               	movlw	64
   798  000C7C  5C2A               	subwf	_byte_index,w,c
   799  000C7E  E324               	bnc	l1392
   800  000C80                     u760:
   801                           
   802                           ;main.c: 649: erase_flash(address);
   803  000C80  C022  F001         	movff	_address,erase_flash@address
   804  000C84  C023  F002         	movff	_address+1,erase_flash@address+1
   805  000C88  C024  F003         	movff	_address+2,erase_flash@address+2
   806  000C8C  C025  F004         	movff	_address+3,erase_flash@address+3
   807  000C90  EC1F  F008         	call	_erase_flash	;wreg free
   808                           
   809                           ;main.c: 650: write_flash(address, gbuffer, 64);
   810  000C94  C022  F001         	movff	_address,write_flash@address
   811  000C98  C023  F002         	movff	_address+1,write_flash@address+1
   812  000C9C  C024  F003         	movff	_address+2,write_flash@address+2
   813  000CA0  C025  F004         	movff	_address+3,write_flash@address+3
   814  000CA4  0E60               	movlw	low _gbuffer
   815  000CA6  6E05               	movwf	write_flash@buffer,c
   816  000CA8  0E40               	movlw	64
   817  000CAA  6E06               	movwf	write_flash@length,c
   818  000CAC  ECCB  F007         	call	_write_flash	;wreg free
   819                           
   820                           ;main.c: 652: address = 0;
   821  000CB0  6A22               	clrf	_address,c
   822  000CB2  6A23               	clrf	_address+1,c
   823  000CB4  6A24               	clrf	_address+2,c
   824  000CB6  6A25               	clrf	_address+3,c
   825                           
   826                           ;main.c: 655: clear_buffer(gbuffer,64);
   827  000CB8  6A02               	clrf	clear_buffer@idx+1,c
   828  000CBA  0E40               	movlw	64
   829  000CBC  6E01               	movwf	clear_buffer@idx,c
   830  000CBE  0E60               	movlw	_gbuffer& (0+255)
   831  000CC0  EC36  F008         	call	_clear_buffer
   832                           
   833                           ;main.c: 659: size = (u16)0x00;
   834  000CC4  6A2A               	clrf	_byte_index,c
   835  000CC6  6A2B               	clrf	_byte_index+1,c
   836  000CC8                     l1392:
   837                           
   838                           ;main.c: 660: }
   839                           ;main.c: 661: UART_putchar(0xCC);
   840  000CC8  0ECC               	movlw	204
   841  000CCA  EC07  F005         	call	_UART_putchar
   842                           
   843                           ;main.c: 662: crc = 0x00;
   844  000CCE  6A2F               	clrf	_crc,c
   845                           
   846                           ;main.c: 663: timeout = 0x00;
   847  000CD0  6A26               	clrf	_timeout,c
   848  000CD2  6A27               	clrf	_timeout+1,c
   849  000CD4  6A28               	clrf	_timeout+2,c
   850  000CD6  6A29               	clrf	_timeout+3,c
   851                           
   852                           ;main.c: 664: }
   853  000CD8  D004               	goto	l1402
   854  000CDA                     l1398:
   855                           
   856                           ;main.c: 665: else{
   857                           ;main.c: 666: UART_putchar(0xCE);
   858  000CDA  0ECE               	movlw	206
   859  000CDC  EC07  F005         	call	_UART_putchar
   860                           
   861                           ;main.c: 667: crc = 0x00;
   862  000CE0  6A2F               	clrf	_crc,c
   863  000CE2                     l1402:
   864                           
   865                           ;main.c: 668: }
   866                           ;main.c: 669: crc = 0;
   867  000CE2  6A2F               	clrf	_crc,c
   868                           
   869                           ;main.c: 670: record_type = (u8)1;
   870  000CE4  0E01               	movlw	1
   871  000CE6  6E32               	movwf	_record_type,c
   872                           
   873                           ;main.c: 671: break;
   874  000CE8  D0D6               	goto	l1480
   875  000CEA                     l1406:
   876                           
   877                           ;main.c: 674: if(byte_index != 0)
   878  000CEA  502A               	movf	_byte_index,w,c
   879  000CEC  102B               	iorwf	_byte_index+1,w,c
   880  000CEE  E018               	bz	l1412
   881                           
   882                           ;main.c: 675: {
   883                           ;main.c: 676: erase_flash(address);
   884  000CF0  C022  F001         	movff	_address,erase_flash@address
   885  000CF4  C023  F002         	movff	_address+1,erase_flash@address+1
   886  000CF8  C024  F003         	movff	_address+2,erase_flash@address+2
   887  000CFC  C025  F004         	movff	_address+3,erase_flash@address+3
   888  000D00  EC1F  F008         	call	_erase_flash	;wreg free
   889                           
   890                           ;main.c: 677: write_flash(address, gbuffer, 64);
   891  000D04  C022  F001         	movff	_address,write_flash@address
   892  000D08  C023  F002         	movff	_address+1,write_flash@address+1
   893  000D0C  C024  F003         	movff	_address+2,write_flash@address+2
   894  000D10  C025  F004         	movff	_address+3,write_flash@address+3
   895  000D14  0E60               	movlw	low _gbuffer
   896  000D16  6E05               	movwf	write_flash@buffer,c
   897  000D18  0E40               	movlw	64
   898  000D1A  6E06               	movwf	write_flash@length,c
   899  000D1C  ECCB  F007         	call	_write_flash	;wreg free
   900  000D20                     l1412:
   901                           
   902                           ;main.c: 678: }
   903                           ;main.c: 681: clear_buffer(gbuffer,64);
   904  000D20  6A02               	clrf	clear_buffer@idx+1,c
   905  000D22  0E40               	movlw	64
   906  000D24  6E01               	movwf	clear_buffer@idx,c
   907  000D26  0E60               	movlw	_gbuffer& (0+255)
   908  000D28  EC36  F008         	call	_clear_buffer
   909                           
   910                           ;main.c: 683: end_of_record = 1;
   911  000D2C  0E01               	movlw	1
   912  000D2E  6E30               	movwf	_end_of_record,c
   913                           
   914                           ;main.c: 685: UART_putchar(0xF0);
   915  000D30  0EF0               	movlw	240
   916  000D32  EC07  F005         	call	_UART_putchar
   917                           
   918                           ;main.c: 686: break;
   919  000D36  D0AF               	goto	l1480
   920  000D38                     l1418:
   921                           
   922                           ;main.c: 692: temp = UART_wait_for_char();
   923  000D38  EC0F  F005         	call	_UART_wait_for_char	;wreg free
   924  000D3C  6E33               	movwf	_temp,c
   925                           
   926                           ;main.c: 693: crc += temp;
   927  000D3E  5033               	movf	_temp,w,c
   928  000D40  262F               	addwf	_crc,f,c
   929                           
   930                           ;main.c: 694: offset = temp<<8;
   931  000D42  5033               	movf	_temp,w,c
   932  000D44  6E2D               	movwf	_offset+1,c
   933  000D46  6A2C               	clrf	_offset,c
   934                           
   935                           ;main.c: 697: temp = UART_wait_for_char();
   936  000D48  EC0F  F005         	call	_UART_wait_for_char	;wreg free
   937  000D4C  6E33               	movwf	_temp,c
   938                           
   939                           ;main.c: 698: crc += temp;
   940  000D4E  5033               	movf	_temp,w,c
   941  000D50  262F               	addwf	_crc,f,c
   942                           
   943                           ;main.c: 699: offset |= temp;
   944  000D52  5033               	movf	_temp,w,c
   945  000D54  122C               	iorwf	_offset,f,c
   946                           
   947                           ;main.c: 701: if((crc&0xFF) == 0){
   948  000D56  502F               	movf	_crc,w,c
   949  000D58  E108               	bnz	l1436
   950                           
   951                           ;main.c: 702: UART_putchar(0xCC);
   952  000D5A  0ECC               	movlw	204
   953  000D5C  EC07  F005         	call	_UART_putchar
   954  000D60                     l1434:
   955                           
   956                           ;main.c: 703: timeout = 0x00;
   957  000D60  6A26               	clrf	_timeout,c
   958  000D62  6A27               	clrf	_timeout+1,c
   959  000D64  6A28               	clrf	_timeout+2,c
   960  000D66  6A29               	clrf	_timeout+3,c
   961                           
   962                           ;main.c: 704: }
   963  000D68  D003               	goto	l1438
   964  000D6A                     l1436:
   965                           
   966                           ;main.c: 705: else{
   967                           ;main.c: 706: UART_putchar(0xCE);
   968  000D6A  0ECE               	movlw	206
   969  000D6C  EC07  F005         	call	_UART_putchar
   970  000D70                     l1438:
   971                           
   972                           ;main.c: 707: }
   973                           ;main.c: 708: crc = 0;
   974  000D70  6A2F               	clrf	_crc,c
   975                           
   976                           ;main.c: 709: break;
   977  000D72  D091               	goto	l1480
   978  000D74                     l1440:
   979                           
   980                           ;main.c: 714: if(byte_index != 0)
   981  000D74  502A               	movf	_byte_index,w,c
   982  000D76  102B               	iorwf	_byte_index+1,w,c
   983  000D78  E01E               	bz	l1448
   984                           
   985                           ;main.c: 715: {
   986                           ;main.c: 716: erase_flash(address);
   987  000D7A  C022  F001         	movff	_address,erase_flash@address
   988  000D7E  C023  F002         	movff	_address+1,erase_flash@address+1
   989  000D82  C024  F003         	movff	_address+2,erase_flash@address+2
   990  000D86  C025  F004         	movff	_address+3,erase_flash@address+3
   991  000D8A  EC1F  F008         	call	_erase_flash	;wreg free
   992                           
   993                           ;main.c: 717: write_flash(address, gbuffer, 64);
   994  000D8E  C022  F001         	movff	_address,write_flash@address
   995  000D92  C023  F002         	movff	_address+1,write_flash@address+1
   996  000D96  C024  F003         	movff	_address+2,write_flash@address+2
   997  000D9A  C025  F004         	movff	_address+3,write_flash@address+3
   998  000D9E  0E60               	movlw	low _gbuffer
   999  000DA0  6E05               	movwf	write_flash@buffer,c
  1000  000DA2  0E40               	movlw	64
  1001  000DA4  6E06               	movwf	write_flash@length,c
  1002  000DA6  ECCB  F007         	call	_write_flash	;wreg free
  1003                           
  1004                           ;main.c: 720: clear_buffer(gbuffer,64);
  1005  000DAA  6A02               	clrf	clear_buffer@idx+1,c
  1006  000DAC  0E40               	movlw	64
  1007  000DAE  6E01               	movwf	clear_buffer@idx,c
  1008  000DB0  0E60               	movlw	_gbuffer& (0+255)
  1009  000DB2  EC36  F008         	call	_clear_buffer
  1010  000DB6                     l1448:
  1011                           
  1012                           ;main.c: 721: }
  1013                           ;main.c: 724: temp = UART_wait_for_char();
  1014  000DB6  EC0F  F005         	call	_UART_wait_for_char	;wreg free
  1015  000DBA  6E33               	movwf	_temp,c
  1016                           
  1017                           ;main.c: 725: crc += temp;
  1018  000DBC  5033               	movf	_temp,w,c
  1019  000DBE  262F               	addwf	_crc,f,c
  1020                           
  1021                           ;main.c: 726: address = (u32)temp<<24;
  1022  000DC0  C033  F00C         	movff	_temp,??_bootloader_state_machine
  1023  000DC4  6A0D               	clrf	(??_bootloader_state_machine+1)& (0+255),c
  1024  000DC6  6A0E               	clrf	(??_bootloader_state_machine+2)& (0+255),c
  1025  000DC8  6A0F               	clrf	(??_bootloader_state_machine+3)& (0+255),c
  1026  000DCA  C00C  F00F         	movff	??_bootloader_state_machine,??_bootloader_state_machine+3
  1027  000DCE  6A0E               	clrf	??_bootloader_state_machine+2,c
  1028  000DD0  6A0D               	clrf	??_bootloader_state_machine+1,c
  1029  000DD2  6A0C               	clrf	??_bootloader_state_machine,c
  1030  000DD4  C00C  F022         	movff	??_bootloader_state_machine,_address
  1031  000DD8  C00D  F023         	movff	??_bootloader_state_machine+1,_address+1
  1032  000DDC  C00E  F024         	movff	??_bootloader_state_machine+2,_address+2
  1033  000DE0  C00F  F025         	movff	??_bootloader_state_machine+3,_address+3
  1034                           
  1035                           ;main.c: 729: temp = UART_wait_for_char();
  1036  000DE4  EC0F  F005         	call	_UART_wait_for_char	;wreg free
  1037  000DE8  6E33               	movwf	_temp,c
  1038                           
  1039                           ;main.c: 730: crc += temp;
  1040  000DEA  5033               	movf	_temp,w,c
  1041  000DEC  262F               	addwf	_crc,f,c
  1042                           
  1043                           ;main.c: 731: address |= (u32)temp<<16;
  1044  000DEE  C033  F00C         	movff	_temp,??_bootloader_state_machine
  1045  000DF2  6A0D               	clrf	(??_bootloader_state_machine+1)& (0+255),c
  1046  000DF4  6A0E               	clrf	(??_bootloader_state_machine+2)& (0+255),c
  1047  000DF6  6A0F               	clrf	(??_bootloader_state_machine+3)& (0+255),c
  1048  000DF8  C00D  F00F         	movff	??_bootloader_state_machine+1,??_bootloader_state_machine+3
  1049  000DFC  C00C  F00E         	movff	??_bootloader_state_machine,??_bootloader_state_machine+2
  1050  000E00  6A0D               	clrf	??_bootloader_state_machine+1,c
  1051  000E02  6A0C               	clrf	??_bootloader_state_machine,c
  1052  000E04  500C               	movf	??_bootloader_state_machine,w,c
  1053  000E06  1222               	iorwf	_address,f,c
  1054  000E08  500D               	movf	??_bootloader_state_machine+1,w,c
  1055  000E0A  1223               	iorwf	_address+1,f,c
  1056  000E0C  500E               	movf	??_bootloader_state_machine+2,w,c
  1057  000E0E  1224               	iorwf	_address+2,f,c
  1058  000E10  500F               	movf	??_bootloader_state_machine+3,w,c
  1059  000E12  1225               	iorwf	_address+3,f,c
  1060                           
  1061                           ;main.c: 733: vl = (u8)address;
  1062  000E14  C022  F034         	movff	_address,_vl
  1063                           
  1064                           ;main.c: 735: vl = (vl % 0x3F)>>4;
  1065  000E18  0E3F               	movlw	63
  1066  000E1A  6E01               	movwf	___lbmod@divisor,c
  1067  000E1C  5034               	movf	_vl,w,c
  1068  000E1E  EC4A  F008         	call	___lbmod
  1069  000E22  6E0C               	movwf	??_bootloader_state_machine& (0+255),c
  1070  000E24  380C               	swapf	??_bootloader_state_machine,w,c
  1071  000E26  0B0F               	andlw	15
  1072  000E28  6E34               	movwf	_vl,c
  1073                           
  1074                           ;main.c: 737: address = address - (u32)(vl<<4);
  1075  000E2A  5034               	movf	_vl,w,c
  1076  000E2C  6E0C               	movwf	??_bootloader_state_machine& (0+255),c
  1077  000E2E  6A0D               	clrf	(??_bootloader_state_machine+1)& (0+255),c
  1078  000E30  3A0C               	swapf	??_bootloader_state_machine,f,c
  1079  000E32  3A0D               	swapf	??_bootloader_state_machine+1,f,c
  1080  000E34  0EF0               	movlw	240
  1081  000E36  160D               	andwf	??_bootloader_state_machine+1,f,c
  1082  000E38  500C               	movf	??_bootloader_state_machine,w,c
  1083  000E3A  0B0F               	andlw	15
  1084  000E3C  120D               	iorwf	??_bootloader_state_machine+1,f,c
  1085  000E3E  0EF0               	movlw	240
  1086  000E40  160C               	andwf	??_bootloader_state_machine,f,c
  1087  000E42  C00C  F00E         	movff	??_bootloader_state_machine,??_bootloader_state_machine+2
  1088  000E46  C00D  F00F         	movff	??_bootloader_state_machine+1,??_bootloader_state_machine+3
  1089  000E4A  0E00               	movlw	0
  1090  000E4C  BE0F               	btfsc	(??_bootloader_state_machine+3)& (0+255),7,c
  1091  000E4E  0EFF               	movlw	255
  1092  000E50  6E10               	movwf	(??_bootloader_state_machine+4)& (0+255),c
  1093  000E52  6E11               	movwf	(??_bootloader_state_machine+5)& (0+255),c
  1094  000E54  500E               	movf	??_bootloader_state_machine+2,w,c
  1095  000E56  5E22               	subwf	_address,f,c
  1096  000E58  500F               	movf	??_bootloader_state_machine+3,w,c
  1097  000E5A  5A23               	subwfb	_address+1,f,c
  1098  000E5C  5010               	movf	??_bootloader_state_machine+4,w,c
  1099  000E5E  5A24               	subwfb	_address+2,f,c
  1100  000E60  5011               	movf	??_bootloader_state_machine+5,w,c
  1101  000E62  5A25               	subwfb	_address+3,f,c
  1102                           
  1103                           ;main.c: 739: if((crc&0xFF) == 0){
  1104  000E64  502F               	movf	_crc,w,c
  1105  000E66  E104               	bnz	l1472
  1106                           
  1107                           ;main.c: 740: UART_putchar(0xCC);
  1108  000E68  0ECC               	movlw	204
  1109  000E6A  EC07  F005         	call	_UART_putchar
  1110  000E6E  D778               	goto	l1434
  1111  000E70                     l1472:
  1112                           
  1113                           ;main.c: 743: else{
  1114                           ;main.c: 744: UART_putchar(0xCE);
  1115  000E70  0ECE               	movlw	206
  1116  000E72  EC07  F005         	call	_UART_putchar
  1117  000E76  D77C               	goto	l1438
  1118  000E78                     l1478:
  1119  000E78  5032               	movf	_record_type,w,c
  1120                           
  1121                           ; Switch size 1, requested type "speed"
  1122                           ; Number of cases is 6, Range of values is 0 to 5
  1123                           ; switch strategies available:
  1124                           ; Name         Instructions Cycles
  1125                           ; simple_byte           19    10 (average)
  1126                           ;	Chosen strategy is simple_byte
  1127  000E7A  E101 D661          	bz	l1336
  1128  000E7E  0A01               	xorlw	1	; case 1
  1129  000E80  E101 D733          	bz	l1406
  1130  000E84  0A03               	xorlw	3	; case 2
  1131  000E86  E101 D757          	bz	l1418
  1132  000E8A  0A01               	xorlw	1	; case 3
  1133  000E8C  E004               	bz	l1480
  1134  000E8E  0A07               	xorlw	7	; case 4
  1135  000E90  E101 D770          	bz	l1440
  1136  000E94  0A01               	xorlw	1	; case 5
  1137  000E96                     l1480:
  1138                           
  1139                           ;main.c: 754: }
  1140                           ;main.c: 755: timeout++;
  1141  000E96  2A26               	incf	_timeout,f,c
  1142  000E98  0E00               	movlw	0
  1143  000E9A  2227               	addwfc	_timeout+1,f,c
  1144  000E9C  2228               	addwfc	_timeout+2,f,c
  1145  000E9E  2229               	addwfc	_timeout+3,f,c
  1146                           
  1147                           ;main.c: 757: }while((end_of_record != 1)||(timeout==100));
  1148  000EA0  0430               	decf	_end_of_record,w,c
  1149  000EA2  E001 D62C          	bnz	l1314
  1150  000EA6  0E64               	movlw	100
  1151  000EA8  1826               	xorwf	_timeout,w,c
  1152  000EAA  1027               	iorwf	_timeout+1,w,c
  1153  000EAC  1028               	iorwf	_timeout+2,w,c
  1154  000EAE  1029               	iorwf	_timeout+3,w,c
  1155  000EB0  E101 D625          	bz	l1314
  1156  000EB4                     l158:
  1157                           
  1158                           ;main.c: 760: byte_index = (u16)0;
  1159  000EB4  6A2A               	clrf	_byte_index,c
  1160  000EB6  6A2B               	clrf	_byte_index+1,c
  1161                           
  1162                           ;main.c: 761: offset = (u16)0;
  1163  000EB8  6A2C               	clrf	_offset,c
  1164  000EBA  6A2D               	clrf	_offset+1,c
  1165                           
  1166                           ;main.c: 762: byte_in_record = (u16)0;
  1167  000EBC  6A2E               	clrf	_byte_in_record,c
  1168                           
  1169                           ;main.c: 763: record_type = (u8)0;
  1170  000EBE  6A32               	clrf	_record_type,c
  1171                           
  1172                           ;main.c: 764: timeout = (u8)0;
  1173  000EC0  6A26               	clrf	_timeout,c
  1174  000EC2  6A27               	clrf	_timeout+1,c
  1175  000EC4  6A28               	clrf	_timeout+2,c
  1176  000EC6  6A29               	clrf	_timeout+3,c
  1177                           
  1178                           ;main.c: 765: end_of_record = (u8)0;
  1179  000EC8  6A30               	clrf	_end_of_record,c
  1180                           
  1181                           ;main.c: 767: size = (u16)0;
  1182  000ECA  6A22               	clrf	_address,c
  1183  000ECC  6A23               	clrf	_address+1,c
  1184  000ECE  6A24               	clrf	_address+2,c
  1185  000ED0  6A25               	clrf	_address+3,c
  1186                           
  1187                           ;main.c: 768: crc = (u8)0;
  1188  000ED2  6A2F               	clrf	_crc,c
  1189  000ED4  0012               	return	
  1190  000ED6                     l1484:
  1191                           
  1192                           ;main.c: 776: {
  1193                           ;main.c: 777: UART_putchar(0x76);
  1194  000ED6  0E76               	movlw	118
  1195  000ED8  EC07  F005         	call	_UART_putchar
  1196                           
  1197                           ;main.c: 778: jump_to_app();
  1198  000EDC  EF7A  F008         	goto	_jump_to_app	;wreg free
  1199  000EE0                     l1490:
  1200  000EE0  5014               	movf	bootloader_state_machine@state,w,c
  1201                           
  1202                           ; Switch size 1, requested type "speed"
  1203                           ; Number of cases is 5, Range of values is 49 to 193
  1204                           ; switch strategies available:
  1205                           ; Name         Instructions Cycles
  1206                           ; simple_byte           16     9 (average)
  1207                           ;	Chosen strategy is simple_byte
  1208  000EE2  0A31               	xorlw	49	; case 49
  1209  000EE4  E101 D5BD          	bz	l1278
  1210  000EE8  0A03               	xorlw	3	; case 50
  1211  000EEA  E101 D5EF          	bz	l1304
  1212  000EEE  0A01               	xorlw	1	; case 51
  1213  000EF0  E0F2               	bz	l1484
  1214  000EF2  0A99               	xorlw	153	; case 170
  1215  000EF4  E101 D5B2          	bz	l1274
  1216  000EF8  0A6B               	xorlw	107	; case 193
  1217  000EFA  A4D8               	btfss	status,2,c
  1218  000EFC  0012               	return	
  1219  000EFE  D5A6               	goto	l1270
  1220  000F00                     __end_of_bootloader_state_machine:
  1221                           	opt stack 0
  1222                           tblptru	equ	0xFF8
  1223                           prodh	equ	0xFF4
  1224                           prodl	equ	0xFF3
  1225                           postinc0	equ	0xFEE
  1226                           wreg	equ	0xFE8
  1227                           indf2	equ	0xFDF
  1228                           fsr2h	equ	0xFDA
  1229                           fsr2l	equ	0xFD9
  1230                           status	equ	0xFD8
  1231                           
  1232 ;; *************** function _write_flash *****************
  1233 ;; Defined at:
  1234 ;;		line 851 in file "main.c"
  1235 ;; Parameters:    Size  Location     Type
  1236 ;;  address         4    0[COMRAM] unsigned long 
  1237 ;;  buffer          1    4[COMRAM] PTR unsigned char 
  1238 ;;		 -> gbuffer(64), 
  1239 ;;  length          1    5[COMRAM] unsigned char 
  1240 ;; Auto vars:     Size  Location     Type
  1241 ;;  counter         2    9[COMRAM] int 
  1242 ;; Return value:  Size  Location     Type
  1243 ;;		None               void
  1244 ;; Registers used:
  1245 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1246 ;; Tracked objects:
  1247 ;;		On entry : 0/0
  1248 ;;		On exit  : 0/0
  1249 ;;		Unchanged: 0/0
  1250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1251 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1252 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1253 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1254 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1255 ;;Total ram usage:       11 bytes
  1256 ;; Hardware stack levels used:    1
  1257 ;; This function calls:
  1258 ;;		Nothing
  1259 ;; This function is called by:
  1260 ;;		_bootloader_state_machine
  1261 ;; This function uses a non-reentrant model
  1262 ;;
  1263                           
  1264                           	psect	text2
  1265  000F96                     __ptext2:
  1266                           	opt stack 0
  1267  000F96                     _write_flash:
  1268                           	opt stack 29
  1269                           
  1270                           ;main.c: 853: int counter;
  1271                           ;main.c: 855: PIR4bits.EEIF = 0;
  1272                           
  1273                           ;incstack = 0
  1274  000F96  9CB7               	bcf	4023,6,c	;volatile
  1275                           
  1276                           ;main.c: 857: TBLPTRL = (address) & 0xFF;
  1277  000F98  C001  FFF6         	movff	write_flash@address,tblptrl	;volatile
  1278                           
  1279                           ;main.c: 858: TBLPTRH = (address >> 8) & 0xFF;
  1280  000F9C  C002  FFF7         	movff	write_flash@address+1,tblptrh	;volatile
  1281                           
  1282                           ;main.c: 859: TBLPTRU = (address >> 16) & 0xFF;
  1283  000FA0  C003  FFF8         	movff	write_flash@address+2,tblptru	;volatile
  1284                           
  1285                           ;main.c: 865: for (counter = 0; counter < length; counter++) {
  1286  000FA4  6A0A               	clrf	write_flash@counter,c
  1287  000FA6  6A0B               	clrf	write_flash@counter+1,c
  1288  000FA8  D009               	goto	l1204
  1289  000FAA                     l1200:
  1290                           
  1291                           ;main.c: 866: TABLAT = buffer[counter];
  1292  000FAA  5005               	movf	write_flash@buffer,w,c
  1293  000FAC  240A               	addwf	write_flash@counter,w,c
  1294  000FAE  6ED9               	movwf	fsr2l,c
  1295  000FB0  6ADA               	clrf	fsr2h,c
  1296  000FB2  50DF               	movf	indf2,w,c
  1297  000FB4  6EF5               	movwf	tablat,c	;volatile
  1298  000FB6  000D               	tblwt		*+	;# 
  1299  000FB8  4A0A               	infsnz	write_flash@counter,f,c
  1300  000FBA  2A0B               	incf	write_flash@counter+1,f,c
  1301  000FBC                     l1204:
  1302  000FBC  5006               	movf	write_flash@length,w,c
  1303  000FBE  6E07               	movwf	??_write_flash& (0+255),c
  1304  000FC0  6A08               	clrf	(??_write_flash+1)& (0+255),c
  1305  000FC2  5007               	movf	??_write_flash,w,c
  1306  000FC4  5C0A               	subwf	write_flash@counter,w,c
  1307  000FC6  500B               	movf	write_flash@counter+1,w,c
  1308  000FC8  0A80               	xorlw	128
  1309  000FCA  6E09               	movwf	(??_write_flash+2)& (0+255),c
  1310  000FCC  5008               	movf	??_write_flash+1,w,c
  1311  000FCE  0A80               	xorlw	128
  1312  000FD0  5809               	subwfb	(??_write_flash+2)& (0+255),w,c
  1313  000FD2  E3EB               	bnc	l1200
  1314  000FD4  000A               	tblrd		*-	;# 
  1315                           
  1316                           ;main.c: 892: EECON1 = 0x84;
  1317  000FD6  0E84               	movlw	132
  1318  000FD8  6E7F               	movwf	3967,c	;volatile
  1319                           
  1320                           ;main.c: 894: INTCONbits.GIE = 0;
  1321  000FDA  9EF2               	bcf	intcon,7,c	;volatile
  1322                           
  1323                           ;main.c: 896: EECON2 = 0x55;
  1324  000FDC  0E55               	movlw	85
  1325  000FDE  6E7E               	movwf	3966,c	;volatile
  1326                           
  1327                           ;main.c: 897: EECON2 = 0xAA;
  1328  000FE0  0EAA               	movlw	170
  1329  000FE2  6E7E               	movwf	3966,c	;volatile
  1330                           
  1331                           ;main.c: 899: EECON1bits.WR = 1;
  1332  000FE4  827F               	bsf	3967,1,c	;volatile
  1333                           
  1334                           ;main.c: 905: INTCONbits.GIE = 1;
  1335  000FE6  8EF2               	bsf	intcon,7,c	;volatile
  1336  000FE8                     l210:
  1337  000FE8  ACB7               	btfss	4023,6,c	;volatile
  1338  000FEA  D7FE               	goto	l210
  1339                           
  1340                           ;main.c: 908: PIR4bits.EEIF = 0;
  1341  000FEC  9CB7               	bcf	4023,6,c	;volatile
  1342                           
  1343                           ;main.c: 909: EECON1bits.WREN = 0;
  1344  000FEE  947F               	bcf	3967,2,c	;volatile
  1345  000FF0  0012               	return		;funcret
  1346  000FF2                     __end_of_write_flash:
  1347                           	opt stack 0
  1348                           tblptru	equ	0xFF8
  1349                           tblptrh	equ	0xFF7
  1350                           tblptrl	equ	0xFF6
  1351                           tablat	equ	0xFF5
  1352                           prodh	equ	0xFF4
  1353                           prodl	equ	0xFF3
  1354                           intcon	equ	0xFF2
  1355                           postinc0	equ	0xFEE
  1356                           wreg	equ	0xFE8
  1357                           indf2	equ	0xFDF
  1358                           fsr2h	equ	0xFDA
  1359                           fsr2l	equ	0xFD9
  1360                           status	equ	0xFD8
  1361                           
  1362 ;; *************** function _send_boot_version *****************
  1363 ;; Defined at:
  1364 ;;		line 508 in file "main.c"
  1365 ;; Parameters:    Size  Location     Type
  1366 ;;  buf             1    wreg     PTR unsigned char 
  1367 ;;		 -> STR_1(6), 
  1368 ;; Auto vars:     Size  Location     Type
  1369 ;;  buf             1    4[COMRAM] PTR unsigned char 
  1370 ;;		 -> STR_1(6), 
  1371 ;;  i               1    3[COMRAM] unsigned char 
  1372 ;; Return value:  Size  Location     Type
  1373 ;;		None               void
  1374 ;; Registers used:
  1375 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1376 ;; Tracked objects:
  1377 ;;		On entry : 0/0
  1378 ;;		On exit  : 0/0
  1379 ;;		Unchanged: 0/0
  1380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1382 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1383 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1384 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1385 ;;Total ram usage:        4 bytes
  1386 ;; Hardware stack levels used:    1
  1387 ;; Hardware stack levels required when called:    1
  1388 ;; This function calls:
  1389 ;;		_UART_putchar
  1390 ;; This function is called by:
  1391 ;;		_bootloader_state_machine
  1392 ;; This function uses a non-reentrant model
  1393 ;;
  1394                           
  1395                           	psect	text3
  1396  000FF2                     __ptext3:
  1397                           	opt stack 0
  1398  000FF2                     _send_boot_version:
  1399                           	opt stack 28
  1400                           
  1401                           ;incstack = 0
  1402                           ;send_boot_version@buf stored from wreg
  1403  000FF2  6E05               	movwf	send_boot_version@buf,c
  1404                           
  1405                           ;main.c: 510: u8 i = 0x00;
  1406  000FF4  6A04               	clrf	send_boot_version@i,c
  1407  000FF6                     l1174:
  1408                           
  1409                           ;main.c: 513: if(buf[i] != '\0'){
  1410  000FF6  5005               	movf	send_boot_version@buf,w,c
  1411  000FF8  2404               	addwf	send_boot_version@i,w,c
  1412  000FFA  6E02               	movwf	??_send_boot_version& (0+255),c
  1413  000FFC  C002  FFF6         	movff	??_send_boot_version,tblptrl
  1414  001000                     	if	1	;There is more than 1 active tblptr byte
  1415  001000  0E0F               	movlw	high __smallconst
  1416  001002  6EF7               	movwf	tblptrh,c
  1417  001004                     	endif
  1418  001004                     	if	0	;tblptru may be non-zero
  1419  001004                     	endif
  1420  001004                     	if	0	;tblptru may be non-zero
  1421  001004                     	endif
  1422  001004  0008               	tblrd		*
  1423  001006  50F5               	movf	tablat,w,c
  1424  001008  E00B               	bz	l1178
  1425                           
  1426                           ;main.c: 514: UART_putchar(buf[i]);
  1427  00100A  5005               	movf	send_boot_version@buf,w,c
  1428  00100C  2404               	addwf	send_boot_version@i,w,c
  1429  00100E  6E02               	movwf	??_send_boot_version& (0+255),c
  1430  001010  C002  FFF6         	movff	??_send_boot_version,tblptrl
  1431  001014                     	if	1	;There is more than 1 active tblptr byte
  1432  001014  0E0F               	movlw	high __smallconst
  1433  001016  6EF7               	movwf	tblptrh,c
  1434  001018                     	endif
  1435  001018                     	if	0	;tblptru may be non-zero
  1436  001018                     	endif
  1437  001018                     	if	0	;tblptru may be non-zero
  1438  001018                     	endif
  1439  001018  0008               	tblrd		*
  1440  00101A  50F5               	movf	tablat,w,c
  1441  00101C  EC07  F005         	call	_UART_putchar
  1442  001020                     l1178:
  1443                           
  1444                           ;main.c: 515: }
  1445                           ;main.c: 516: }while(buf[i++] != '\0');
  1446  001020  2A04               	incf	send_boot_version@i,f,c
  1447  001022  0404               	decf	send_boot_version@i,w,c
  1448  001024  6E02               	movwf	??_send_boot_version& (0+255),c
  1449  001026  5005               	movf	send_boot_version@buf,w,c
  1450  001028  2402               	addwf	??_send_boot_version,w,c
  1451  00102A  6E03               	movwf	(??_send_boot_version+1)& (0+255),c
  1452  00102C  C003  FFF6         	movff	??_send_boot_version+1,tblptrl
  1453  001030                     	if	1	;There is more than 1 active tblptr byte
  1454  001030  0E0F               	movlw	high __smallconst
  1455  001032  6EF7               	movwf	tblptrh,c
  1456  001034                     	endif
  1457  001034                     	if	0	;tblptru may be non-zero
  1458  001034                     	endif
  1459  001034                     	if	0	;tblptru may be non-zero
  1460  001034                     	endif
  1461  001034  0008               	tblrd		*
  1462  001036  50F5               	movf	tablat,w,c
  1463  001038  B4D8               	btfsc	status,2,c
  1464  00103A  0012               	return		;funcret
  1465  00103C  D7DC               	goto	l1174
  1466  00103E                     __end_of_send_boot_version:
  1467                           	opt stack 0
  1468                           tblptru	equ	0xFF8
  1469                           tblptrh	equ	0xFF7
  1470                           tblptrl	equ	0xFF6
  1471                           tablat	equ	0xFF5
  1472                           prodh	equ	0xFF4
  1473                           prodl	equ	0xFF3
  1474                           intcon	equ	0xFF2
  1475                           postinc0	equ	0xFEE
  1476                           wreg	equ	0xFE8
  1477                           indf2	equ	0xFDF
  1478                           fsr2h	equ	0xFDA
  1479                           fsr2l	equ	0xFD9
  1480                           status	equ	0xFD8
  1481                           
  1482 ;; *************** function _UART_putchar *****************
  1483 ;; Defined at:
  1484 ;;		line 465 in file "main.c"
  1485 ;; Parameters:    Size  Location     Type
  1486 ;;  outchar         1    wreg     unsigned char 
  1487 ;; Auto vars:     Size  Location     Type
  1488 ;;  outchar         1    0[COMRAM] unsigned char 
  1489 ;; Return value:  Size  Location     Type
  1490 ;;		None               void
  1491 ;; Registers used:
  1492 ;;		wreg
  1493 ;; Tracked objects:
  1494 ;;		On entry : 0/0
  1495 ;;		On exit  : 0/0
  1496 ;;		Unchanged: 0/0
  1497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1499 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1501 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1502 ;;Total ram usage:        1 bytes
  1503 ;; Hardware stack levels used:    1
  1504 ;; This function calls:
  1505 ;;		Nothing
  1506 ;; This function is called by:
  1507 ;;		_send_boot_version
  1508 ;;		_bootloader_state_machine
  1509 ;; This function uses a non-reentrant model
  1510 ;;
  1511                           
  1512                           	psect	text4
  1513  000A0E                     __ptext4:
  1514                           	opt stack 0
  1515  000A0E                     _UART_putchar:
  1516                           	opt stack 28
  1517                           
  1518                           ;incstack = 0
  1519                           ;UART_putchar@outchar stored from wreg
  1520  000A0E  6E01               	movwf	UART_putchar@outchar,c
  1521  000A10                     l82:
  1522  000A10  A2AC               	btfss	4012,1,c	;volatile
  1523  000A12  D7FE               	goto	l82
  1524                           
  1525                           ;main.c: 469: TXREG1 = outchar;
  1526  000A14  C001  FFAD         	movff	UART_putchar@outchar,4013	;volatile
  1527  000A18                     l85:
  1528  000A18  B2AC               	btfsc	4012,1,c	;volatile
  1529  000A1A  0012               	return		;funcret
  1530  000A1C  D7FD               	goto	l85
  1531  000A1E                     __end_of_UART_putchar:
  1532                           	opt stack 0
  1533                           tblptru	equ	0xFF8
  1534                           tblptrh	equ	0xFF7
  1535                           tblptrl	equ	0xFF6
  1536                           tablat	equ	0xFF5
  1537                           prodh	equ	0xFF4
  1538                           prodl	equ	0xFF3
  1539                           intcon	equ	0xFF2
  1540                           postinc0	equ	0xFEE
  1541                           wreg	equ	0xFE8
  1542                           indf2	equ	0xFDF
  1543                           fsr2h	equ	0xFDA
  1544                           fsr2l	equ	0xFD9
  1545                           status	equ	0xFD8
  1546                           
  1547 ;; *************** function _jump_to_app *****************
  1548 ;; Defined at:
  1549 ;;		line 804 in file "main.c"
  1550 ;; Parameters:    Size  Location     Type
  1551 ;;		None
  1552 ;; Auto vars:     Size  Location     Type
  1553 ;;		None
  1554 ;; Return value:  Size  Location     Type
  1555 ;;		None               void
  1556 ;; Registers used:
  1557 ;;		wreg, status,2, status,0
  1558 ;; Tracked objects:
  1559 ;;		On entry : 0/0
  1560 ;;		On exit  : 0/0
  1561 ;;		Unchanged: 0/0
  1562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1567 ;;Total ram usage:        0 bytes
  1568 ;; Hardware stack levels used:    1
  1569 ;; This function calls:
  1570 ;;		Nothing
  1571 ;; This function is called by:
  1572 ;;		_bootloader_state_machine
  1573 ;; This function uses a non-reentrant model
  1574 ;;
  1575                           
  1576                           	psect	text5
  1577  0010F4                     __ptext5:
  1578                           	opt stack 0
  1579  0010F4                     _jump_to_app:
  1580                           	opt stack 29
  1581                           
  1582                           ;main.c: 806: RCON |= 0x93;
  1583                           
  1584                           ;incstack = 0
  1585  0010F4  0E93               	movlw	147
  1586  0010F6  12D0               	iorwf	4048,f,c	;volatile
  1587  0010F8  EF80 F008          	goto	4352	;# 
  1588  0010FC  0012               	return		;funcret
  1589  0010FE                     __end_of_jump_to_app:
  1590                           	opt stack 0
  1591                           tblptru	equ	0xFF8
  1592                           tblptrh	equ	0xFF7
  1593                           tblptrl	equ	0xFF6
  1594                           tablat	equ	0xFF5
  1595                           prodh	equ	0xFF4
  1596                           prodl	equ	0xFF3
  1597                           intcon	equ	0xFF2
  1598                           postinc0	equ	0xFEE
  1599                           wreg	equ	0xFE8
  1600                           indf2	equ	0xFDF
  1601                           fsr2h	equ	0xFDA
  1602                           fsr2l	equ	0xFD9
  1603                           status	equ	0xFD8
  1604                           
  1605 ;; *************** function _erase_flash *****************
  1606 ;; Defined at:
  1607 ;;		line 813 in file "main.c"
  1608 ;; Parameters:    Size  Location     Type
  1609 ;;  address         4    0[COMRAM] unsigned long 
  1610 ;; Auto vars:     Size  Location     Type
  1611 ;;		None
  1612 ;; Return value:  Size  Location     Type
  1613 ;;		None               void
  1614 ;; Registers used:
  1615 ;;		wreg, status,2, status,0
  1616 ;; Tracked objects:
  1617 ;;		On entry : 0/0
  1618 ;;		On exit  : 0/0
  1619 ;;		Unchanged: 0/0
  1620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1621 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1624 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1625 ;;Total ram usage:        4 bytes
  1626 ;; Hardware stack levels used:    1
  1627 ;; This function calls:
  1628 ;;		Nothing
  1629 ;; This function is called by:
  1630 ;;		_bootloader_state_machine
  1631 ;; This function uses a non-reentrant model
  1632 ;;
  1633                           
  1634                           	psect	text6
  1635  00103E                     __ptext6:
  1636                           	opt stack 0
  1637  00103E                     _erase_flash:
  1638                           	opt stack 29
  1639                           
  1640                           ;main.c: 815: PIR4bits.EEIF = 0;
  1641                           
  1642                           ;incstack = 0
  1643  00103E  9CB7               	bcf	4023,6,c	;volatile
  1644                           
  1645                           ;main.c: 817: TBLPTRL = (address) & 0xC0;
  1646  001040  5001               	movf	erase_flash@address,w,c
  1647  001042  0BC0               	andlw	192
  1648  001044  6EF6               	movwf	tblptrl,c	;volatile
  1649                           
  1650                           ;main.c: 818: TBLPTRH = (address >> 8) & 0xFF;
  1651  001046  C002  FFF7         	movff	erase_flash@address+1,tblptrh	;volatile
  1652                           
  1653                           ;main.c: 819: TBLPTRU = (address >> 16) & 0xFF;
  1654  00104A  C003  FFF8         	movff	erase_flash@address+2,tblptru	;volatile
  1655                           
  1656                           ;main.c: 832: EECON1 = 0x94;
  1657  00104E  0E94               	movlw	148
  1658  001050  6E7F               	movwf	3967,c	;volatile
  1659                           
  1660                           ;main.c: 834: EECON2 = 0x55;
  1661  001052  0E55               	movlw	85
  1662  001054  6E7E               	movwf	3966,c	;volatile
  1663                           
  1664                           ;main.c: 835: EECON2 = 0xAA;
  1665  001056  0EAA               	movlw	170
  1666  001058  6E7E               	movwf	3966,c	;volatile
  1667                           
  1668                           ;main.c: 836: EECON1bits.WR = 1;
  1669  00105A  827F               	bsf	3967,1,c	;volatile
  1670                           
  1671                           ;main.c: 838: INTCONbits.GIE = 1;
  1672  00105C  8EF2               	bsf	intcon,7,c	;volatile
  1673  00105E                     l201:
  1674  00105E  ACB7               	btfss	4023,6,c	;volatile
  1675  001060  D7FE               	goto	l201
  1676                           
  1677                           ;main.c: 841: PIR4bits.EEIF = 0;
  1678  001062  9CB7               	bcf	4023,6,c	;volatile
  1679                           
  1680                           ;main.c: 842: EECON1bits.WREN = 0;
  1681  001064  947F               	bcf	3967,2,c	;volatile
  1682                           
  1683                           ;main.c: 843: EECON1bits.FREE = 0;
  1684  001066  987F               	bcf	3967,4,c	;volatile
  1685                           
  1686                           ;main.c: 845: INTCONbits.GIE = 0;
  1687  001068  9EF2               	bcf	intcon,7,c	;volatile
  1688  00106A  0012               	return		;funcret
  1689  00106C                     __end_of_erase_flash:
  1690                           	opt stack 0
  1691                           tblptru	equ	0xFF8
  1692                           tblptrh	equ	0xFF7
  1693                           tblptrl	equ	0xFF6
  1694                           tablat	equ	0xFF5
  1695                           prodh	equ	0xFF4
  1696                           prodl	equ	0xFF3
  1697                           intcon	equ	0xFF2
  1698                           postinc0	equ	0xFEE
  1699                           wreg	equ	0xFE8
  1700                           indf2	equ	0xFDF
  1701                           fsr2h	equ	0xFDA
  1702                           fsr2l	equ	0xFD9
  1703                           status	equ	0xFD8
  1704                           
  1705 ;; *************** function _clear_buffer *****************
  1706 ;; Defined at:
  1707 ;;		line 792 in file "main.c"
  1708 ;; Parameters:    Size  Location     Type
  1709 ;;  buf             1    wreg     PTR unsigned char 
  1710 ;;		 -> gbuffer(64), 
  1711 ;;  idx             2    0[COMRAM] unsigned int 
  1712 ;; Auto vars:     Size  Location     Type
  1713 ;;  buf             1    4[COMRAM] PTR unsigned char 
  1714 ;;		 -> gbuffer(64), 
  1715 ;;  i               2    2[COMRAM] unsigned int 
  1716 ;; Return value:  Size  Location     Type
  1717 ;;		None               void
  1718 ;; Registers used:
  1719 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1720 ;; Tracked objects:
  1721 ;;		On entry : 0/0
  1722 ;;		On exit  : 0/0
  1723 ;;		Unchanged: 0/0
  1724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1725 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1726 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1728 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1729 ;;Total ram usage:        5 bytes
  1730 ;; Hardware stack levels used:    1
  1731 ;; This function calls:
  1732 ;;		Nothing
  1733 ;; This function is called by:
  1734 ;;		_bootloader_state_machine
  1735 ;; This function uses a non-reentrant model
  1736 ;;
  1737                           
  1738                           	psect	text7
  1739  00106C                     __ptext7:
  1740                           	opt stack 0
  1741  00106C                     _clear_buffer:
  1742                           	opt stack 29
  1743                           
  1744                           ;incstack = 0
  1745                           ;clear_buffer@buf stored from wreg
  1746  00106C  6E05               	movwf	clear_buffer@buf,c
  1747                           
  1748                           ;main.c: 794: u16 i = 0x00;
  1749  00106E  6A03               	clrf	clear_buffer@i,c
  1750  001070  6A04               	clrf	clear_buffer@i+1,c
  1751                           
  1752                           ;main.c: 795: for(i=0; i<idx; i++)
  1753  001072  6A03               	clrf	clear_buffer@i,c
  1754  001074  6A04               	clrf	clear_buffer@i+1,c
  1755  001076  D007               	goto	l1220
  1756  001078                     l1216:
  1757                           
  1758                           ;main.c: 796: {
  1759                           ;main.c: 797: buf[i]=0xFF;
  1760  001078  5005               	movf	clear_buffer@buf,w,c
  1761  00107A  2403               	addwf	clear_buffer@i,w,c
  1762  00107C  6ED9               	movwf	fsr2l,c
  1763  00107E  6ADA               	clrf	fsr2h,c
  1764  001080  68DF               	setf	indf2,c
  1765  001082  4A03               	infsnz	clear_buffer@i,f,c
  1766  001084  2A04               	incf	clear_buffer@i+1,f,c
  1767  001086                     l1220:
  1768  001086  5001               	movf	clear_buffer@idx,w,c
  1769  001088  5C03               	subwf	clear_buffer@i,w,c
  1770  00108A  5002               	movf	clear_buffer@idx+1,w,c
  1771  00108C  5804               	subwfb	clear_buffer@i+1,w,c
  1772  00108E  B0D8               	btfsc	status,0,c
  1773  001090  0012               	return		;funcret
  1774  001092  D7F2               	goto	l1216
  1775  001094                     __end_of_clear_buffer:
  1776                           	opt stack 0
  1777                           tblptru	equ	0xFF8
  1778                           tblptrh	equ	0xFF7
  1779                           tblptrl	equ	0xFF6
  1780                           tablat	equ	0xFF5
  1781                           prodh	equ	0xFF4
  1782                           prodl	equ	0xFF3
  1783                           intcon	equ	0xFF2
  1784                           postinc0	equ	0xFEE
  1785                           wreg	equ	0xFE8
  1786                           indf2	equ	0xFDF
  1787                           fsr2h	equ	0xFDA
  1788                           fsr2l	equ	0xFD9
  1789                           status	equ	0xFD8
  1790                           
  1791 ;; *************** function ___lbmod *****************
  1792 ;; Defined at:
  1793 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\lbmod.c"
  1794 ;; Parameters:    Size  Location     Type
  1795 ;;  dividend        1    wreg     unsigned char 
  1796 ;;  divisor         1    0[COMRAM] unsigned char 
  1797 ;; Auto vars:     Size  Location     Type
  1798 ;;  dividend        1    1[COMRAM] unsigned char 
  1799 ;;  rem             1    3[COMRAM] unsigned char 
  1800 ;;  counter         1    2[COMRAM] unsigned char 
  1801 ;; Return value:  Size  Location     Type
  1802 ;;                  1    wreg      unsigned char 
  1803 ;; Registers used:
  1804 ;;		wreg, status,2, status,0
  1805 ;; Tracked objects:
  1806 ;;		On entry : 0/0
  1807 ;;		On exit  : 0/0
  1808 ;;		Unchanged: 0/0
  1809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1810 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1811 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1813 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1814 ;;Total ram usage:        4 bytes
  1815 ;; Hardware stack levels used:    1
  1816 ;; This function calls:
  1817 ;;		Nothing
  1818 ;; This function is called by:
  1819 ;;		_bootloader_state_machine
  1820 ;; This function uses a non-reentrant model
  1821 ;;
  1822                           
  1823                           	psect	text8
  1824  001094                     __ptext8:
  1825                           	opt stack 0
  1826  001094                     ___lbmod:
  1827                           	opt stack 29
  1828                           
  1829                           ;incstack = 0
  1830                           ;___lbmod@dividend stored from wreg
  1831  001094  6E02               	movwf	___lbmod@dividend,c
  1832  001096  0E08               	movlw	8
  1833  001098  6E03               	movwf	___lbmod@counter,c
  1834  00109A  6A04               	clrf	___lbmod@rem,c
  1835  00109C                     l1228:
  1836  00109C  90D8               	bcf	status,0,c
  1837  00109E  3402               	rlcf	___lbmod@dividend,w,c
  1838  0010A0  3404               	rlcf	___lbmod@rem,w,c
  1839  0010A2  6E04               	movwf	___lbmod@rem,c
  1840  0010A4  90D8               	bcf	status,0,c
  1841  0010A6  3602               	rlcf	___lbmod@dividend,f,c
  1842  0010A8  5001               	movf	___lbmod@divisor,w,c
  1843  0010AA  5C04               	subwf	___lbmod@rem,w,c
  1844  0010AC  E302               	bnc	l1236
  1845  0010AE  5001               	movf	___lbmod@divisor,w,c
  1846  0010B0  5E04               	subwf	___lbmod@rem,f,c
  1847  0010B2                     l1236:
  1848  0010B2  2E03               	decfsz	___lbmod@counter,f,c
  1849  0010B4  D7F3               	goto	l1228
  1850  0010B6  5004               	movf	___lbmod@rem,w,c
  1851  0010B8  0012               	return		;funcret
  1852  0010BA                     __end_of___lbmod:
  1853                           	opt stack 0
  1854                           tblptru	equ	0xFF8
  1855                           tblptrh	equ	0xFF7
  1856                           tblptrl	equ	0xFF6
  1857                           tablat	equ	0xFF5
  1858                           prodh	equ	0xFF4
  1859                           prodl	equ	0xFF3
  1860                           intcon	equ	0xFF2
  1861                           postinc0	equ	0xFEE
  1862                           wreg	equ	0xFE8
  1863                           indf2	equ	0xFDF
  1864                           fsr2h	equ	0xFDA
  1865                           fsr2l	equ	0xFD9
  1866                           status	equ	0xFD8
  1867                           
  1868 ;; *************** function _UART_wait_for_char *****************
  1869 ;; Defined at:
  1870 ;;		line 495 in file "main.c"
  1871 ;; Parameters:    Size  Location     Type
  1872 ;;		None
  1873 ;; Auto vars:     Size  Location     Type
  1874 ;;		None
  1875 ;; Return value:  Size  Location     Type
  1876 ;;                  1    wreg      unsigned char 
  1877 ;; Registers used:
  1878 ;;		wreg, status,2
  1879 ;; Tracked objects:
  1880 ;;		On entry : 0/0
  1881 ;;		On exit  : 0/0
  1882 ;;		Unchanged: 0/0
  1883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1888 ;;Total ram usage:        0 bytes
  1889 ;; Hardware stack levels used:    1
  1890 ;; This function calls:
  1891 ;;		Nothing
  1892 ;; This function is called by:
  1893 ;;		_bootloader_state_machine
  1894 ;; This function uses a non-reentrant model
  1895 ;;
  1896                           
  1897                           	psect	text9
  1898  000A1E                     __ptext9:
  1899                           	opt stack 0
  1900  000A1E                     _UART_wait_for_char:
  1901                           	opt stack 29
  1902  000A1E                     l102:
  1903  000A1E  AA9E               	btfss	3998,5,c	;volatile
  1904  000A20  D7FE               	goto	l102
  1905                           
  1906                           ;main.c: 498: if( (RCSTAbits.FERR == 1) || (RCSTAbits.OERR == 1) ){
  1907  000A22  B4AB               	btfsc	4011,2,c	;volatile
  1908  000A24  D002               	goto	l107
  1909  000A26  A2AB               	btfss	4011,1,c	;volatile
  1910  000A28  D002               	goto	l1168
  1911  000A2A                     l107:
  1912                           
  1913                           ;main.c: 499: RCSTAbits.CREN = 0;
  1914  000A2A  98AB               	bcf	4011,4,c	;volatile
  1915                           
  1916                           ;main.c: 500: RCSTAbits.CREN = 1;
  1917  000A2C  88AB               	bsf	4011,4,c	;volatile
  1918  000A2E                     l1168:
  1919                           
  1920                           ;main.c: 501: }
  1921                           ;main.c: 502: return((u8)RCREG1);
  1922  000A2E  50AE               	movf	4014,w,c	;volatile
  1923  000A30  0012               	return		;funcret
  1924  000A32                     __end_of_UART_wait_for_char:
  1925                           	opt stack 0
  1926                           tblptru	equ	0xFF8
  1927                           tblptrh	equ	0xFF7
  1928                           tblptrl	equ	0xFF6
  1929                           tablat	equ	0xFF5
  1930                           prodh	equ	0xFF4
  1931                           prodl	equ	0xFF3
  1932                           intcon	equ	0xFF2
  1933                           postinc0	equ	0xFEE
  1934                           wreg	equ	0xFE8
  1935                           indf2	equ	0xFDF
  1936                           fsr2h	equ	0xFDA
  1937                           fsr2l	equ	0xFD9
  1938                           status	equ	0xFD8
  1939                           
  1940 ;; *************** function _UART_init *****************
  1941 ;; Defined at:
  1942 ;;		line 438 in file "main.c"
  1943 ;; Parameters:    Size  Location     Type
  1944 ;;		None
  1945 ;; Auto vars:     Size  Location     Type
  1946 ;;		None
  1947 ;; Return value:  Size  Location     Type
  1948 ;;		None               void
  1949 ;; Registers used:
  1950 ;;		wreg, status,2
  1951 ;; Tracked objects:
  1952 ;;		On entry : 0/0
  1953 ;;		On exit  : 0/0
  1954 ;;		Unchanged: 0/0
  1955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1960 ;;Total ram usage:        0 bytes
  1961 ;; Hardware stack levels used:    1
  1962 ;; This function calls:
  1963 ;;		Nothing
  1964 ;; This function is called by:
  1965 ;;		_main
  1966 ;; This function uses a non-reentrant model
  1967 ;;
  1968                           
  1969                           	psect	text10
  1970  000A32                     __ptext10:
  1971                           	opt stack 0
  1972  000A32                     _UART_init:
  1973                           	opt stack 30
  1974                           
  1975                           ;main.c: 440: TRISCbits.TRISC6 = 0;
  1976                           
  1977                           ;incstack = 0
  1978  000A32  9C94               	bcf	3988,6,c	;volatile
  1979                           
  1980                           ;main.c: 441: TRISCbits.TRISC7 = 1;
  1981  000A34  8E94               	bsf	3988,7,c	;volatile
  1982                           
  1983                           ;main.c: 447: TXSTAbits.SYNC = 0;
  1984  000A36  98AC               	bcf	4012,4,c	;volatile
  1985                           
  1986                           ;main.c: 448: TXSTAbits.BRGH = 0;
  1987  000A38  94AC               	bcf	4012,2,c	;volatile
  1988                           
  1989                           ;main.c: 449: BAUDCON1bits.BRG16 = 0;
  1990  000A3A  96A7               	bcf	4007,3,c	;volatile
  1991                           
  1992                           ;main.c: 450: SPBRG = 103;
  1993  000A3C  0E67               	movlw	103
  1994  000A3E  6EAF               	movwf	4015,c	;volatile
  1995                           
  1996                           ;main.c: 453: TXSTAbits.TXEN = 1;
  1997  000A40  8AAC               	bsf	4012,5,c	;volatile
  1998                           
  1999                           ;main.c: 456: RCSTAbits.SPEN = 1;
  2000  000A42  8EAB               	bsf	4011,7,c	;volatile
  2001                           
  2002                           ;main.c: 459: RCSTAbits.CREN = 1;
  2003  000A44  88AB               	bsf	4011,4,c	;volatile
  2004  000A46  0012               	return		;funcret
  2005  000A48                     __end_of_UART_init:
  2006                           	opt stack 0
  2007                           tblptru	equ	0xFF8
  2008                           tblptrh	equ	0xFF7
  2009                           tblptrl	equ	0xFF6
  2010                           tablat	equ	0xFF5
  2011                           prodh	equ	0xFF4
  2012                           prodl	equ	0xFF3
  2013                           intcon	equ	0xFF2
  2014                           postinc0	equ	0xFEE
  2015                           wreg	equ	0xFE8
  2016                           indf2	equ	0xFDF
  2017                           fsr2h	equ	0xFDA
  2018                           fsr2l	equ	0xFD9
  2019                           status	equ	0xFD8
  2020                           
  2021 ;; *************** function _UART_getchar *****************
  2022 ;; Defined at:
  2023 ;;		line 477 in file "main.c"
  2024 ;; Parameters:    Size  Location     Type
  2025 ;;		None
  2026 ;; Auto vars:     Size  Location     Type
  2027 ;;		None
  2028 ;; Return value:  Size  Location     Type
  2029 ;;                  1    wreg      unsigned char 
  2030 ;; Registers used:
  2031 ;;		wreg, status,2
  2032 ;; Tracked objects:
  2033 ;;		On entry : 0/0
  2034 ;;		On exit  : 0/0
  2035 ;;		Unchanged: 0/0
  2036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2041 ;;Total ram usage:        0 bytes
  2042 ;; Hardware stack levels used:    1
  2043 ;; This function calls:
  2044 ;;		Nothing
  2045 ;; This function is called by:
  2046 ;;		_main
  2047 ;; This function uses a non-reentrant model
  2048 ;;
  2049                           
  2050                           	psect	text11
  2051  0010DC                     __ptext11:
  2052                           	opt stack 0
  2053  0010DC                     _UART_getchar:
  2054                           	opt stack 30
  2055                           
  2056                           ;main.c: 479: if(RCIF){
  2057                           
  2058                           ;incstack = 0
  2059  0010DC  AA9E               	btfss	3998,5,c	;volatile
  2060  0010DE  0C00               	retlw	0
  2061  0010E0                     l92:
  2062  0010E0  AA9E               	btfss	3998,5,c	;volatile
  2063  0010E2  D7FE               	goto	l92
  2064                           
  2065                           ;main.c: 481: if( (RCSTAbits.FERR == 1) || (RCSTAbits.OERR == 1) ){
  2066  0010E4  B4AB               	btfsc	4011,2,c	;volatile
  2067  0010E6  D002               	goto	l97
  2068  0010E8  A2AB               	btfss	4011,1,c	;volatile
  2069  0010EA  D002               	goto	l1258
  2070  0010EC                     l97:
  2071                           
  2072                           ;main.c: 482: RCSTAbits.CREN = 0;
  2073  0010EC  98AB               	bcf	4011,4,c	;volatile
  2074                           
  2075                           ;main.c: 483: RCSTAbits.CREN = 1;
  2076  0010EE  88AB               	bsf	4011,4,c	;volatile
  2077  0010F0                     l1258:
  2078                           
  2079                           ;main.c: 484: }
  2080                           ;main.c: 485: return((u8)RCREG1);
  2081  0010F0  50AE               	movf	4014,w,c	;volatile
  2082  0010F2  0012               	return	
  2083  0010F4                     __end_of_UART_getchar:
  2084                           	opt stack 0
  2085                           tblptru	equ	0xFF8
  2086                           tblptrh	equ	0xFF7
  2087                           tblptrl	equ	0xFF6
  2088                           tablat	equ	0xFF5
  2089                           prodh	equ	0xFF4
  2090                           prodl	equ	0xFF3
  2091                           intcon	equ	0xFF2
  2092                           postinc0	equ	0xFEE
  2093                           wreg	equ	0xFE8
  2094                           indf2	equ	0xFDF
  2095                           fsr2h	equ	0xFDA
  2096                           fsr2l	equ	0xFD9
  2097                           status	equ	0xFD8
  2098                           tblptru	equ	0xFF8
  2099                           tblptrh	equ	0xFF7
  2100                           tblptrl	equ	0xFF6
  2101                           tablat	equ	0xFF5
  2102                           prodh	equ	0xFF4
  2103                           prodl	equ	0xFF3
  2104                           intcon	equ	0xFF2
  2105                           postinc0	equ	0xFEE
  2106                           wreg	equ	0xFE8
  2107                           indf2	equ	0xFDF
  2108                           fsr2h	equ	0xFDA
  2109                           fsr2l	equ	0xFD9
  2110                           status	equ	0xFD8
  2111                           
  2112                           	psect	rparam
  2113  0000                     tblptru	equ	0xFF8
  2114                           tblptrh	equ	0xFF7
  2115                           tblptrl	equ	0xFF6
  2116                           tablat	equ	0xFF5
  2117                           prodh	equ	0xFF4
  2118                           prodl	equ	0xFF3
  2119                           intcon	equ	0xFF2
  2120                           postinc0	equ	0xFEE
  2121                           wreg	equ	0xFE8
  2122                           indf2	equ	0xFDF
  2123                           fsr2h	equ	0xFDA
  2124                           fsr2l	equ	0xFD9
  2125                           status	equ	0xFD8


Data Sizes:
    Strings     6
    Constant    0
    Data        0
    BSS         83
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     33      52
    BANK0           160      0      64
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    write_flash@buffer	PTR unsigned char  size(1) Largest target is 64
		 -> gbuffer(BANK0[64]), 

    clear_buffer@buf	PTR unsigned char  size(1) Largest target is 64
		 -> gbuffer(BANK0[64]), 

    send_boot_version@buf	PTR unsigned char  size(1) Largest target is 6
		 -> STR_1(CODE[6]), 


Critical Paths under _main in COMRAM

    _main->_bootloader_state_machine
    _bootloader_state_machine->_write_flash
    _send_boot_version->_UART_putchar

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     4      5    2292
                                             24 COMRAM     9     4      5
                       _UART_getchar
                          _UART_init
           _bootloader_state_machine
 ---------------------------------------------------------------------------------
 (1) _bootloader_state_machine                            13    13      0    2153
                                             11 COMRAM    13    13      0
                       _UART_putchar
                 _UART_wait_for_char
                            ___lbmod
                       _clear_buffer
                        _erase_flash
                        _jump_to_app
                  _send_boot_version
                        _write_flash
 ---------------------------------------------------------------------------------
 (2) _write_flash                                         11     5      6     794
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (2) _send_boot_version                                    4     4      0     182
                                              1 COMRAM     4     4      0
                       _UART_putchar
 ---------------------------------------------------------------------------------
 (3) _UART_putchar                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _jump_to_app                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _erase_flash                                          4     0      4     333
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _clear_buffer                                         5     3      2     411
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) ___lbmod                                              4     3      1     318
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) _UART_wait_for_char                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_getchar                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_getchar
   _UART_init
   _bootloader_state_machine
     _UART_putchar
     _UART_wait_for_char
     ___lbmod
     _clear_buffer
     _erase_flash
     _jump_to_app
     _send_boot_version
       _UART_putchar
     _write_flash

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      40       5       40.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     21      34       1       54.7%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      74       6        0.0%
DATA                 0      0      74       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Tue Jul 28 22:03:03 2015

                                _i 0031                                 l82 0A10  
                               l92 10E0                                 l85 0A18  
                               l97 10EC                                 _vl 0034  
                      __CFG_BORV$1 000000                       __CFG_CP0$OFF 000000  
                     __CFG_CP1$OFF 000000                       __CFG_CP2$OFF 000000  
                     __CFG_CP3$OFF 000000                                l102 0A1E  
                              l201 105E                                l210 0FE8  
                              l107 0A2A                                l164 0C42  
                              l158 0EB4                       ?_erase_flash 0001  
                     __CFG_CPB$OFF 000000                       __CFG_CPD$OFF 000000  
                              u650 0AC6                                u830 0F42  
                              u760 0C80                                _crc 002F  
        __end_of_send_boot_version 103E  __size_of_bootloader_state_machine 04B8  
                              wreg 000FE8                         _TXSTA1bits 000FAC  
        ?_bootloader_state_machine 0001                               l1200 0FAA  
                             l1220 1086                               l1204 0FBC  
                             l1216 1078                               l1304 0ACC  
                             l1402 0CE2                               l1314 0AFE  
                             l1236 10B2                               l1228 109C  
                             l1412 0D20                               l1174 0FF6  
                             l1406 0CEA                               l1270 0A4C  
                             l1502 0F20                               l1168 0A2E  
                             l1440 0D74                               l1336 0B40  
                             l1520 0F74                               l1512 0F54  
                             l1258 10F0                               l1178 1020  
                             l1434 0D60                               l1418 0D38  
                             l1274 0A5C                               l1514 0F60  
                             l1436 0D6A                               l1348 0BB4  
                             l1508 0F42                               l1438 0D70  
                             l1366 0C46                               l1374 0C66  
                             l1294 0A9E                               l1278 0A62  
                             l1526 0F8C                               l1472 0E70  
                             l1448 0DB6                               l1392 0CC8  
                             l1480 0E96                               l1490 0EE0  
                             l1484 0ED6                               l1398 0CDA  
                             l1478 0E78                               STR_1 0F01  
                             _RCIF 007CF5                               _RCON 000FD0  
                    __CFG_FCMEN$ON 000000                               _main 0F08  
                             _temp 0033                               fsr2h 000FDA  
                             indf2 000FDF                               fsr2l 000FD9  
                             prodh 000FF4                               prodl 000FF3  
                             start 0004                      __CFG_IESO$OFF 000000  
                    __CFG_MCLRE$ON 000000                       ___param_bank 000010  
             send_boot_version@buf 0005                       _BAUDCON1bits 000FA7  
                            ?_main 0019                    __end_of___lbmod 10BA  
                            _SPBRG 000FAF               __end_of_clear_buffer 1094  
                    __CFG_WRT0$OFF 000000                      __CFG_WRT1$OFF 000000  
                    __CFG_WRT2$OFF 000000                        _write_flash 0F96  
                    __CFG_WRT3$OFF 000000                     __CFG_EBTR0$OFF 000000  
                   __CFG_EBTR1$OFF 000000                     __CFG_EBTR2$OFF 000000  
                   __CFG_EBTR3$OFF 000000                      __CFG_WRTB$OFF 000000  
                    __CFG_WRTC$OFF 000000                      __CFG_WRTD$OFF 000000  
                   __CFG_EBTRB$OFF 000000                 __size_of_UART_init 0016  
                            tablat 000FF5                              status 000FD8  
                  __initialization 10BA                       __end_of_main 0F96  
                           ??_main 001E                      __activetblptr 000002  
                   __CFG_PLLCFG$ON 000000         __size_of_send_boot_version 004C  
                   __CFG_RETEN$OFF 000000                             _EECON1 000F7F  
                           _EECON2 000F7E                    __CFG_BBSIZ$BB2K 000000  
                   __CFG_WDTEN$OFF 000000      bootloader_state_machine@state 0014  
                           _TABLAT 000FF5                             _RCREG1 000FAE  
                     ?_jump_to_app 0001                     __CFG_WDTPS$256 000000  
                           _TXREG1 000FAD                     __CFG_XINST$OFF 000000  
                __end_of_UART_init 0A48                     __CFG_STVREN$ON 000000  
                        ??___lbmod 0002                             _offset 002C  
                           clear_0 10C0                             clear_1 10CC  
                     __mediumconst 0000               __size_of_erase_flash 002E  
                           tblptrh 000FF7                             tblptrl 000FF6  
                           tblptru 000FF8        bootloader_state_machine@adr 0015  
                  ___lbmod@divisor 0001                         __accesstop 0060  
          __end_of__initialization 10D2                 _UART_wait_for_char 0A1E  
               erase_flash@address 0001                    ___lbmod@counter 0003  
                    ___rparam_used 000001                ?_UART_wait_for_char 0001  
                   __pcstackCOMRAM 0001              __size_of_clear_buffer 0028  
             ??_UART_wait_for_char 0001                         __pbssBANK0 0060  
              UART_putchar@outchar 0001                       _clear_buffer 106C  
                  clear_buffer@buf 0005                    clear_buffer@idx 0001  
                 __CFG_CANMX$PORTB 000000                       ?_write_flash 0001  
                          _TBLPTRH 000FF7                            _TBLPTRL 000FF6  
                          _TBLPTRU 000FF8               __size_of_jump_to_app 000A  
                  __CFG_PWRTEN$OFF 000000                            __Hparam 0000  
                          __Lparam 0000                            ___lbmod 1094  
                       _byte_index 002A                       __psmallconst 0F00  
                          _address 0022                      ?_UART_getchar 0001  
                          __pcinit 10BA                            __ramtop 0F00  
                          __ptext0 0F08                            __ptext1 0A48  
                          __ptext2 0F96                            __ptext3 0FF2  
                          __ptext4 0A0E                            __ptext5 10F4  
                          __ptext6 103E                            __ptext7 106C  
                          __ptext8 1094                            __ptext9 0A1E  
         _bootloader_state_machine 0A48                            _gbuffer 0060  
                    ?_UART_putchar 0001                  __CFG_MSSPMSK$MSK7 000000  
                          _timeout 0026               end_of_initialization 10D2  
                    __Lmediumconst 0000                 write_flash@address 0001  
                        _RCSTAbits 000FAB                            postinc0 000FEE  
               write_flash@counter 000A                     ??_UART_getchar 0001  
                        _UART_init 0A32                     ??_UART_putchar 0001  
                 __CFG_FOSC$INTIO2 000000                   ___lbmod@dividend 0002  
                        _TRISBbits 000F93                          _TRISCbits 000F94  
                      ___lbmod@rem 0004                 send_boot_version@i 0004  
                        _TXSTAbits 000FAC                     _byte_in_record 002E  
                       ?_UART_init 0001                      ??_erase_flash 0005  
              start_initialization 10BA               __size_of_write_flash 005C  
                    clear_buffer@i 0003                        __pbssCOMRAM 0022  
      __size_of_UART_wait_for_char 0014                __end_of_erase_flash 106C  
             __end_of_UART_getchar 10F4               __end_of_UART_putchar 0A1E  
       ??_bootloader_state_machine 000C                           ?___lbmod 0001  
                      ??_UART_init 0001                        __smallconst 0F00  
                    ??_jump_to_app 0001                           _LATBbits 000F8A  
                         _PIR4bits 000FB7                  write_flash@buffer 0005  
                write_flash@length 0006                   __CFG_SOSCSEL$DIG 000000  
                      _erase_flash 103E                          main@hbeat 001E  
                       _EECON1bits 000F7F                           __Hrparam 0000  
              __end_of_jump_to_app 10FE                           __Lrparam 0000  
               __CFG_BOREN$SBORDIS 000000                   __size_of___lbmod 0026  
                    _end_of_record 0030              __size_of_UART_getchar 0018  
                         __ptext10 0A32                           __ptext11 10DC  
            __size_of_UART_putchar 0010                      __size_of_main 008E  
                    ?_clear_buffer 0001   __end_of_bootloader_state_machine 0F00  
                         main@argc 0019                           main@argv 001B  
                     _UART_getchar 10DC                        _record_type 0032  
              __CFG_INTOSCSEL$HIGH 000000                        _OSCTUNEbits 000F9B  
                       _INTCONbits 000FF2                      ??_write_flash 0007  
                     _UART_putchar 0A0E                        _jump_to_app 10F4  
                   ??_clear_buffer 0003                         _OSCCONbits 000FD3  
       __end_of_UART_wait_for_char 0A32                  _send_boot_version 0FF2  
               ?_send_boot_version 0001                __end_of_write_flash 0FF2  
              __CFG_BORPWR$ZPBORMV 000000                ??_send_boot_version 0002  
