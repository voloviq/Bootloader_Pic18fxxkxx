

Microchip Technology PIC18 PRO Macro Assembler V1.34 build -361300703 
                                                                                               Mon Aug 10 20:59:37 2015

Microchip Technology Omniscient Code Generator (PRO mode) build 201502162209
     1                           	processor	18F26K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    21  0000                     _BAUDCON1bits	set	4007
    22  0000                     _EECON1	set	3967
    23  0000                     _EECON1bits	set	3967
    24  0000                     _EECON2	set	3966
    25  0000                     _INTCONbits	set	4082
    26  0000                     _LATBbits	set	3978
    27  0000                     _OSCCONbits	set	4051
    28  0000                     _OSCTUNEbits	set	3995
    29  0000                     _PIR4bits	set	4023
    30  0000                     _RCON	set	4048
    31  0000                     _RCREG1	set	4014
    32  0000                     _RCSTAbits	set	4011
    33  0000                     _SPBRG	set	4015
    34  0000                     _TABLAT	set	4085
    35  0000                     _TBLPTRH	set	4087
    36  0000                     _TBLPTRL	set	4086
    37  0000                     _TBLPTRU	set	4088
    38  0000                     _TRISBbits	set	3987
    39  0000                     _TRISCbits	set	3988
    40  0000                     _TXREG1	set	4013
    41  0000                     _TXSTA1bits	set	4012
    42  0000                     _TXSTAbits	set	4012
    43  0000                     _RCIF	set	31989
    44                           
    45                           	psect	smallconst
    46  000F00                     __psmallconst:
    47                           	opt stack 0
    48  000F00  00                 	db	0
    49  000F01                     STR_1:
    50  000F01  42                 	db	66	;'B'
    51  000F02  6F                 	db	111	;'o'
    52  000F03  6F                 	db	111	;'o'
    53  000F04  74                 	db	116	;'t'
    54  000F05  5F                 	db	95	;'_'
    55  000F06  31                 	db	49	;'1'
    56  000F07  2E                 	db	46
    57  000F08  30                 	db	48	;'0'
    58  000F09  2E                 	db	46
    59  000F0A  61                 	db	97	;'a'
    60  000F0B  00                 	db	0
    61                           
    62                           ; #config settings
    63  000F0C  00                 	db	0	; dummy byte at the end
    64  0000                     
    65                           	psect	cinit
    66  000C5E                     __pcinit:
    67                           	opt stack 0
    68  000C5E                     start_initialization:
    69                           	opt stack 0
    70  000C5E                     __initialization:
    71                           	opt stack 0
    72                           
    73                           ; Clear objects allocated to BANK0 (64 bytes)
    74  000C5E  EE00  F060         	lfsr	0,__pbssBANK0
    75  000C62  0E40               	movlw	64
    76  000C64                     clear_0:
    77  000C64  6AEE               	clrf	postinc0,c
    78  000C66  06E8               	decf	wreg,f,c
    79  000C68  E1FD               	bnz	clear_0
    80                           
    81                           ; Clear objects allocated to COMRAM (4 bytes)
    82  000C6A  6A2B               	clrf	(__pbssCOMRAM+3)& (0+255),c
    83  000C6C  6A2A               	clrf	(__pbssCOMRAM+2)& (0+255),c
    84  000C6E  6A29               	clrf	(__pbssCOMRAM+1)& (0+255),c
    85  000C70  6A28               	clrf	__pbssCOMRAM& (0+255),c
    86  000C72                     end_of_initialization:
    87                           	opt stack 0
    88  000C72                     __end_of__initialization:
    89                           	opt stack 0
    90  000C72  0E00               	movlw	low (__Lmediumconst shr (0+16))
    91  000C74  6EF8               	movwf	tblptru,c
    92  000C76  0100               	movlb	0
    93  000C78  EF87  F007         	goto	_main	;jump to C main() function
    94                           tblptru	equ	0xFF8
    95                           postinc0	equ	0xFEE
    96                           wreg	equ	0xFE8
    97                           
    98                           	psect	bssCOMRAM
    99  000028                     __pbssCOMRAM:
   100                           	opt stack 0
   101  000028                     _timeout:
   102                           	opt stack 0
   103  000028                     	ds	4
   104                           tblptru	equ	0xFF8
   105                           postinc0	equ	0xFEE
   106                           wreg	equ	0xFE8
   107                           
   108                           	psect	bssBANK0
   109  000060                     __pbssBANK0:
   110                           	opt stack 0
   111  000060                     _gbuffer:
   112                           	opt stack 0
   113  000060                     	ds	64
   114                           tblptru	equ	0xFF8
   115                           postinc0	equ	0xFEE
   116                           wreg	equ	0xFE8
   117                           
   118                           	psect	cstackCOMRAM
   119  000001                     __pcstackCOMRAM:
   120                           	opt stack 0
   121  000001                     UART_putchar@outchar:
   122                           	opt stack 0
   123  000001                     UART_getchar@tout_val:
   124                           	opt stack 0
   125  000001                     erase_flash@address:
   126                           	opt stack 0
   127  000001                     write_flash@address:
   128                           	opt stack 0
   129                           
   130                           ; 4 bytes @ 0x0
   131  000001                     	ds	1
   132  000002                     ??_send_string_uart:
   133                           
   134                           ; 0 bytes @ 0x1
   135  000002                     	ds	1
   136  000003                     UART_getchar@tout:
   137                           	opt stack 0
   138                           
   139                           ; 2 bytes @ 0x2
   140  000003                     	ds	1
   141  000004                     send_string_uart@i:
   142                           	opt stack 0
   143                           
   144                           ; 1 bytes @ 0x3
   145  000004                     	ds	1
   146  000005                     send_string_uart@buf:
   147                           	opt stack 0
   148  000005                     write_flash@buffer:
   149                           	opt stack 0
   150                           
   151                           ; 1 bytes @ 0x4
   152  000005                     	ds	1
   153  000006                     write_flash@length:
   154                           	opt stack 0
   155                           
   156                           ; 1 bytes @ 0x5
   157  000006                     	ds	1
   158  000007                     ??_write_flash:
   159                           
   160                           ; 0 bytes @ 0x6
   161  000007                     	ds	3
   162  00000A                     write_flash@counter:
   163                           	opt stack 0
   164                           
   165                           ; 2 bytes @ 0x9
   166  00000A                     	ds	2
   167  00000C                     ??_bootloader_state_machine:
   168                           
   169                           ; 0 bytes @ 0xB
   170  00000C                     	ds	5
   171  000011                     bootloader_state_machine@state:
   172                           	opt stack 0
   173                           
   174                           ; 1 bytes @ 0x10
   175  000011                     	ds	1
   176  000012                     bootloader_state_machine@address:
   177                           	opt stack 0
   178                           
   179                           ; 4 bytes @ 0x11
   180  000012                     	ds	4
   181  000016                     bootloader_state_machine@adr:
   182                           	opt stack 0
   183                           
   184                           ; 4 bytes @ 0x15
   185  000016                     	ds	4
   186  00001A                     bootloader_state_machine@adr_778:
   187                           	opt stack 0
   188                           
   189                           ; 4 bytes @ 0x19
   190  00001A                     	ds	4
   191  00001E                     bootloader_state_machine@crc:
   192                           	opt stack 0
   193                           
   194                           ; 1 bytes @ 0x1D
   195  00001E                     	ds	1
   196  00001F                     
   197                           ; 2 bytes @ 0x1E
   198  00001F                     	ds	2
   199  000021                     
   200                           ; 3 bytes @ 0x20
   201  000021                     	ds	3
   202  000024                     main@hbeat:
   203                           	opt stack 0
   204                           
   205                           ; 4 bytes @ 0x23
   206  000024                     	ds	4
   207                           tblptru	equ	0xFF8
   208                           postinc0	equ	0xFEE
   209                           wreg	equ	0xFE8
   210                           
   211 ;;
   212 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   213 ;;
   214 ;; *************** function _main *****************
   215 ;; Defined at:
   216 ;;		line 323 in file "main.c"
   217 ;; Parameters:    Size  Location     Type
   218 ;;  argc            2   30[COMRAM] int 
   219 ;;  argv            3   32[COMRAM] PTR PTR unsigned char 
   220 ;; Auto vars:     Size  Location     Type
   221 ;;  hbeat           4   35[COMRAM] unsigned long 
   222 ;; Return value:  Size  Location     Type
   223 ;;                  2   30[COMRAM] int 
   224 ;; Registers used:
   225 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   226 ;; Tracked objects:
   227 ;;		On entry : 0/0
   228 ;;		On exit  : 0/0
   229 ;;		Unchanged: 0/0
   230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   231 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   232 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   234 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   235 ;;Total ram usage:        9 bytes
   236 ;; Hardware stack levels required when called:    3
   237 ;; This function calls:
   238 ;;		_UART_getchar
   239 ;;		_UART_init
   240 ;;		_bootloader_state_machine
   241 ;; This function is called by:
   242 ;;		Startup code after reset
   243 ;; This function uses a non-reentrant model
   244 ;;
   245                           
   246                           	psect	text0
   247  000F0E                     __ptext0:
   248                           	opt stack 0
   249  000F0E                     _main:
   250                           	opt stack 28
   251                           
   252                           ;main.c: 330: OSCCONbits.IRCF2 = 1;
   253                           
   254                           ;incstack = 0
   255  000F0E  8CD3               	bsf	4051,6,c	;volatile
   256                           
   257                           ;main.c: 331: OSCCONbits.IRCF1 = 1;
   258  000F10  8AD3               	bsf	4051,5,c	;volatile
   259                           
   260                           ;main.c: 332: OSCCONbits.IRCF0 = 1;
   261  000F12  88D3               	bsf	4051,4,c	;volatile
   262                           
   263                           ;main.c: 335: OSCCONbits.HFIOFS = 1;
   264  000F14  84D3               	bsf	4051,2,c	;volatile
   265                           
   266                           ;main.c: 338: OSCTUNEbits.PLLEN = 1;
   267  000F16  8C9B               	bsf	3995,6,c	;volatile
   268                           
   269                           ;main.c: 343: TRISBbits.TRISB0 = 0;
   270  000F18  9093               	bcf	3987,0,c	;volatile
   271                           
   272                           ;main.c: 346: UART_init();
   273  000F1A  EC24  F006         	call	_UART_init	;wreg free
   274                           
   275                           ;main.c: 349: for(hbeat=0; hbeat<0x0040; hbeat++)
   276  000F1E  6A24               	clrf	main@hbeat,c
   277  000F20  6A25               	clrf	main@hbeat+1,c
   278  000F22  6A26               	clrf	main@hbeat+2,c
   279  000F24  6A27               	clrf	main@hbeat+3,c
   280  000F26                     l1099:
   281                           
   282                           ;main.c: 350: {
   283                           ;main.c: 351: gbuffer[hbeat] = 0xFF;
   284  000F26  5024               	movf	main@hbeat,w,c
   285  000F28  0F60               	addlw	low _gbuffer
   286  000F2A  6ED9               	movwf	fsr2l,c
   287  000F2C  6ADA               	clrf	fsr2h,c
   288  000F2E  68DF               	setf	indf2,c
   289  000F30  2A24               	incf	main@hbeat,f,c
   290  000F32  0E00               	movlw	0
   291  000F34  2225               	addwfc	main@hbeat+1,f,c
   292  000F36  2226               	addwfc	main@hbeat+2,f,c
   293  000F38  2227               	addwfc	main@hbeat+3,f,c
   294  000F3A  5027               	movf	main@hbeat+3,w,c
   295  000F3C  1026               	iorwf	main@hbeat+2,w,c
   296  000F3E  1025               	iorwf	main@hbeat+1,w,c
   297  000F40  E103               	bnz	u350
   298  000F42  0E40               	movlw	64
   299  000F44  5C24               	subwf	main@hbeat,w,c
   300  000F46  E3EF               	bnc	l1099
   301  000F48                     u350:
   302                           
   303                           ;main.c: 352: }
   304                           ;main.c: 354: timeout = 0x00000000;
   305  000F48  6A28               	clrf	_timeout,c
   306  000F4A  6A29               	clrf	_timeout+1,c
   307  000F4C  6A2A               	clrf	_timeout+2,c
   308  000F4E  6A2B               	clrf	_timeout+3,c
   309  000F50                     l1105:
   310                           
   311                           ;main.c: 357: if(hbeat == 0x03F){
   312  000F50  0E3F               	movlw	63
   313  000F52  1824               	xorwf	main@hbeat,w,c
   314  000F54  1025               	iorwf	main@hbeat+1,w,c
   315  000F56  1026               	iorwf	main@hbeat+2,w,c
   316  000F58  1027               	iorwf	main@hbeat+3,w,c
   317  000F5A  E107               	bnz	l1111
   318                           
   319                           ;main.c: 358: LATBbits.LATB0 = 1;
   320  000F5C  808A               	bsf	3978,0,c	;volatile
   321  000F5E                     l1109:
   322                           
   323                           ;main.c: 359: hbeat++;
   324  000F5E  2A24               	incf	main@hbeat,f,c
   325  000F60  0E00               	movlw	0
   326  000F62  2225               	addwfc	main@hbeat+1,f,c
   327  000F64  2226               	addwfc	main@hbeat+2,f,c
   328  000F66  2227               	addwfc	main@hbeat+3,f,c
   329                           
   330                           ;main.c: 360: }
   331  000F68  D015               	goto	l1123
   332  000F6A                     l1111:
   333                           
   334                           ;main.c: 361: else if( hbeat == 0x1FF ){
   335  000F6A  2824               	incf	main@hbeat,w,c
   336  000F6C  E107               	bnz	l1117
   337  000F6E  0425               	decf	main@hbeat+1,w,c
   338  000F70  1026               	iorwf	main@hbeat+2,w,c
   339  000F72  1027               	iorwf	main@hbeat+3,w,c
   340  000F74  A4D8               	btfss	status,2,c
   341  000F76  D002               	goto	l1117
   342                           
   343                           ;main.c: 362: LATBbits.LATB0 = 0;
   344  000F78  908A               	bcf	3978,0,c	;volatile
   345  000F7A  D7F1               	goto	l1109
   346  000F7C                     l1117:
   347                           
   348                           ;main.c: 365: else if (hbeat == 0x9FF){
   349  000F7C  2824               	incf	main@hbeat,w,c
   350  000F7E  E1EF               	bnz	l1109
   351  000F80  0E09               	movlw	9
   352  000F82  1825               	xorwf	main@hbeat+1,w,c
   353  000F84  1026               	iorwf	main@hbeat+2,w,c
   354  000F86  1027               	iorwf	main@hbeat+3,w,c
   355  000F88  A4D8               	btfss	status,2,c
   356  000F8A  D7E9               	goto	l1109
   357                           
   358                           ;main.c: 366: hbeat = 0x00;
   359  000F8C  6A24               	clrf	main@hbeat,c
   360  000F8E  6A25               	clrf	main@hbeat+1,c
   361  000F90  6A26               	clrf	main@hbeat+2,c
   362  000F92  6A27               	clrf	main@hbeat+3,c
   363  000F94                     l1123:
   364                           
   365                           ;main.c: 370: }
   366                           ;main.c: 371: bootloader_state_machine(UART_getchar(0xFF));
   367  000F94  6A02               	clrf	UART_getchar@tout_val+1,c
   368  000F96  6801               	setf	UART_getchar@tout_val,c
   369  000F98  EC55  F006         	call	_UART_getchar	;wreg free
   370  000F9C  EC96  F006         	call	_bootloader_state_machine
   371  000FA0  D7D7               	goto	l1105
   372  000FA2                     __end_of_main:
   373                           	opt stack 0
   374                           tblptru	equ	0xFF8
   375                           postinc0	equ	0xFEE
   376                           wreg	equ	0xFE8
   377                           indf2	equ	0xFDF
   378                           fsr2h	equ	0xFDA
   379                           fsr2l	equ	0xFD9
   380                           status	equ	0xFD8
   381                           
   382 ;; *************** function _bootloader_state_machine *****************
   383 ;; Defined at:
   384 ;;		line 456 in file "main.c"
   385 ;; Parameters:    Size  Location     Type
   386 ;;  state           1    wreg     unsigned char 
   387 ;; Auto vars:     Size  Location     Type
   388 ;;  state           1   16[COMRAM] unsigned char 
   389 ;;  adr             4   25[COMRAM] unsigned long 
   390 ;;  adr             4   21[COMRAM] unsigned long 
   391 ;;  address         4   17[COMRAM] unsigned long 
   392 ;;  crc             1   29[COMRAM] unsigned char 
   393 ;; Return value:  Size  Location     Type
   394 ;;		None               void
   395 ;; Registers used:
   396 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   397 ;; Tracked objects:
   398 ;;		On entry : 0/0
   399 ;;		On exit  : 0/0
   400 ;;		Unchanged: 0/0
   401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   403 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   404 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   405 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   406 ;;Total ram usage:       19 bytes
   407 ;; Hardware stack levels used:    1
   408 ;; Hardware stack levels required when called:    2
   409 ;; This function calls:
   410 ;;		_UART_getchar
   411 ;;		_UART_putchar
   412 ;;		_erase_flash
   413 ;;		_jump_to_app
   414 ;;		_send_string_uart
   415 ;;		_write_flash
   416 ;; This function is called by:
   417 ;;		_main
   418 ;; This function uses a non-reentrant model
   419 ;;
   420                           
   421                           	psect	text1
   422  000D2C                     __ptext1:
   423                           	opt stack 0
   424  000D2C                     _bootloader_state_machine:
   425                           	opt stack 28
   426                           
   427                           ;incstack = 0
   428                           ;bootloader_state_machine@state stored from wreg
   429  000D2C  6E11               	movwf	bootloader_state_machine@state,c
   430                           
   431                           ;main.c: 459: u8 crc = 0x00;
   432  000D2E  6A1E               	clrf	bootloader_state_machine@crc,c
   433                           
   434                           ;main.c: 461: switch (state)
   435  000D30  D0D3               	goto	l1087
   436  000D32                     l1013:
   437                           
   438                           ;main.c: 465: UART_putchar(0x10);
   439  000D32  0E10               	movlw	16
   440  000D34  EC1C  F006         	call	_UART_putchar
   441                           
   442                           ;main.c: 466: send_string_uart((u8 *)"Boot_1.0.a");
   443  000D38  0E01               	movlw	STR_1& (0+255)
   444  000D3A  EF70  F006         	goto	_send_string_uart
   445                           
   446                           ;main.c: 467: break;
   447  000D3E  D099               	goto	l1051
   448  000D40                     l1019:
   449                           
   450                           ;main.c: 474: for (u32 adr = 0x1000; adr < 0x10000; adr += 64){
   451  000D40  6A16               	clrf	bootloader_state_machine@adr,c
   452  000D42  0E10               	movlw	16
   453  000D44  6E17               	movwf	bootloader_state_machine@adr+1,c
   454  000D46  6A18               	clrf	bootloader_state_machine@adr+2,c
   455  000D48  6A19               	clrf	bootloader_state_machine@adr+3,c
   456  000D4A                     l1025:
   457                           
   458                           ;main.c: 475: erase_flash(adr);
   459  000D4A  C016  F001         	movff	bootloader_state_machine@adr,erase_flash@address
   460  000D4E  C017  F002         	movff	bootloader_state_machine@adr+1,erase_flash@address+1
   461  000D52  C018  F003         	movff	bootloader_state_machine@adr+2,erase_flash@address+2
   462  000D56  C019  F004         	movff	bootloader_state_machine@adr+3,erase_flash@address+3
   463  000D5A  EC3E  F006         	call	_erase_flash	;wreg free
   464  000D5E  0E40               	movlw	64
   465  000D60  2616               	addwf	bootloader_state_machine@adr,f,c
   466  000D62  0E00               	movlw	0
   467  000D64  2217               	addwfc	bootloader_state_machine@adr+1,f,c
   468  000D66  2218               	addwfc	bootloader_state_machine@adr+2,f,c
   469  000D68  2219               	addwfc	bootloader_state_machine@adr+3,f,c
   470  000D6A  5019               	movf	bootloader_state_machine@adr+3,w,c
   471  000D6C  E102               	bnz	u310
   472  000D6E  0418               	decf	bootloader_state_machine@adr+2,w,c
   473  000D70  E3EC               	bnc	l1025
   474  000D72                     u310:
   475  000D72  D07F               	goto	l1051
   476  000D74                     l1033:
   477                           
   478                           ;main.c: 481: address = (((u32)UART_getchar(0x7FFF))<<24);
   479  000D74  0E7F               	movlw	127
   480  000D76  6E02               	movwf	UART_getchar@tout_val+1,c
   481  000D78  6801               	setf	UART_getchar@tout_val,c
   482  000D7A  EC55  F006         	call	_UART_getchar	;wreg free
   483  000D7E  6E0C               	movwf	??_bootloader_state_machine& (0+255),c
   484  000D80  C00C  F00D         	movff	??_bootloader_state_machine,??_bootloader_state_machine+1
   485  000D84  6A0E               	clrf	(??_bootloader_state_machine+2)& (0+255),c
   486  000D86  6A0F               	clrf	(??_bootloader_state_machine+3)& (0+255),c
   487  000D88  6A10               	clrf	(??_bootloader_state_machine+4)& (0+255),c
   488  000D8A  C00D  F010         	movff	??_bootloader_state_machine+1,??_bootloader_state_machine+4
   489  000D8E  6A0F               	clrf	??_bootloader_state_machine+3,c
   490  000D90  6A0E               	clrf	??_bootloader_state_machine+2,c
   491  000D92  6A0D               	clrf	??_bootloader_state_machine+1,c
   492  000D94  C00D  F012         	movff	??_bootloader_state_machine+1,bootloader_state_machine@address
   493  000D98  C00E  F013         	movff	??_bootloader_state_machine+2,bootloader_state_machine@address+1
   494  000D9C  C00F  F014         	movff	??_bootloader_state_machine+3,bootloader_state_machine@address+2
   495  000DA0  C010  F015         	movff	??_bootloader_state_machine+4,bootloader_state_machine@address+3
   496                           
   497                           ;main.c: 482: address |= (((u32)UART_getchar(0x7FFF))<<16);
   498  000DA4  0E7F               	movlw	127
   499  000DA6  6E02               	movwf	UART_getchar@tout_val+1,c
   500  000DA8  6801               	setf	UART_getchar@tout_val,c
   501  000DAA  EC55  F006         	call	_UART_getchar	;wreg free
   502  000DAE  6E0C               	movwf	??_bootloader_state_machine& (0+255),c
   503  000DB0  C00C  F00D         	movff	??_bootloader_state_machine,??_bootloader_state_machine+1
   504  000DB4  6A0E               	clrf	(??_bootloader_state_machine+2)& (0+255),c
   505  000DB6  6A0F               	clrf	(??_bootloader_state_machine+3)& (0+255),c
   506  000DB8  6A10               	clrf	(??_bootloader_state_machine+4)& (0+255),c
   507  000DBA  C00E  F010         	movff	??_bootloader_state_machine+2,??_bootloader_state_machine+4
   508  000DBE  C00D  F00F         	movff	??_bootloader_state_machine+1,??_bootloader_state_machine+3
   509  000DC2  6A0E               	clrf	??_bootloader_state_machine+2,c
   510  000DC4  6A0D               	clrf	??_bootloader_state_machine+1,c
   511  000DC6  500D               	movf	??_bootloader_state_machine+1,w,c
   512  000DC8  1212               	iorwf	bootloader_state_machine@address,f,c
   513  000DCA  500E               	movf	??_bootloader_state_machine+2,w,c
   514  000DCC  1213               	iorwf	bootloader_state_machine@address+1,f,c
   515  000DCE  500F               	movf	??_bootloader_state_machine+3,w,c
   516  000DD0  1214               	iorwf	bootloader_state_machine@address+2,f,c
   517  000DD2  5010               	movf	??_bootloader_state_machine+4,w,c
   518  000DD4  1215               	iorwf	bootloader_state_machine@address+3,f,c
   519                           
   520                           ;main.c: 483: address |= (((u32)UART_getchar(0x7FFF))<<8);
   521  000DD6  0E7F               	movlw	127
   522  000DD8  6E02               	movwf	UART_getchar@tout_val+1,c
   523  000DDA  6801               	setf	UART_getchar@tout_val,c
   524  000DDC  EC55  F006         	call	_UART_getchar	;wreg free
   525  000DE0  6E0C               	movwf	??_bootloader_state_machine& (0+255),c
   526  000DE2  C00C  F00D         	movff	??_bootloader_state_machine,??_bootloader_state_machine+1
   527  000DE6  6A0E               	clrf	(??_bootloader_state_machine+2)& (0+255),c
   528  000DE8  6A0F               	clrf	(??_bootloader_state_machine+3)& (0+255),c
   529  000DEA  6A10               	clrf	(??_bootloader_state_machine+4)& (0+255),c
   530  000DEC  C00F  F010         	movff	??_bootloader_state_machine+3,??_bootloader_state_machine+4
   531  000DF0  C00E  F00F         	movff	??_bootloader_state_machine+2,??_bootloader_state_machine+3
   532  000DF4  C00D  F00E         	movff	??_bootloader_state_machine+1,??_bootloader_state_machine+2
   533  000DF8  6A0D               	clrf	??_bootloader_state_machine+1,c
   534  000DFA  500D               	movf	??_bootloader_state_machine+1,w,c
   535  000DFC  1212               	iorwf	bootloader_state_machine@address,f,c
   536  000DFE  500E               	movf	??_bootloader_state_machine+2,w,c
   537  000E00  1213               	iorwf	bootloader_state_machine@address+1,f,c
   538  000E02  500F               	movf	??_bootloader_state_machine+3,w,c
   539  000E04  1214               	iorwf	bootloader_state_machine@address+2,f,c
   540  000E06  5010               	movf	??_bootloader_state_machine+4,w,c
   541  000E08  1215               	iorwf	bootloader_state_machine@address+3,f,c
   542                           
   543                           ;main.c: 484: address |= ((u32)UART_getchar(0x7FFF));
   544  000E0A  0E7F               	movlw	127
   545  000E0C  6E02               	movwf	UART_getchar@tout_val+1,c
   546  000E0E  6801               	setf	UART_getchar@tout_val,c
   547  000E10  EC55  F006         	call	_UART_getchar	;wreg free
   548  000E14  1212               	iorwf	bootloader_state_machine@address,f,c
   549                           
   550                           ;main.c: 485: for (u32 adr = 0; adr < 0x0040; adr++){
   551  000E16  6A1A               	clrf	bootloader_state_machine@adr_778,c
   552  000E18  6A1B               	clrf	bootloader_state_machine@adr_778+1,c
   553  000E1A  6A1C               	clrf	bootloader_state_machine@adr_778+2,c
   554  000E1C  6A1D               	clrf	bootloader_state_machine@adr_778+3,c
   555  000E1E                     l1041:
   556                           
   557                           ;main.c: 486: gbuffer[adr] = UART_getchar(0x7FFF);
   558  000E1E  501A               	movf	bootloader_state_machine@adr_778,w,c
   559  000E20  0F60               	addlw	low _gbuffer
   560  000E22  6ED9               	movwf	fsr2l,c
   561  000E24  6ADA               	clrf	fsr2h,c
   562  000E26  0E7F               	movlw	127
   563  000E28  6E02               	movwf	UART_getchar@tout_val+1,c
   564  000E2A  6801               	setf	UART_getchar@tout_val,c
   565  000E2C  EC55  F006         	call	_UART_getchar	;wreg free
   566  000E30  6EDF               	movwf	indf2,c
   567  000E32  2A1A               	incf	bootloader_state_machine@adr_778,f,c
   568  000E34  0E00               	movlw	0
   569  000E36  221B               	addwfc	bootloader_state_machine@adr_778+1,f,c
   570  000E38  221C               	addwfc	bootloader_state_machine@adr_778+2,f,c
   571  000E3A  221D               	addwfc	bootloader_state_machine@adr_778+3,f,c
   572  000E3C  501D               	movf	bootloader_state_machine@adr_778+3,w,c
   573  000E3E  101C               	iorwf	bootloader_state_machine@adr_778+2,w,c
   574  000E40  101B               	iorwf	bootloader_state_machine@adr_778+1,w,c
   575  000E42  E103               	bnz	u320
   576  000E44  0E40               	movlw	64
   577  000E46  5C1A               	subwf	bootloader_state_machine@adr_778,w,c
   578  000E48  E3EA               	bnc	l1041
   579  000E4A                     u320:
   580                           
   581                           ;main.c: 487: }
   582                           ;main.c: 488: if(address >= (u32)0x1000){
   583  000E4A  5015               	movf	bootloader_state_machine@address+3,w,c
   584  000E4C  1014               	iorwf	bootloader_state_machine@address+2,w,c
   585  000E4E  E103               	bnz	u330
   586  000E50  0E10               	movlw	16
   587  000E52  5C13               	subwf	bootloader_state_machine@address+1,w,c
   588  000E54  E30E               	bnc	l1051
   589  000E56                     u330:
   590                           
   591                           ;main.c: 489: write_flash(address, gbuffer, 0x0040);
   592  000E56  C012  F001         	movff	bootloader_state_machine@address,write_flash@address
   593  000E5A  C013  F002         	movff	bootloader_state_machine@address+1,write_flash@address+1
   594  000E5E  C014  F003         	movff	bootloader_state_machine@address+2,write_flash@address+2
   595  000E62  C015  F004         	movff	bootloader_state_machine@address+3,write_flash@address+3
   596  000E66  0E60               	movlw	low _gbuffer
   597  000E68  6E05               	movwf	write_flash@buffer,c
   598  000E6A  0E40               	movlw	64
   599  000E6C  6E06               	movwf	write_flash@length,c
   600  000E6E  ECD1  F007         	call	_write_flash	;wreg free
   601  000E72                     l1051:
   602                           
   603                           ;main.c: 490: }
   604                           ;main.c: 491: UART_putchar(0x12);
   605  000E72  0E12               	movlw	18
   606  000E74  EF1C  F006         	goto	_UART_putchar
   607  000E78                     l1053:
   608                           
   609                           ;main.c: 495: crc = 0x12;
   610  000E78  0E12               	movlw	18
   611  000E7A  6E1E               	movwf	bootloader_state_machine@crc,c
   612                           
   613                           ;main.c: 497: crc += (u8)((0x0040&0xFF00)>>8);
   614  000E7C  0E12               	movlw	18
   615  000E7E  EC1C  F006         	call	_UART_putchar
   616                           
   617                           ;main.c: 498: UART_putchar((u8)((0x0040&0xFF00)>>8));
   618  000E82  0E00               	movlw	0
   619  000E84  EC1C  F006         	call	_UART_putchar
   620                           
   621                           ;main.c: 499: crc += (u8)(0x0040&0x00FF);
   622  000E88  0E40               	movlw	64
   623  000E8A  261E               	addwf	bootloader_state_machine@crc,f,c
   624                           
   625                           ;main.c: 500: UART_putchar((u8)(0x0040&0x00FF));
   626  000E8C  0E40               	movlw	64
   627  000E8E  EC1C  F006         	call	_UART_putchar
   628  000E92  D00D               	goto	l1075
   629  000E94                     l1065:
   630                           
   631                           ;main.c: 505: crc = 0x15;
   632  000E94  0E15               	movlw	21
   633  000E96  6E1E               	movwf	bootloader_state_machine@crc,c
   634                           
   635                           ;main.c: 507: crc += (u8)((0x003F&0xFF00)>>8);
   636  000E98  0E15               	movlw	21
   637  000E9A  EC1C  F006         	call	_UART_putchar
   638                           
   639                           ;main.c: 508: UART_putchar((u8)((0x003F&0xFF00)>>8));
   640  000E9E  0E00               	movlw	0
   641  000EA0  EC1C  F006         	call	_UART_putchar
   642                           
   643                           ;main.c: 509: crc += (u8)(0x003F&0x00FF);
   644  000EA4  0E3F               	movlw	63
   645  000EA6  261E               	addwf	bootloader_state_machine@crc,f,c
   646                           
   647                           ;main.c: 510: UART_putchar((u8)(0x003F&0x00FF));
   648  000EA8  0E3F               	movlw	63
   649  000EAA  EC1C  F006         	call	_UART_putchar
   650  000EAE                     l1075:
   651                           
   652                           ;main.c: 511: UART_putchar(crc);
   653  000EAE  501E               	movf	bootloader_state_machine@crc,w,c
   654  000EB0  EF1C  F006         	goto	_UART_putchar
   655  000EB4                     l1077:
   656                           
   657                           ;main.c: 515: UART_putchar(0x12);
   658  000EB4  0E12               	movlw	18
   659  000EB6  EC1C  F006         	call	_UART_putchar
   660  000EBA                     l1079:
   661                           
   662                           ;main.c: 516: jump_to_app();
   663  000EBA  EF16  F006         	goto	_jump_to_app	;wreg free
   664  000EBE                     l1081:
   665                           
   666                           ;main.c: 520: timeout++;
   667  000EBE  2A28               	incf	_timeout,f,c
   668  000EC0  0E00               	movlw	0
   669  000EC2  2229               	addwfc	_timeout+1,f,c
   670  000EC4  222A               	addwfc	_timeout+2,f,c
   671  000EC6  222B               	addwfc	_timeout+3,f,c
   672                           
   673                           ;main.c: 521: if(timeout == 0x00001FFF){
   674  000EC8  2828               	incf	_timeout,w,c
   675  000ECA  E119               	bnz	l124
   676  000ECC  0E1F               	movlw	31
   677  000ECE  1829               	xorwf	_timeout+1,w,c
   678  000ED0  102A               	iorwf	_timeout+2,w,c
   679  000ED2  102B               	iorwf	_timeout+3,w,c
   680  000ED4  E0F2               	bz	l1079
   681  000ED6  0012               	return	
   682  000ED8                     l1087:
   683  000ED8  5011               	movf	bootloader_state_machine@state,w,c
   684                           
   685                           ; Switch size 1, requested type "speed"
   686                           ; Number of cases is 7, Range of values is 16 to 22
   687                           ; switch strategies available:
   688                           ; Name         Instructions Cycles
   689                           ; simple_byte           22    12 (average)
   690                           ;	Chosen strategy is simple_byte
   691  000EDA  0A10               	xorlw	16	; case 16
   692  000EDC  E101 D729          	bz	l1013
   693  000EE0  0A01               	xorlw	1	; case 17
   694  000EE2  E0C7               	bz	l1051
   695  000EE4  0A03               	xorlw	3	; case 18
   696  000EE6  E0C8               	bz	l1053
   697  000EE8  0A01               	xorlw	1	; case 19
   698  000EEA  E101 D729          	bz	l1019
   699  000EEE  0A07               	xorlw	7	; case 20
   700  000EF0  E101 D740          	bz	l1033
   701  000EF4  0A01               	xorlw	1	; case 21
   702  000EF6  E0CE               	bz	l1065
   703  000EF8  0A03               	xorlw	3	; case 22
   704  000EFA  E0DC               	bz	l1077
   705  000EFC  D7E0               	goto	l1081
   706  000EFE                     l124:
   707  000EFE  0012               	return		;funcret
   708  000F00                     __end_of_bootloader_state_machine:
   709                           	opt stack 0
   710                           tblptru	equ	0xFF8
   711                           postinc0	equ	0xFEE
   712                           wreg	equ	0xFE8
   713                           indf2	equ	0xFDF
   714                           fsr2h	equ	0xFDA
   715                           fsr2l	equ	0xFD9
   716                           status	equ	0xFD8
   717                           
   718 ;; *************** function _write_flash *****************
   719 ;; Defined at:
   720 ;;		line 582 in file "main.c"
   721 ;; Parameters:    Size  Location     Type
   722 ;;  address         4    0[COMRAM] unsigned long 
   723 ;;  buffer          1    4[COMRAM] PTR unsigned char 
   724 ;;		 -> gbuffer(64), 
   725 ;;  length          1    5[COMRAM] unsigned char 
   726 ;; Auto vars:     Size  Location     Type
   727 ;;  counter         2    9[COMRAM] int 
   728 ;; Return value:  Size  Location     Type
   729 ;;		None               void
   730 ;; Registers used:
   731 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   732 ;; Tracked objects:
   733 ;;		On entry : 0/0
   734 ;;		On exit  : 0/0
   735 ;;		Unchanged: 0/0
   736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   737 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   738 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   739 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   740 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   741 ;;Total ram usage:       11 bytes
   742 ;; Hardware stack levels used:    1
   743 ;; This function calls:
   744 ;;		Nothing
   745 ;; This function is called by:
   746 ;;		_bootloader_state_machine
   747 ;; This function uses a non-reentrant model
   748 ;;
   749                           
   750                           	psect	text2
   751  000FA2                     __ptext2:
   752                           	opt stack 0
   753  000FA2                     _write_flash:
   754                           	opt stack 29
   755                           
   756                           ;main.c: 584: int counter;
   757                           ;main.c: 586: PIR4bits.EEIF = 0;
   758                           
   759                           ;incstack = 0
   760  000FA2  9CB7               	bcf	4023,6,c	;volatile
   761                           
   762                           ;main.c: 588: TBLPTRL = (address) & 0xC0;
   763  000FA4  5001               	movf	write_flash@address,w,c
   764  000FA6  0BC0               	andlw	192
   765  000FA8  6EF6               	movwf	tblptrl,c	;volatile
   766                           
   767                           ;main.c: 589: TBLPTRH = (address >> 8) & 0xFF;
   768  000FAA  C002  FFF7         	movff	write_flash@address+1,tblptrh	;volatile
   769                           
   770                           ;main.c: 590: TBLPTRU = (address >> 16) & 0xFF;
   771  000FAE  C003  FFF8         	movff	write_flash@address+2,tblptru	;volatile
   772                           
   773                           ;main.c: 596: for (counter = 0; counter < length; counter++) {
   774  000FB2  6A0A               	clrf	write_flash@counter,c
   775  000FB4  6A0B               	clrf	write_flash@counter+1,c
   776  000FB6  D009               	goto	l987
   777  000FB8                     l983:
   778                           
   779                           ;main.c: 597: TABLAT = buffer[counter];
   780  000FB8  5005               	movf	write_flash@buffer,w,c
   781  000FBA  240A               	addwf	write_flash@counter,w,c
   782  000FBC  6ED9               	movwf	fsr2l,c
   783  000FBE  6ADA               	clrf	fsr2h,c
   784  000FC0  50DF               	movf	indf2,w,c
   785  000FC2  6EF5               	movwf	tablat,c	;volatile
   786  000FC4  000D               	tblwt		*+	;# 
   787  000FC6  4A0A               	infsnz	write_flash@counter,f,c
   788  000FC8  2A0B               	incf	write_flash@counter+1,f,c
   789  000FCA                     l987:
   790  000FCA  5006               	movf	write_flash@length,w,c
   791  000FCC  6E07               	movwf	??_write_flash& (0+255),c
   792  000FCE  6A08               	clrf	(??_write_flash+1)& (0+255),c
   793  000FD0  5007               	movf	??_write_flash,w,c
   794  000FD2  5C0A               	subwf	write_flash@counter,w,c
   795  000FD4  500B               	movf	write_flash@counter+1,w,c
   796  000FD6  0A80               	xorlw	128
   797  000FD8  6E09               	movwf	(??_write_flash+2)& (0+255),c
   798  000FDA  5008               	movf	??_write_flash+1,w,c
   799  000FDC  0A80               	xorlw	128
   800  000FDE  5809               	subwfb	(??_write_flash+2)& (0+255),w,c
   801  000FE0  E3EB               	bnc	l983
   802  000FE2  000A               	tblrd		*-	;# 
   803                           
   804                           ;main.c: 623: EECON1 = 0x84;
   805  000FE4  0E84               	movlw	132
   806  000FE6  6E7F               	movwf	3967,c	;volatile
   807                           
   808                           ;main.c: 625: INTCONbits.GIE = 0;
   809  000FE8  9EF2               	bcf	intcon,7,c	;volatile
   810                           
   811                           ;main.c: 627: EECON2 = 0x55;
   812  000FEA  0E55               	movlw	85
   813  000FEC  6E7E               	movwf	3966,c	;volatile
   814                           
   815                           ;main.c: 628: EECON2 = 0xAA;
   816  000FEE  0EAA               	movlw	170
   817  000FF0  6E7E               	movwf	3966,c	;volatile
   818                           
   819                           ;main.c: 630: EECON1bits.WR = 1;
   820  000FF2  827F               	bsf	3967,1,c	;volatile
   821                           
   822                           ;main.c: 636: INTCONbits.GIE = 1;
   823  000FF4  8EF2               	bsf	intcon,7,c	;volatile
   824  000FF6                     l139:
   825  000FF6  ACB7               	btfss	4023,6,c	;volatile
   826  000FF8  D7FE               	goto	l139
   827                           
   828                           ;main.c: 639: PIR4bits.EEIF = 0;
   829  000FFA  9CB7               	bcf	4023,6,c	;volatile
   830                           
   831                           ;main.c: 640: EECON1bits.WREN = 0;
   832  000FFC  947F               	bcf	3967,2,c	;volatile
   833  000FFE  0012               	return		;funcret
   834  001000                     __end_of_write_flash:
   835                           	opt stack 0
   836                           tblptru	equ	0xFF8
   837                           tblptrh	equ	0xFF7
   838                           tblptrl	equ	0xFF6
   839                           tablat	equ	0xFF5
   840                           intcon	equ	0xFF2
   841                           postinc0	equ	0xFEE
   842                           wreg	equ	0xFE8
   843                           indf2	equ	0xFDF
   844                           fsr2h	equ	0xFDA
   845                           fsr2l	equ	0xFD9
   846                           status	equ	0xFD8
   847                           
   848 ;; *************** function _send_string_uart *****************
   849 ;; Defined at:
   850 ;;		line 442 in file "main.c"
   851 ;; Parameters:    Size  Location     Type
   852 ;;  buf             1    wreg     PTR unsigned char 
   853 ;;		 -> STR_1(11), 
   854 ;; Auto vars:     Size  Location     Type
   855 ;;  buf             1    4[COMRAM] PTR unsigned char 
   856 ;;		 -> STR_1(11), 
   857 ;;  i               1    3[COMRAM] unsigned char 
   858 ;; Return value:  Size  Location     Type
   859 ;;		None               void
   860 ;; Registers used:
   861 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   862 ;; Tracked objects:
   863 ;;		On entry : 0/0
   864 ;;		On exit  : 0/0
   865 ;;		Unchanged: 0/0
   866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   868 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   869 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   870 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   871 ;;Total ram usage:        4 bytes
   872 ;; Hardware stack levels used:    1
   873 ;; Hardware stack levels required when called:    1
   874 ;; This function calls:
   875 ;;		_UART_putchar
   876 ;; This function is called by:
   877 ;;		_bootloader_state_machine
   878 ;; This function uses a non-reentrant model
   879 ;;
   880                           
   881                           	psect	text3
   882  000CE0                     __ptext3:
   883                           	opt stack 0
   884  000CE0                     _send_string_uart:
   885                           	opt stack 28
   886                           
   887                           ;incstack = 0
   888                           ;send_string_uart@buf stored from wreg
   889  000CE0  6E05               	movwf	send_string_uart@buf,c
   890                           
   891                           ;main.c: 444: u8 i = 0x00;
   892  000CE2  6A04               	clrf	send_string_uart@i,c
   893  000CE4                     l949:
   894                           
   895                           ;main.c: 447: if(buf[i] != '\0'){
   896  000CE4  5005               	movf	send_string_uart@buf,w,c
   897  000CE6  2404               	addwf	send_string_uart@i,w,c
   898  000CE8  6E02               	movwf	??_send_string_uart& (0+255),c
   899  000CEA  C002  FFF6         	movff	??_send_string_uart,tblptrl
   900  000CEE                     	if	1	;There is more than 1 active tblptr byte
   901  000CEE  0E0F               	movlw	high __smallconst
   902  000CF0  6EF7               	movwf	tblptrh,c
   903  000CF2                     	endif
   904  000CF2                     	if	0	;tblptru may be non-zero
   905  000CF2                     	endif
   906  000CF2                     	if	0	;tblptru may be non-zero
   907  000CF2                     	endif
   908  000CF2  0008               	tblrd		*
   909  000CF4  50F5               	movf	tablat,w,c
   910  000CF6  E00B               	bz	l953
   911                           
   912                           ;main.c: 448: UART_putchar(buf[i]);
   913  000CF8  5005               	movf	send_string_uart@buf,w,c
   914  000CFA  2404               	addwf	send_string_uart@i,w,c
   915  000CFC  6E02               	movwf	??_send_string_uart& (0+255),c
   916  000CFE  C002  FFF6         	movff	??_send_string_uart,tblptrl
   917  000D02                     	if	1	;There is more than 1 active tblptr byte
   918  000D02  0E0F               	movlw	high __smallconst
   919  000D04  6EF7               	movwf	tblptrh,c
   920  000D06                     	endif
   921  000D06                     	if	0	;tblptru may be non-zero
   922  000D06                     	endif
   923  000D06                     	if	0	;tblptru may be non-zero
   924  000D06                     	endif
   925  000D06  0008               	tblrd		*
   926  000D08  50F5               	movf	tablat,w,c
   927  000D0A  EC1C  F006         	call	_UART_putchar
   928  000D0E                     l953:
   929                           
   930                           ;main.c: 449: }
   931                           ;main.c: 450: }while(buf[i++] != '\0');
   932  000D0E  2A04               	incf	send_string_uart@i,f,c
   933  000D10  0404               	decf	send_string_uart@i,w,c
   934  000D12  6E02               	movwf	??_send_string_uart& (0+255),c
   935  000D14  5005               	movf	send_string_uart@buf,w,c
   936  000D16  2402               	addwf	??_send_string_uart,w,c
   937  000D18  6E03               	movwf	(??_send_string_uart+1)& (0+255),c
   938  000D1A  C003  FFF6         	movff	??_send_string_uart+1,tblptrl
   939  000D1E                     	if	1	;There is more than 1 active tblptr byte
   940  000D1E  0E0F               	movlw	high __smallconst
   941  000D20  6EF7               	movwf	tblptrh,c
   942  000D22                     	endif
   943  000D22                     	if	0	;tblptru may be non-zero
   944  000D22                     	endif
   945  000D22                     	if	0	;tblptru may be non-zero
   946  000D22                     	endif
   947  000D22  0008               	tblrd		*
   948  000D24  50F5               	movf	tablat,w,c
   949  000D26  B4D8               	btfsc	status,2,c
   950  000D28  0012               	return		;funcret
   951  000D2A  D7DC               	goto	l949
   952  000D2C                     __end_of_send_string_uart:
   953                           	opt stack 0
   954                           tblptru	equ	0xFF8
   955                           tblptrh	equ	0xFF7
   956                           tblptrl	equ	0xFF6
   957                           tablat	equ	0xFF5
   958                           intcon	equ	0xFF2
   959                           postinc0	equ	0xFEE
   960                           wreg	equ	0xFE8
   961                           indf2	equ	0xFDF
   962                           fsr2h	equ	0xFDA
   963                           fsr2l	equ	0xFD9
   964                           status	equ	0xFD8
   965                           
   966 ;; *************** function _UART_putchar *****************
   967 ;; Defined at:
   968 ;;		line 407 in file "main.c"
   969 ;; Parameters:    Size  Location     Type
   970 ;;  outchar         1    wreg     unsigned char 
   971 ;; Auto vars:     Size  Location     Type
   972 ;;  outchar         1    0[COMRAM] unsigned char 
   973 ;; Return value:  Size  Location     Type
   974 ;;		None               void
   975 ;; Registers used:
   976 ;;		wreg
   977 ;; Tracked objects:
   978 ;;		On entry : 0/0
   979 ;;		On exit  : 0/0
   980 ;;		Unchanged: 0/0
   981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   983 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   985 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   986 ;;Total ram usage:        1 bytes
   987 ;; Hardware stack levels used:    1
   988 ;; This function calls:
   989 ;;		Nothing
   990 ;; This function is called by:
   991 ;;		_send_string_uart
   992 ;;		_bootloader_state_machine
   993 ;; This function uses a non-reentrant model
   994 ;;
   995                           
   996                           	psect	text4
   997  000C38                     __ptext4:
   998                           	opt stack 0
   999  000C38                     _UART_putchar:
  1000                           	opt stack 28
  1001                           
  1002                           ;incstack = 0
  1003                           ;UART_putchar@outchar stored from wreg
  1004  000C38  6E01               	movwf	UART_putchar@outchar,c
  1005  000C3A                     l82:
  1006  000C3A  A2AC               	btfss	4012,1,c	;volatile
  1007  000C3C  D7FE               	goto	l82
  1008                           
  1009                           ;main.c: 411: TXREG1 = outchar;
  1010  000C3E  C001  FFAD         	movff	UART_putchar@outchar,4013	;volatile
  1011  000C42                     l85:
  1012  000C42  B2AC               	btfsc	4012,1,c	;volatile
  1013  000C44  0012               	return		;funcret
  1014  000C46  D7FD               	goto	l85
  1015  000C48                     __end_of_UART_putchar:
  1016                           	opt stack 0
  1017                           tblptru	equ	0xFF8
  1018                           tblptrh	equ	0xFF7
  1019                           tblptrl	equ	0xFF6
  1020                           tablat	equ	0xFF5
  1021                           intcon	equ	0xFF2
  1022                           postinc0	equ	0xFEE
  1023                           wreg	equ	0xFE8
  1024                           indf2	equ	0xFDF
  1025                           fsr2h	equ	0xFDA
  1026                           fsr2l	equ	0xFD9
  1027                           status	equ	0xFD8
  1028                           
  1029 ;; *************** function _jump_to_app *****************
  1030 ;; Defined at:
  1031 ;;		line 532 in file "main.c"
  1032 ;; Parameters:    Size  Location     Type
  1033 ;;		None
  1034 ;; Auto vars:     Size  Location     Type
  1035 ;;		None
  1036 ;; Return value:  Size  Location     Type
  1037 ;;		None               void
  1038 ;; Registers used:
  1039 ;;		wreg, status,2, status,0
  1040 ;; Tracked objects:
  1041 ;;		On entry : 0/0
  1042 ;;		On exit  : 0/0
  1043 ;;		Unchanged: 0/0
  1044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1048 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1049 ;;Total ram usage:        0 bytes
  1050 ;; Hardware stack levels used:    1
  1051 ;; This function calls:
  1052 ;;		Nothing
  1053 ;; This function is called by:
  1054 ;;		_bootloader_state_machine
  1055 ;; This function uses a non-reentrant model
  1056 ;;
  1057                           
  1058                           	psect	text5
  1059  000C2C                     __ptext5:
  1060                           	opt stack 0
  1061  000C2C                     _jump_to_app:
  1062                           	opt stack 29
  1063                           
  1064                           ;main.c: 535: TRISBbits.TRISB0 = 0;
  1065                           
  1066                           ;incstack = 0
  1067  000C2C  9093               	bcf	3987,0,c	;volatile
  1068                           
  1069                           ;main.c: 537: RCON |= 0x93;
  1070  000C2E  0E93               	movlw	147
  1071  000C30  12D0               	iorwf	4048,f,c	;volatile
  1072  000C32  EF00 F008          	goto	4096	;# 
  1073  000C36  0012               	return		;funcret
  1074  000C38                     __end_of_jump_to_app:
  1075                           	opt stack 0
  1076                           tblptru	equ	0xFF8
  1077                           tblptrh	equ	0xFF7
  1078                           tblptrl	equ	0xFF6
  1079                           tablat	equ	0xFF5
  1080                           intcon	equ	0xFF2
  1081                           postinc0	equ	0xFEE
  1082                           wreg	equ	0xFE8
  1083                           indf2	equ	0xFDF
  1084                           fsr2h	equ	0xFDA
  1085                           fsr2l	equ	0xFD9
  1086                           status	equ	0xFD8
  1087                           
  1088 ;; *************** function _erase_flash *****************
  1089 ;; Defined at:
  1090 ;;		line 544 in file "main.c"
  1091 ;; Parameters:    Size  Location     Type
  1092 ;;  address         4    0[COMRAM] unsigned long 
  1093 ;; Auto vars:     Size  Location     Type
  1094 ;;		None
  1095 ;; Return value:  Size  Location     Type
  1096 ;;		None               void
  1097 ;; Registers used:
  1098 ;;		wreg, status,2, status,0
  1099 ;; Tracked objects:
  1100 ;;		On entry : 0/0
  1101 ;;		On exit  : 0/0
  1102 ;;		Unchanged: 0/0
  1103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1104 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1107 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1108 ;;Total ram usage:        4 bytes
  1109 ;; Hardware stack levels used:    1
  1110 ;; This function calls:
  1111 ;;		Nothing
  1112 ;; This function is called by:
  1113 ;;		_bootloader_state_machine
  1114 ;; This function uses a non-reentrant model
  1115 ;;
  1116                           
  1117                           	psect	text6
  1118  000C7C                     __ptext6:
  1119                           	opt stack 0
  1120  000C7C                     _erase_flash:
  1121                           	opt stack 29
  1122                           
  1123                           ;main.c: 546: PIR4bits.EEIF = 0;
  1124                           
  1125                           ;incstack = 0
  1126  000C7C  9CB7               	bcf	4023,6,c	;volatile
  1127                           
  1128                           ;main.c: 548: TBLPTRL = (address) & 0xC0;
  1129  000C7E  5001               	movf	erase_flash@address,w,c
  1130  000C80  0BC0               	andlw	192
  1131  000C82  6EF6               	movwf	tblptrl,c	;volatile
  1132                           
  1133                           ;main.c: 549: TBLPTRH = (address >> 8) & 0xFF;
  1134  000C84  C002  FFF7         	movff	erase_flash@address+1,tblptrh	;volatile
  1135                           
  1136                           ;main.c: 550: TBLPTRU = (address >> 16) & 0xFF;
  1137  000C88  C003  FFF8         	movff	erase_flash@address+2,tblptru	;volatile
  1138                           
  1139                           ;main.c: 563: EECON1 = 0x94;
  1140  000C8C  0E94               	movlw	148
  1141  000C8E  6E7F               	movwf	3967,c	;volatile
  1142                           
  1143                           ;main.c: 565: EECON2 = 0x55;
  1144  000C90  0E55               	movlw	85
  1145  000C92  6E7E               	movwf	3966,c	;volatile
  1146                           
  1147                           ;main.c: 566: EECON2 = 0xAA;
  1148  000C94  0EAA               	movlw	170
  1149  000C96  6E7E               	movwf	3966,c	;volatile
  1150                           
  1151                           ;main.c: 567: EECON1bits.WR = 1;
  1152  000C98  827F               	bsf	3967,1,c	;volatile
  1153                           
  1154                           ;main.c: 569: INTCONbits.GIE = 1;
  1155  000C9A  8EF2               	bsf	intcon,7,c	;volatile
  1156  000C9C                     l130:
  1157  000C9C  ACB7               	btfss	4023,6,c	;volatile
  1158  000C9E  D7FE               	goto	l130
  1159                           
  1160                           ;main.c: 572: PIR4bits.EEIF = 0;
  1161  000CA0  9CB7               	bcf	4023,6,c	;volatile
  1162                           
  1163                           ;main.c: 573: EECON1bits.WREN = 0;
  1164  000CA2  947F               	bcf	3967,2,c	;volatile
  1165                           
  1166                           ;main.c: 574: EECON1bits.FREE = 0;
  1167  000CA4  987F               	bcf	3967,4,c	;volatile
  1168                           
  1169                           ;main.c: 576: INTCONbits.GIE = 0;
  1170  000CA6  9EF2               	bcf	intcon,7,c	;volatile
  1171  000CA8  0012               	return		;funcret
  1172  000CAA                     __end_of_erase_flash:
  1173                           	opt stack 0
  1174                           tblptru	equ	0xFF8
  1175                           tblptrh	equ	0xFF7
  1176                           tblptrl	equ	0xFF6
  1177                           tablat	equ	0xFF5
  1178                           intcon	equ	0xFF2
  1179                           postinc0	equ	0xFEE
  1180                           wreg	equ	0xFE8
  1181                           indf2	equ	0xFDF
  1182                           fsr2h	equ	0xFDA
  1183                           fsr2l	equ	0xFD9
  1184                           status	equ	0xFD8
  1185                           
  1186 ;; *************** function _UART_getchar *****************
  1187 ;; Defined at:
  1188 ;;		line 419 in file "main.c"
  1189 ;; Parameters:    Size  Location     Type
  1190 ;;  tout_val        2    0[COMRAM] unsigned int 
  1191 ;; Auto vars:     Size  Location     Type
  1192 ;;  tout            2    2[COMRAM] unsigned int 
  1193 ;; Return value:  Size  Location     Type
  1194 ;;                  1    wreg      unsigned char 
  1195 ;; Registers used:
  1196 ;;		wreg, status,2, status,0
  1197 ;; Tracked objects:
  1198 ;;		On entry : 0/0
  1199 ;;		On exit  : 0/0
  1200 ;;		Unchanged: 0/0
  1201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1202 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1203 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1205 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1206 ;;Total ram usage:        4 bytes
  1207 ;; Hardware stack levels used:    1
  1208 ;; This function calls:
  1209 ;;		Nothing
  1210 ;; This function is called by:
  1211 ;;		_main
  1212 ;;		_bootloader_state_machine
  1213 ;; This function uses a non-reentrant model
  1214 ;;
  1215                           
  1216                           	psect	text7
  1217  000CAA                     __ptext7:
  1218                           	opt stack 0
  1219  000CAA                     _UART_getchar:
  1220                           	opt stack 29
  1221                           
  1222                           ;main.c: 421: u16 tout = 0x00000000;
  1223                           
  1224                           ;incstack = 0
  1225  000CAA  6A03               	clrf	UART_getchar@tout,c
  1226  000CAC  6A04               	clrf	UART_getchar@tout+1,c
  1227                           
  1228                           ;main.c: 423: while(!RCIF){
  1229  000CAE  D00A               	goto	l939
  1230  000CB0                     l929:
  1231                           
  1232                           ;main.c: 424: if(tout == tout_val){
  1233  000CB0  5001               	movf	UART_getchar@tout_val,w,c
  1234  000CB2  1803               	xorwf	UART_getchar@tout,w,c
  1235  000CB4  E105               	bnz	l937
  1236  000CB6  5002               	movf	UART_getchar@tout_val+1,w,c
  1237  000CB8  1804               	xorwf	UART_getchar@tout+1,w,c
  1238  000CBA  A4D8               	btfss	status,2,c
  1239  000CBC  D001               	goto	l937
  1240                           
  1241                           ;main.c: 425: return(0);
  1242  000CBE  0C00               	retlw	0
  1243  000CC0                     l937:
  1244                           
  1245                           ;main.c: 427: else{
  1246                           ;main.c: 428: tout++;
  1247  000CC0  4A03               	infsnz	UART_getchar@tout,f,c
  1248  000CC2  2A04               	incf	UART_getchar@tout+1,f,c
  1249  000CC4                     l939:
  1250  000CC4  AA9E               	btfss	3998,5,c	;volatile
  1251  000CC6  D7F4               	goto	l929
  1252                           
  1253                           ;main.c: 429: }
  1254                           ;main.c: 430: }
  1255                           ;main.c: 431: timeout = 0x00000000;
  1256  000CC8  6A28               	clrf	_timeout,c
  1257  000CCA  6A29               	clrf	_timeout+1,c
  1258  000CCC  6A2A               	clrf	_timeout+2,c
  1259  000CCE  6A2B               	clrf	_timeout+3,c
  1260                           
  1261                           ;main.c: 432: if( (RCSTAbits.FERR == 1) || (RCSTAbits.OERR == 1) ){
  1262  000CD0  B4AB               	btfsc	4011,2,c	;volatile
  1263  000CD2  D002               	goto	l99
  1264  000CD4  A2AB               	btfss	4011,1,c	;volatile
  1265  000CD6  D002               	goto	l943
  1266  000CD8                     l99:
  1267                           
  1268                           ;main.c: 433: RCSTAbits.CREN = 0;
  1269  000CD8  98AB               	bcf	4011,4,c	;volatile
  1270                           
  1271                           ;main.c: 434: RCSTAbits.CREN = 1;
  1272  000CDA  88AB               	bsf	4011,4,c	;volatile
  1273  000CDC                     l943:
  1274                           
  1275                           ;main.c: 435: }
  1276                           ;main.c: 436: return((u8)RCREG1);
  1277  000CDC  50AE               	movf	4014,w,c	;volatile
  1278  000CDE  0012               	return		;funcret
  1279  000CE0                     __end_of_UART_getchar:
  1280                           	opt stack 0
  1281                           tblptru	equ	0xFF8
  1282                           tblptrh	equ	0xFF7
  1283                           tblptrl	equ	0xFF6
  1284                           tablat	equ	0xFF5
  1285                           intcon	equ	0xFF2
  1286                           postinc0	equ	0xFEE
  1287                           wreg	equ	0xFE8
  1288                           indf2	equ	0xFDF
  1289                           fsr2h	equ	0xFDA
  1290                           fsr2l	equ	0xFD9
  1291                           status	equ	0xFD8
  1292                           
  1293 ;; *************** function _UART_init *****************
  1294 ;; Defined at:
  1295 ;;		line 380 in file "main.c"
  1296 ;; Parameters:    Size  Location     Type
  1297 ;;		None
  1298 ;; Auto vars:     Size  Location     Type
  1299 ;;		None
  1300 ;; Return value:  Size  Location     Type
  1301 ;;		None               void
  1302 ;; Registers used:
  1303 ;;		wreg, status,2
  1304 ;; Tracked objects:
  1305 ;;		On entry : 0/0
  1306 ;;		On exit  : 0/0
  1307 ;;		Unchanged: 0/0
  1308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1313 ;;Total ram usage:        0 bytes
  1314 ;; Hardware stack levels used:    1
  1315 ;; This function calls:
  1316 ;;		Nothing
  1317 ;; This function is called by:
  1318 ;;		_main
  1319 ;; This function uses a non-reentrant model
  1320 ;;
  1321                           
  1322                           	psect	text8
  1323  000C48                     __ptext8:
  1324                           	opt stack 0
  1325  000C48                     _UART_init:
  1326                           	opt stack 30
  1327                           
  1328                           ;main.c: 382: TRISCbits.TRISC6 = 0;
  1329                           
  1330                           ;incstack = 0
  1331  000C48  9C94               	bcf	3988,6,c	;volatile
  1332                           
  1333                           ;main.c: 383: TRISCbits.TRISC7 = 1;
  1334  000C4A  8E94               	bsf	3988,7,c	;volatile
  1335                           
  1336                           ;main.c: 389: TXSTAbits.SYNC = 0;
  1337  000C4C  98AC               	bcf	4012,4,c	;volatile
  1338                           
  1339                           ;main.c: 390: TXSTAbits.BRGH = 0;
  1340  000C4E  94AC               	bcf	4012,2,c	;volatile
  1341                           
  1342                           ;main.c: 391: BAUDCON1bits.BRG16 = 0;
  1343  000C50  96A7               	bcf	4007,3,c	;volatile
  1344                           
  1345                           ;main.c: 392: SPBRG = 103;
  1346  000C52  0E67               	movlw	103
  1347  000C54  6EAF               	movwf	4015,c	;volatile
  1348                           
  1349                           ;main.c: 395: TXSTAbits.TXEN = 1;
  1350  000C56  8AAC               	bsf	4012,5,c	;volatile
  1351                           
  1352                           ;main.c: 398: RCSTAbits.SPEN = 1;
  1353  000C58  8EAB               	bsf	4011,7,c	;volatile
  1354                           
  1355                           ;main.c: 401: RCSTAbits.CREN = 1;
  1356  000C5A  88AB               	bsf	4011,4,c	;volatile
  1357  000C5C  0012               	return		;funcret
  1358  000C5E                     __end_of_UART_init:
  1359                           	opt stack 0
  1360                           tblptru	equ	0xFF8
  1361                           tblptrh	equ	0xFF7
  1362                           tblptrl	equ	0xFF6
  1363                           tablat	equ	0xFF5
  1364                           intcon	equ	0xFF2
  1365                           postinc0	equ	0xFEE
  1366                           wreg	equ	0xFE8
  1367                           indf2	equ	0xFDF
  1368                           fsr2h	equ	0xFDA
  1369                           fsr2l	equ	0xFD9
  1370                           status	equ	0xFD8
  1371                           tblptru	equ	0xFF8
  1372                           tblptrh	equ	0xFF7
  1373                           tblptrl	equ	0xFF6
  1374                           tablat	equ	0xFF5
  1375                           intcon	equ	0xFF2
  1376                           postinc0	equ	0xFEE
  1377                           wreg	equ	0xFE8
  1378                           indf2	equ	0xFDF
  1379                           fsr2h	equ	0xFDA
  1380                           fsr2l	equ	0xFD9
  1381                           status	equ	0xFD8
  1382                           
  1383                           	psect	rparam
  1384  0000                     tblptru	equ	0xFF8
  1385                           tblptrh	equ	0xFF7
  1386                           tblptrl	equ	0xFF6
  1387                           tablat	equ	0xFF5
  1388                           intcon	equ	0xFF2
  1389                           postinc0	equ	0xFEE
  1390                           wreg	equ	0xFE8
  1391                           indf2	equ	0xFDF
  1392                           fsr2h	equ	0xFDA
  1393                           fsr2l	equ	0xFD9
  1394                           status	equ	0xFD8


Data Sizes:
    Strings     11
    Constant    0
    Data        0
    BSS         68
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     39      43
    BANK0           160      0      64
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    write_flash@buffer	PTR unsigned char  size(1) Largest target is 64
		 -> gbuffer(BANK0[64]), 

    send_string_uart@buf	PTR unsigned char  size(1) Largest target is 11
		 -> STR_1(CODE[11]), 


Critical Paths under _main in COMRAM

    _main->_bootloader_state_machine
    _bootloader_state_machine->_write_flash
    _send_string_uart->_UART_putchar

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     4      5    1765
                                             30 COMRAM     9     4      5
                       _UART_getchar
                          _UART_init
           _bootloader_state_machine
 ---------------------------------------------------------------------------------
 (1) _bootloader_state_machine                            19    19      0    1262
                                             11 COMRAM    19    19      0
                       _UART_getchar
                       _UART_putchar
                        _erase_flash
                        _jump_to_app
                   _send_string_uart
                        _write_flash
 ---------------------------------------------------------------------------------
 (2) _write_flash                                         11     5      6     317
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (2) _send_string_uart                                     4     4      0     182
                                              1 COMRAM     4     4      0
                       _UART_putchar
 ---------------------------------------------------------------------------------
 (3) _UART_putchar                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _jump_to_app                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _erase_flash                                          4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _UART_getchar                                         4     2      2     364
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_getchar
   _UART_init
   _bootloader_state_machine
     _UART_getchar
     _UART_putchar
     _erase_flash
     _jump_to_app
     _send_string_uart
       _UART_putchar
     _write_flash

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      40       5       40.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     27      2B       1       45.3%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      6B       6        0.0%
DATA                 0      0      6B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Mon Aug 10 20:59:37 2015

                               l82 0C3A                                 l85 0C42  
                               l99 0CD8                        __CFG_BORV$1 000000  
                     __CFG_CP0$OFF 000000                       __CFG_CP1$OFF 000000  
                     __CFG_CP2$OFF 000000                       __CFG_CP3$OFF 000000  
                              l130 0C9C                                l124 0EFE  
                              l139 0FF6                                l943 0CDC  
                              l937 0CC0                                l929 0CB0  
                              l953 0D0E                                l939 0CC4  
                     ?_erase_flash 0001                                l949 0CE4  
                              l983 0FB8                                l987 0FCA  
                     __CFG_CPB$OFF 000000                                u310 0D72  
                              u320 0E4A                                u330 0E56  
                              u350 0F48                       __CFG_CPD$OFF 000000  
__size_of_bootloader_state_machine 01D4                                wreg 000FE8  
                       _TXSTA1bits 000FAC          ?_bootloader_state_machine 0001  
                             l1013 0D32                               l1111 0F6A  
                             l1041 0E1E                               l1033 0D74  
                             l1025 0D4A                               l1105 0F50  
                             l1051 0E72                               l1019 0D40  
                             l1123 0F94                               l1053 0E78  
                             l1117 0F7C                               l1109 0F5E  
                             l1081 0EBE                               l1065 0E94  
                             l1075 0EAE                               l1077 0EB4  
                             l1079 0EBA                               l1087 0ED8  
                             l1099 0F26                               STR_1 0F01  
                             _RCIF 007CF5                               _RCON 000FD0  
                    __CFG_FCMEN$ON 000000                               _main 0F0E  
                             fsr2h 000FDA                               indf2 000FDF  
                             fsr2l 000FD9                               start 0004  
                    __CFG_IESO$OFF 000000                      __CFG_MCLRE$ON 000000  
                     ___param_bank 000010                       _BAUDCON1bits 000FA7  
                            ?_main 001F                              _SPBRG 000FAF  
                    __CFG_WRT0$OFF 000000                      __CFG_WRT1$OFF 000000  
                    __CFG_WRT2$OFF 000000                        _write_flash 0FA2  
                    __CFG_WRT3$OFF 000000                     __CFG_EBTR0$OFF 000000  
                   __CFG_EBTR1$OFF 000000                     __CFG_EBTR2$OFF 000000  
                   __CFG_EBTR3$OFF 000000                      __CFG_WRTB$OFF 000000  
                    __CFG_WRTC$OFF 000000                      __CFG_WRTD$OFF 000000  
                   __CFG_EBTRB$OFF 000000                 __size_of_UART_init 0016  
        __size_of_send_string_uart 004C                              tablat 000FF5  
                            status 000FD8                    __initialization 0C5E  
                     __end_of_main 0FA2                             ??_main 0024  
                    __activetblptr 000002                     __CFG_PLLCFG$ON 000000  
                   __CFG_RETEN$OFF 000000                             _EECON1 000F7F  
                           _EECON2 000F7E                    __CFG_BBSIZ$BB2K 000000  
                   __CFG_WDTEN$OFF 000000      bootloader_state_machine@state 0011  
                           _TABLAT 000FF5                             _RCREG1 000FAE  
                     ?_jump_to_app 0001                     __CFG_WDTPS$256 000000  
                           _TXREG1 000FAD                     __CFG_XINST$OFF 000000  
                __end_of_UART_init 0C5E                     __CFG_STVREN$ON 000000  
                           clear_0 0C64                       __mediumconst 0000  
             __size_of_erase_flash 002E                             tblptrh 000FF7  
                           tblptrl 000FF6                             tblptru 000FF8  
              send_string_uart@buf 0005        bootloader_state_machine@adr 0016  
      bootloader_state_machine@crc 001E                         __accesstop 0060  
          __end_of__initialization 0C72                 erase_flash@address 0001  
                    ___rparam_used 000001                     __pcstackCOMRAM 0001  
                 _send_string_uart 0CE0                         __pbssBANK0 0060  
              UART_putchar@outchar 0001                   UART_getchar@tout 0003  
                 __CFG_CANMX$PORTB 000000                       ?_write_flash 0001  
                          _TBLPTRH 000FF7                            _TBLPTRL 000FF6  
                          _TBLPTRU 000FF8               __size_of_jump_to_app 000C  
                  __CFG_PWRTEN$OFF 000000                            __Hparam 0000  
                          __Lparam 0000                       __psmallconst 0F00  
                    ?_UART_getchar 0001                            __pcinit 0C5E  
                          __ramtop 0F00                            __ptext0 0F0E  
                          __ptext1 0D2C                            __ptext2 0FA2  
                          __ptext3 0CE0                            __ptext4 0C38  
                          __ptext5 0C2C                            __ptext6 0C7C  
                          __ptext7 0CAA                            __ptext8 0C48  
         _bootloader_state_machine 0D2C                            _gbuffer 0060  
                    ?_UART_putchar 0001                  __CFG_MSSPMSK$MSK7 000000  
                          _timeout 0028               UART_getchar@tout_val 0001  
             end_of_initialization 0C72                      __Lmediumconst 0000  
               write_flash@address 0001                          _RCSTAbits 000FAB  
                          postinc0 000FEE                 write_flash@counter 000A  
                   ??_UART_getchar 0003                          _UART_init 0C48  
                   ??_UART_putchar 0001                   __CFG_FOSC$INTIO2 000000  
                        _TRISBbits 000F93                          _TRISCbits 000F94  
                        _TXSTAbits 000FAC           __end_of_send_string_uart 0D2C  
                       ?_UART_init 0001                      ??_erase_flash 0005  
                send_string_uart@i 0004                start_initialization 0C5E  
             __size_of_write_flash 005E                        __pbssCOMRAM 0028  
              __end_of_erase_flash 0CAA               __end_of_UART_getchar 0CE0  
             __end_of_UART_putchar 0C48         ??_bootloader_state_machine 000C  
                      ??_UART_init 0001                        __smallconst 0F00  
  bootloader_state_machine@adr_778 001A    bootloader_state_machine@address 0012  
                    ??_jump_to_app 0001                           _LATBbits 000F8A  
                         _PIR4bits 000FB7                  write_flash@buffer 0005  
                write_flash@length 0006                   __CFG_SOSCSEL$DIG 000000  
                      _erase_flash 0C7C                          main@hbeat 0024  
                       _EECON1bits 000F7F                           __Hrparam 0000  
              __end_of_jump_to_app 0C38                           __Lrparam 0000  
               __CFG_BOREN$SBORDIS 000000                  ?_send_string_uart 0001  
               ??_send_string_uart 0002              __size_of_UART_getchar 0036  
            __size_of_UART_putchar 0010                      __size_of_main 0094  
 __end_of_bootloader_state_machine 0F00                           main@argc 001F  
                         main@argv 0021                       _UART_getchar 0CAA  
              __CFG_INTOSCSEL$HIGH 000000                        _OSCTUNEbits 000F9B  
                       _INTCONbits 000FF2                      ??_write_flash 0007  
                     _UART_putchar 0C38                        _jump_to_app 0C2C  
                       _OSCCONbits 000FD3                __end_of_write_flash 1000  
              __CFG_BORPWR$ZPBORMV 000000  
