

Microchip Technology PIC18 PRO Macro Assembler V1.34 build -361300703 
                                                                                               Wed Aug 12 22:38:34 2015

Microchip Technology Omniscient Code Generator (PRO mode) build 201502162209
     1                           	processor	18F26K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    22  0000                     _BAUDCON1bits	set	4007
    23  0000                     _EECON1	set	3967
    24  0000                     _EECON1bits	set	3967
    25  0000                     _EECON2	set	3966
    26  0000                     _INTCONbits	set	4082
    27  0000                     _LATBbits	set	3978
    28  0000                     _OSCCONbits	set	4051
    29  0000                     _OSCTUNEbits	set	3995
    30  0000                     _PIR4bits	set	4023
    31  0000                     _RCON	set	4048
    32  0000                     _RCREG1	set	4014
    33  0000                     _RCSTAbits	set	4011
    34  0000                     _SPBRG	set	4015
    35  0000                     _TABLAT	set	4085
    36  0000                     _TBLPTRH	set	4087
    37  0000                     _TBLPTRL	set	4086
    38  0000                     _TBLPTRU	set	4088
    39  0000                     _TRISBbits	set	3987
    40  0000                     _TRISCbits	set	3988
    41  0000                     _TXREG1	set	4013
    42  0000                     _TXSTA1bits	set	4012
    43  0000                     _TXSTAbits	set	4012
    44  0000                     _RCIF	set	31989
    45                           
    46                           	psect	smallconst
    47  000F00                     __psmallconst:
    48                           	opt stack 0
    49  000F00  00                 	db	0
    50  000F01                     STR_1:
    51  000F01  42                 	db	66	;'B'
    52  000F02  6F                 	db	111	;'o'
    53  000F03  6F                 	db	111	;'o'
    54  000F04  74                 	db	116	;'t'
    55  000F05  5F                 	db	95	;'_'
    56  000F06  31                 	db	49	;'1'
    57  000F07  2E                 	db	46
    58  000F08  30                 	db	48	;'0'
    59  000F09  2E                 	db	46
    60  000F0A  61                 	db	97	;'a'
    61  000F0B  00                 	db	0
    62                           
    63                           ; #config settings
    64  000F0C  00                 	db	0	; dummy byte at the end
    65  0000                     
    66                           	psect	cinit
    67  00029E                     __pcinit:
    68                           	opt stack 0
    69  00029E                     start_initialization:
    70                           	opt stack 0
    71  00029E                     __initialization:
    72                           	opt stack 0
    73                           
    74                           ; Clear objects allocated to BANK0 (64 bytes)
    75  00029E  EE00  F060         	lfsr	0,__pbssBANK0
    76  0002A2  0E40               	movlw	64
    77  0002A4                     clear_0:
    78  0002A4  6AEE               	clrf	postinc0,c
    79  0002A6  06E8               	decf	wreg,f,c
    80  0002A8  E1FD               	bnz	clear_0
    81                           
    82                           ; Clear objects allocated to COMRAM (4 bytes)
    83  0002AA  6A2B               	clrf	(__pbssCOMRAM+3)& (0+255),c
    84  0002AC  6A2A               	clrf	(__pbssCOMRAM+2)& (0+255),c
    85  0002AE  6A29               	clrf	(__pbssCOMRAM+1)& (0+255),c
    86  0002B0  6A28               	clrf	__pbssCOMRAM& (0+255),c
    87  0002B2                     end_of_initialization:
    88                           	opt stack 0
    89  0002B2                     __end_of__initialization:
    90                           	opt stack 0
    91  0002B2  0E00               	movlw	low (__Lmediumconst shr (0+16))
    92  0002B4  6EF8               	movwf	tblptru,c
    93  0002B6  0100               	movlb	0
    94  0002B8  EF87  F007         	goto	_main	;jump to C main() function
    95                           tblptru	equ	0xFF8
    96                           postinc0	equ	0xFEE
    97                           wreg	equ	0xFE8
    98                           
    99                           	psect	bssCOMRAM
   100  000028                     __pbssCOMRAM:
   101                           	opt stack 0
   102  000028                     _timeout:
   103                           	opt stack 0
   104  000028                     	ds	4
   105                           tblptru	equ	0xFF8
   106                           postinc0	equ	0xFEE
   107                           wreg	equ	0xFE8
   108                           
   109                           	psect	bssBANK0
   110  000060                     __pbssBANK0:
   111                           	opt stack 0
   112  000060                     _gbuffer:
   113                           	opt stack 0
   114  000060                     	ds	64
   115                           tblptru	equ	0xFF8
   116                           postinc0	equ	0xFEE
   117                           wreg	equ	0xFE8
   118                           
   119                           	psect	cstackCOMRAM
   120  000001                     __pcstackCOMRAM:
   121                           	opt stack 0
   122  000001                     UART_putchar@outchar:
   123                           	opt stack 0
   124  000001                     UART_getchar@tout_val:
   125                           	opt stack 0
   126  000001                     erase_flash@address:
   127                           	opt stack 0
   128  000001                     write_flash@address:
   129                           	opt stack 0
   130                           
   131                           ; 4 bytes @ 0x0
   132  000001                     	ds	1
   133  000002                     ??_send_string_uart:
   134                           
   135                           ; 0 bytes @ 0x1
   136  000002                     	ds	1
   137  000003                     UART_getchar@tout:
   138                           	opt stack 0
   139                           
   140                           ; 2 bytes @ 0x2
   141  000003                     	ds	1
   142  000004                     send_string_uart@i:
   143                           	opt stack 0
   144                           
   145                           ; 1 bytes @ 0x3
   146  000004                     	ds	1
   147  000005                     send_string_uart@buf:
   148                           	opt stack 0
   149  000005                     write_flash@buffer:
   150                           	opt stack 0
   151                           
   152                           ; 1 bytes @ 0x4
   153  000005                     	ds	1
   154  000006                     write_flash@length:
   155                           	opt stack 0
   156                           
   157                           ; 1 bytes @ 0x5
   158  000006                     	ds	1
   159  000007                     ??_write_flash:
   160                           
   161                           ; 0 bytes @ 0x6
   162  000007                     	ds	3
   163  00000A                     write_flash@counter:
   164                           	opt stack 0
   165                           
   166                           ; 2 bytes @ 0x9
   167  00000A                     	ds	2
   168  00000C                     ??_bootloader_state_machine:
   169                           
   170                           ; 0 bytes @ 0xB
   171  00000C                     	ds	5
   172  000011                     bootloader_state_machine@state:
   173                           	opt stack 0
   174                           
   175                           ; 1 bytes @ 0x10
   176  000011                     	ds	1
   177  000012                     bootloader_state_machine@address:
   178                           	opt stack 0
   179                           
   180                           ; 4 bytes @ 0x11
   181  000012                     	ds	4
   182  000016                     bootloader_state_machine@adr:
   183                           	opt stack 0
   184                           
   185                           ; 4 bytes @ 0x15
   186  000016                     	ds	4
   187  00001A                     bootloader_state_machine@adr_778:
   188                           	opt stack 0
   189                           
   190                           ; 4 bytes @ 0x19
   191  00001A                     	ds	4
   192  00001E                     bootloader_state_machine@crc:
   193                           	opt stack 0
   194                           
   195                           ; 1 bytes @ 0x1D
   196  00001E                     	ds	1
   197  00001F                     
   198                           ; 2 bytes @ 0x1E
   199  00001F                     	ds	2
   200  000021                     
   201                           ; 3 bytes @ 0x20
   202  000021                     	ds	3
   203  000024                     main@hbeat:
   204                           	opt stack 0
   205                           
   206                           ; 4 bytes @ 0x23
   207  000024                     	ds	4
   208                           tblptru	equ	0xFF8
   209                           postinc0	equ	0xFEE
   210                           wreg	equ	0xFE8
   211                           
   212 ;;
   213 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   214 ;;
   215 ;; *************** function _main *****************
   216 ;; Defined at:
   217 ;;		line 323 in file "main.c"
   218 ;; Parameters:    Size  Location     Type
   219 ;;  argc            2   30[COMRAM] int 
   220 ;;  argv            3   32[COMRAM] PTR PTR unsigned char 
   221 ;; Auto vars:     Size  Location     Type
   222 ;;  hbeat           4   35[COMRAM] unsigned long 
   223 ;; Return value:  Size  Location     Type
   224 ;;                  2   30[COMRAM] int 
   225 ;; Registers used:
   226 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   227 ;; Tracked objects:
   228 ;;		On entry : 0/0
   229 ;;		On exit  : 0/0
   230 ;;		Unchanged: 0/0
   231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   232 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   233 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   235 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   236 ;;Total ram usage:        9 bytes
   237 ;; Hardware stack levels required when called:    4
   238 ;; This function calls:
   239 ;;		_UART_getchar
   240 ;;		_UART_init
   241 ;;		_bootloader_state_machine
   242 ;; This function is called by:
   243 ;;		Startup code after reset
   244 ;; This function uses a non-reentrant model
   245 ;;
   246                           
   247                           	psect	text0
   248  000F0E                     __ptext0:
   249                           	opt stack 0
   250  000F0E                     _main:
   251                           	opt stack 27
   252                           
   253                           ;main.c: 330: OSCCONbits.IRCF2 = 1;
   254                           
   255                           ;incstack = 0
   256  000F0E  8CD3               	bsf	4051,6,c	;volatile
   257                           
   258                           ;main.c: 331: OSCCONbits.IRCF1 = 1;
   259  000F10  8AD3               	bsf	4051,5,c	;volatile
   260                           
   261                           ;main.c: 332: OSCCONbits.IRCF0 = 1;
   262  000F12  88D3               	bsf	4051,4,c	;volatile
   263                           
   264                           ;main.c: 335: OSCCONbits.HFIOFS = 1;
   265  000F14  84D3               	bsf	4051,2,c	;volatile
   266                           
   267                           ;main.c: 338: OSCTUNEbits.PLLEN = 1;
   268  000F16  8C9B               	bsf	3995,6,c	;volatile
   269                           
   270                           ;main.c: 343: TRISBbits.TRISB0 = 0;
   271  000F18  9093               	bcf	3987,0,c	;volatile
   272                           
   273                           ;main.c: 346: UART_init();
   274  000F1A  EC5E  F001         	call	_UART_init	;wreg free
   275                           
   276                           ;main.c: 349: for(hbeat=0; hbeat<0x0040; hbeat++)
   277  000F1E  6A24               	clrf	main@hbeat,c
   278  000F20  6A25               	clrf	main@hbeat+1,c
   279  000F22  6A26               	clrf	main@hbeat+2,c
   280  000F24  6A27               	clrf	main@hbeat+3,c
   281  000F26                     l1103:
   282                           
   283                           ;main.c: 350: {
   284                           ;main.c: 351: gbuffer[hbeat] = 0xFF;
   285  000F26  5024               	movf	main@hbeat,w,c
   286  000F28  0F60               	addlw	low _gbuffer
   287  000F2A  6ED9               	movwf	fsr2l,c
   288  000F2C  6ADA               	clrf	fsr2h,c
   289  000F2E  68DF               	setf	indf2,c
   290  000F30  2A24               	incf	main@hbeat,f,c
   291  000F32  0E00               	movlw	0
   292  000F34  2225               	addwfc	main@hbeat+1,f,c
   293  000F36  2226               	addwfc	main@hbeat+2,f,c
   294  000F38  2227               	addwfc	main@hbeat+3,f,c
   295  000F3A  5027               	movf	main@hbeat+3,w,c
   296  000F3C  1026               	iorwf	main@hbeat+2,w,c
   297  000F3E  1025               	iorwf	main@hbeat+1,w,c
   298  000F40  E103               	bnz	u330
   299  000F42  0E40               	movlw	64
   300  000F44  5C24               	subwf	main@hbeat,w,c
   301  000F46  E3EF               	bnc	l1103
   302  000F48                     u330:
   303                           
   304                           ;main.c: 352: }
   305                           ;main.c: 354: timeout = 0x00000000;
   306  000F48  6A28               	clrf	_timeout,c
   307  000F4A  6A29               	clrf	_timeout+1,c
   308  000F4C  6A2A               	clrf	_timeout+2,c
   309  000F4E  6A2B               	clrf	_timeout+3,c
   310  000F50                     l1109:
   311                           
   312                           ;main.c: 357: if(hbeat == 0x03F){
   313  000F50  0E3F               	movlw	63
   314  000F52  1824               	xorwf	main@hbeat,w,c
   315  000F54  1025               	iorwf	main@hbeat+1,w,c
   316  000F56  1026               	iorwf	main@hbeat+2,w,c
   317  000F58  1027               	iorwf	main@hbeat+3,w,c
   318  000F5A  E107               	bnz	l1115
   319                           
   320                           ;main.c: 358: LATBbits.LATB0 = 1;
   321  000F5C  808A               	bsf	3978,0,c	;volatile
   322  000F5E                     l1113:
   323                           
   324                           ;main.c: 359: hbeat++;
   325  000F5E  2A24               	incf	main@hbeat,f,c
   326  000F60  0E00               	movlw	0
   327  000F62  2225               	addwfc	main@hbeat+1,f,c
   328  000F64  2226               	addwfc	main@hbeat+2,f,c
   329  000F66  2227               	addwfc	main@hbeat+3,f,c
   330                           
   331                           ;main.c: 360: }
   332  000F68  D015               	goto	l1127
   333  000F6A                     l1115:
   334                           
   335                           ;main.c: 361: else if( hbeat == 0x1FF ){
   336  000F6A  2824               	incf	main@hbeat,w,c
   337  000F6C  E107               	bnz	l1121
   338  000F6E  0425               	decf	main@hbeat+1,w,c
   339  000F70  1026               	iorwf	main@hbeat+2,w,c
   340  000F72  1027               	iorwf	main@hbeat+3,w,c
   341  000F74  A4D8               	btfss	status,2,c
   342  000F76  D002               	goto	l1121
   343                           
   344                           ;main.c: 362: LATBbits.LATB0 = 0;
   345  000F78  908A               	bcf	3978,0,c	;volatile
   346  000F7A  D7F1               	goto	l1113
   347  000F7C                     l1121:
   348                           
   349                           ;main.c: 365: else if (hbeat == 0x9FF){
   350  000F7C  2824               	incf	main@hbeat,w,c
   351  000F7E  E1EF               	bnz	l1113
   352  000F80  0E09               	movlw	9
   353  000F82  1825               	xorwf	main@hbeat+1,w,c
   354  000F84  1026               	iorwf	main@hbeat+2,w,c
   355  000F86  1027               	iorwf	main@hbeat+3,w,c
   356  000F88  A4D8               	btfss	status,2,c
   357  000F8A  D7E9               	goto	l1113
   358                           
   359                           ;main.c: 366: hbeat = 0x00;
   360  000F8C  6A24               	clrf	main@hbeat,c
   361  000F8E  6A25               	clrf	main@hbeat+1,c
   362  000F90  6A26               	clrf	main@hbeat+2,c
   363  000F92  6A27               	clrf	main@hbeat+3,c
   364  000F94                     l1127:
   365                           
   366                           ;main.c: 370: }
   367                           ;main.c: 371: bootloader_state_machine(UART_getchar(0xFF));
   368  000F94  6A02               	clrf	UART_getchar@tout_val+1,c
   369  000F96  6801               	setf	UART_getchar@tout_val,c
   370  000F98  EC1D  F001         	call	_UART_getchar	;wreg free
   371  000F9C  EC09  F000         	call	_bootloader_state_machine
   372  000FA0  D7D7               	goto	l1109
   373  000FA2                     __end_of_main:
   374                           	opt stack 0
   375                           tblptru	equ	0xFF8
   376                           postinc0	equ	0xFEE
   377                           wreg	equ	0xFE8
   378                           indf2	equ	0xFDF
   379                           fsr2h	equ	0xFDA
   380                           fsr2l	equ	0xFD9
   381                           status	equ	0xFD8
   382                           
   383 ;; *************** function _bootloader_state_machine *****************
   384 ;; Defined at:
   385 ;;		line 456 in file "main.c"
   386 ;; Parameters:    Size  Location     Type
   387 ;;  state           1    wreg     unsigned char 
   388 ;; Auto vars:     Size  Location     Type
   389 ;;  state           1   16[COMRAM] unsigned char 
   390 ;;  adr             4   25[COMRAM] unsigned long 
   391 ;;  adr             4   21[COMRAM] unsigned long 
   392 ;;  address         4   17[COMRAM] unsigned long 
   393 ;;  crc             1   29[COMRAM] unsigned char 
   394 ;; Return value:  Size  Location     Type
   395 ;;		None               void
   396 ;; Registers used:
   397 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   398 ;; Tracked objects:
   399 ;;		On entry : 0/0
   400 ;;		On exit  : 0/0
   401 ;;		Unchanged: 0/0
   402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   404 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   405 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   406 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   407 ;;Total ram usage:       19 bytes
   408 ;; Hardware stack levels used:    1
   409 ;; Hardware stack levels required when called:    3
   410 ;; This function calls:
   411 ;;		_UART_getchar
   412 ;;		_UART_putchar
   413 ;;		_erase_flash
   414 ;;		_jump_to_app
   415 ;;		_send_string_uart
   416 ;;		_write_flash
   417 ;; This function is called by:
   418 ;;		_main
   419 ;; This function uses a non-reentrant model
   420 ;;
   421                           
   422                           	psect	text1
   423  000012                     __ptext1:
   424                           	opt stack 0
   425  000012                     _bootloader_state_machine:
   426                           	opt stack 27
   427                           
   428                           ;incstack = 0
   429                           ;bootloader_state_machine@state stored from wreg
   430  000012  6E11               	movwf	bootloader_state_machine@state,c
   431                           
   432                           ;main.c: 459: u8 crc = 0x00;
   433  000014  6A1E               	clrf	bootloader_state_machine@crc,c
   434                           
   435                           ;main.c: 461: switch (state)
   436  000016  D0D7               	goto	l1091
   437  000018                     l1017:
   438                           
   439                           ;main.c: 465: UART_putchar(0x10);
   440  000018  0E10               	movlw	16
   441  00001A  EC69  F001         	call	_UART_putchar
   442                           
   443                           ;main.c: 466: send_string_uart((u8 *)"Boot_1.0.a");
   444  00001E  0E01               	movlw	STR_1& (0+255)
   445  000020  EFF7  F000         	goto	_send_string_uart
   446                           
   447                           ;main.c: 467: break;
   448  000024  D09D               	goto	l1055
   449  000026                     l1023:
   450                           
   451                           ;main.c: 474: for (u32 adr = 0x1000; adr < 0x10000; adr += 64){
   452  000026  6A16               	clrf	bootloader_state_machine@adr,c
   453  000028  0E10               	movlw	16
   454  00002A  6E17               	movwf	bootloader_state_machine@adr+1,c
   455  00002C  6A18               	clrf	bootloader_state_machine@adr+2,c
   456  00002E  6A19               	clrf	bootloader_state_machine@adr+3,c
   457  000030                     l1029:
   458                           
   459                           ;main.c: 475: erase_flash(adr);
   460  000030  C016  F001         	movff	bootloader_state_machine@adr,erase_flash@address
   461  000034  C017  F002         	movff	bootloader_state_machine@adr+1,erase_flash@address+1
   462  000038  C018  F003         	movff	bootloader_state_machine@adr+2,erase_flash@address+2
   463  00003C  C019  F004         	movff	bootloader_state_machine@adr+3,erase_flash@address+3
   464  000040  EC38  F001         	call	_erase_flash	;wreg free
   465  000044  0E40               	movlw	64
   466  000046  2616               	addwf	bootloader_state_machine@adr,f,c
   467  000048  0E00               	movlw	0
   468  00004A  2217               	addwfc	bootloader_state_machine@adr+1,f,c
   469  00004C  2218               	addwfc	bootloader_state_machine@adr+2,f,c
   470  00004E  2219               	addwfc	bootloader_state_machine@adr+3,f,c
   471  000050  5019               	movf	bootloader_state_machine@adr+3,w,c
   472  000052  E102               	bnz	u300
   473  000054  0418               	decf	bootloader_state_machine@adr+2,w,c
   474  000056  E3EC               	bnc	l1029
   475  000058                     u300:
   476  000058  D083               	goto	l1055
   477  00005A                     l1037:
   478                           
   479                           ;main.c: 481: address = (((u32)UART_getchar(0x7FFF))<<24);
   480  00005A  0E7F               	movlw	127
   481  00005C  6E02               	movwf	UART_getchar@tout_val+1,c
   482  00005E  6801               	setf	UART_getchar@tout_val,c
   483  000060  EC1D  F001         	call	_UART_getchar	;wreg free
   484  000064  6E0C               	movwf	??_bootloader_state_machine& (0+255),c
   485  000066  C00C  F00D         	movff	??_bootloader_state_machine,??_bootloader_state_machine+1
   486  00006A  6A0E               	clrf	(??_bootloader_state_machine+2)& (0+255),c
   487  00006C  6A0F               	clrf	(??_bootloader_state_machine+3)& (0+255),c
   488  00006E  6A10               	clrf	(??_bootloader_state_machine+4)& (0+255),c
   489  000070  C00D  F010         	movff	??_bootloader_state_machine+1,??_bootloader_state_machine+4
   490  000074  6A0F               	clrf	??_bootloader_state_machine+3,c
   491  000076  6A0E               	clrf	??_bootloader_state_machine+2,c
   492  000078  6A0D               	clrf	??_bootloader_state_machine+1,c
   493  00007A  C00D  F012         	movff	??_bootloader_state_machine+1,bootloader_state_machine@address
   494  00007E  C00E  F013         	movff	??_bootloader_state_machine+2,bootloader_state_machine@address+1
   495  000082  C00F  F014         	movff	??_bootloader_state_machine+3,bootloader_state_machine@address+2
   496  000086  C010  F015         	movff	??_bootloader_state_machine+4,bootloader_state_machine@address+3
   497                           
   498                           ;main.c: 482: address |= (((u32)UART_getchar(0x7FFF))<<16);
   499  00008A  0E7F               	movlw	127
   500  00008C  6E02               	movwf	UART_getchar@tout_val+1,c
   501  00008E  6801               	setf	UART_getchar@tout_val,c
   502  000090  EC1D  F001         	call	_UART_getchar	;wreg free
   503  000094  6E0C               	movwf	??_bootloader_state_machine& (0+255),c
   504  000096  C00C  F00D         	movff	??_bootloader_state_machine,??_bootloader_state_machine+1
   505  00009A  6A0E               	clrf	(??_bootloader_state_machine+2)& (0+255),c
   506  00009C  6A0F               	clrf	(??_bootloader_state_machine+3)& (0+255),c
   507  00009E  6A10               	clrf	(??_bootloader_state_machine+4)& (0+255),c
   508  0000A0  C00E  F010         	movff	??_bootloader_state_machine+2,??_bootloader_state_machine+4
   509  0000A4  C00D  F00F         	movff	??_bootloader_state_machine+1,??_bootloader_state_machine+3
   510  0000A8  6A0E               	clrf	??_bootloader_state_machine+2,c
   511  0000AA  6A0D               	clrf	??_bootloader_state_machine+1,c
   512  0000AC  500D               	movf	??_bootloader_state_machine+1,w,c
   513  0000AE  1212               	iorwf	bootloader_state_machine@address,f,c
   514  0000B0  500E               	movf	??_bootloader_state_machine+2,w,c
   515  0000B2  1213               	iorwf	bootloader_state_machine@address+1,f,c
   516  0000B4  500F               	movf	??_bootloader_state_machine+3,w,c
   517  0000B6  1214               	iorwf	bootloader_state_machine@address+2,f,c
   518  0000B8  5010               	movf	??_bootloader_state_machine+4,w,c
   519  0000BA  1215               	iorwf	bootloader_state_machine@address+3,f,c
   520                           
   521                           ;main.c: 483: address |= (((u32)UART_getchar(0x7FFF))<<8);
   522  0000BC  0E7F               	movlw	127
   523  0000BE  6E02               	movwf	UART_getchar@tout_val+1,c
   524  0000C0  6801               	setf	UART_getchar@tout_val,c
   525  0000C2  EC1D  F001         	call	_UART_getchar	;wreg free
   526  0000C6  6E0C               	movwf	??_bootloader_state_machine& (0+255),c
   527  0000C8  C00C  F00D         	movff	??_bootloader_state_machine,??_bootloader_state_machine+1
   528  0000CC  6A0E               	clrf	(??_bootloader_state_machine+2)& (0+255),c
   529  0000CE  6A0F               	clrf	(??_bootloader_state_machine+3)& (0+255),c
   530  0000D0  6A10               	clrf	(??_bootloader_state_machine+4)& (0+255),c
   531  0000D2  C00F  F010         	movff	??_bootloader_state_machine+3,??_bootloader_state_machine+4
   532  0000D6  C00E  F00F         	movff	??_bootloader_state_machine+2,??_bootloader_state_machine+3
   533  0000DA  C00D  F00E         	movff	??_bootloader_state_machine+1,??_bootloader_state_machine+2
   534  0000DE  6A0D               	clrf	??_bootloader_state_machine+1,c
   535  0000E0  500D               	movf	??_bootloader_state_machine+1,w,c
   536  0000E2  1212               	iorwf	bootloader_state_machine@address,f,c
   537  0000E4  500E               	movf	??_bootloader_state_machine+2,w,c
   538  0000E6  1213               	iorwf	bootloader_state_machine@address+1,f,c
   539  0000E8  500F               	movf	??_bootloader_state_machine+3,w,c
   540  0000EA  1214               	iorwf	bootloader_state_machine@address+2,f,c
   541  0000EC  5010               	movf	??_bootloader_state_machine+4,w,c
   542  0000EE  1215               	iorwf	bootloader_state_machine@address+3,f,c
   543                           
   544                           ;main.c: 484: address |= ((u32)UART_getchar(0x7FFF));
   545  0000F0  0E7F               	movlw	127
   546  0000F2  6E02               	movwf	UART_getchar@tout_val+1,c
   547  0000F4  6801               	setf	UART_getchar@tout_val,c
   548  0000F6  EC1D  F001         	call	_UART_getchar	;wreg free
   549  0000FA  1212               	iorwf	bootloader_state_machine@address,f,c
   550                           
   551                           ;main.c: 485: for (u32 adr = 0; adr < 0x0040; adr++){
   552  0000FC  6A1A               	clrf	bootloader_state_machine@adr_778,c
   553  0000FE  6A1B               	clrf	bootloader_state_machine@adr_778+1,c
   554  000100  6A1C               	clrf	bootloader_state_machine@adr_778+2,c
   555  000102  6A1D               	clrf	bootloader_state_machine@adr_778+3,c
   556  000104                     l1045:
   557                           
   558                           ;main.c: 486: gbuffer[adr] = UART_getchar(0x7FFF);
   559  000104  501A               	movf	bootloader_state_machine@adr_778,w,c
   560  000106  0F60               	addlw	low _gbuffer
   561  000108  6ED9               	movwf	fsr2l,c
   562  00010A  6ADA               	clrf	fsr2h,c
   563  00010C  0E7F               	movlw	127
   564  00010E  6E02               	movwf	UART_getchar@tout_val+1,c
   565  000110  6801               	setf	UART_getchar@tout_val,c
   566  000112  EC1D  F001         	call	_UART_getchar	;wreg free
   567  000116  6EDF               	movwf	indf2,c
   568  000118  2A1A               	incf	bootloader_state_machine@adr_778,f,c
   569  00011A  0E00               	movlw	0
   570  00011C  221B               	addwfc	bootloader_state_machine@adr_778+1,f,c
   571  00011E  221C               	addwfc	bootloader_state_machine@adr_778+2,f,c
   572  000120  221D               	addwfc	bootloader_state_machine@adr_778+3,f,c
   573  000122  501D               	movf	bootloader_state_machine@adr_778+3,w,c
   574  000124  101C               	iorwf	bootloader_state_machine@adr_778+2,w,c
   575  000126  101B               	iorwf	bootloader_state_machine@adr_778+1,w,c
   576  000128  E103               	bnz	u310
   577  00012A  0E40               	movlw	64
   578  00012C  5C1A               	subwf	bootloader_state_machine@adr_778,w,c
   579  00012E  E3EA               	bnc	l1045
   580  000130                     u310:
   581                           
   582                           ;main.c: 487: }
   583                           ;main.c: 488: erase_flash(address);
   584  000130  C012  F001         	movff	bootloader_state_machine@address,erase_flash@address
   585  000134  C013  F002         	movff	bootloader_state_machine@address+1,erase_flash@address+1
   586  000138  C014  F003         	movff	bootloader_state_machine@address+2,erase_flash@address+2
   587  00013C  C015  F004         	movff	bootloader_state_machine@address+3,erase_flash@address+3
   588  000140  EC38  F001         	call	_erase_flash	;wreg free
   589                           
   590                           ;main.c: 489: write_flash(address, gbuffer, 0x0040);
   591  000144  C012  F001         	movff	bootloader_state_machine@address,write_flash@address
   592  000148  C013  F002         	movff	bootloader_state_machine@address+1,write_flash@address+1
   593  00014C  C014  F003         	movff	bootloader_state_machine@address+2,write_flash@address+2
   594  000150  C015  F004         	movff	bootloader_state_machine@address+3,write_flash@address+3
   595  000154  0E60               	movlw	low _gbuffer
   596  000156  6E05               	movwf	write_flash@buffer,c
   597  000158  0E40               	movlw	64
   598  00015A  6E06               	movwf	write_flash@length,c
   599  00015C  ECD1  F007         	call	_write_flash	;wreg free
   600  000160                     l1055:
   601                           
   602                           ;main.c: 490: UART_putchar(0x12);
   603  000160  0E12               	movlw	18
   604  000162  EF69  F001         	goto	_UART_putchar
   605  000166                     l1057:
   606                           
   607                           ;main.c: 494: crc = 0x12;
   608  000166  0E12               	movlw	18
   609  000168  6E1E               	movwf	bootloader_state_machine@crc,c
   610                           
   611                           ;main.c: 496: crc += (u8)((0x0040&0xFF00)>>8);
   612  00016A  0E12               	movlw	18
   613  00016C  EC69  F001         	call	_UART_putchar
   614                           
   615                           ;main.c: 497: UART_putchar((u8)((0x0040&0xFF00)>>8));
   616  000170  0E00               	movlw	0
   617  000172  EC69  F001         	call	_UART_putchar
   618                           
   619                           ;main.c: 498: crc += (u8)(0x0040&0x00FF);
   620  000176  0E40               	movlw	64
   621  000178  261E               	addwf	bootloader_state_machine@crc,f,c
   622                           
   623                           ;main.c: 499: UART_putchar((u8)(0x0040&0x00FF));
   624  00017A  0E40               	movlw	64
   625  00017C  EC69  F001         	call	_UART_putchar
   626  000180  D00D               	goto	l1079
   627  000182                     l1069:
   628                           
   629                           ;main.c: 504: crc = 0x15;
   630  000182  0E15               	movlw	21
   631  000184  6E1E               	movwf	bootloader_state_machine@crc,c
   632                           
   633                           ;main.c: 506: crc += (u8)((0x003F&0xFF00)>>8);
   634  000186  0E15               	movlw	21
   635  000188  EC69  F001         	call	_UART_putchar
   636                           
   637                           ;main.c: 507: UART_putchar((u8)((0x003F&0xFF00)>>8));
   638  00018C  0E00               	movlw	0
   639  00018E  EC69  F001         	call	_UART_putchar
   640                           
   641                           ;main.c: 508: crc += (u8)(0x003F&0x00FF);
   642  000192  0E3F               	movlw	63
   643  000194  261E               	addwf	bootloader_state_machine@crc,f,c
   644                           
   645                           ;main.c: 509: UART_putchar((u8)(0x003F&0x00FF));
   646  000196  0E3F               	movlw	63
   647  000198  EC69  F001         	call	_UART_putchar
   648  00019C                     l1079:
   649                           
   650                           ;main.c: 510: UART_putchar(crc);
   651  00019C  501E               	movf	bootloader_state_machine@crc,w,c
   652  00019E  EF69  F001         	goto	_UART_putchar
   653  0001A2                     l1081:
   654                           
   655                           ;main.c: 514: UART_putchar(0x12);
   656  0001A2  0E12               	movlw	18
   657  0001A4  EC69  F001         	call	_UART_putchar
   658  0001A8                     l1083:
   659                           
   660                           ;main.c: 515: jump_to_app();
   661  0001A8  EF71  F001         	goto	_jump_to_app	;wreg free
   662  0001AC                     l1085:
   663                           
   664                           ;main.c: 519: timeout++;
   665  0001AC  2A28               	incf	_timeout,f,c
   666  0001AE  0E00               	movlw	0
   667  0001B0  2229               	addwfc	_timeout+1,f,c
   668  0001B2  222A               	addwfc	_timeout+2,f,c
   669  0001B4  222B               	addwfc	_timeout+3,f,c
   670                           
   671                           ;main.c: 520: if(timeout == 0x00001FFF){
   672  0001B6  2828               	incf	_timeout,w,c
   673  0001B8  E119               	bnz	l123
   674  0001BA  0E1F               	movlw	31
   675  0001BC  1829               	xorwf	_timeout+1,w,c
   676  0001BE  102A               	iorwf	_timeout+2,w,c
   677  0001C0  102B               	iorwf	_timeout+3,w,c
   678  0001C2  E0F2               	bz	l1083
   679  0001C4  0012               	return	
   680  0001C6                     l1091:
   681  0001C6  5011               	movf	bootloader_state_machine@state,w,c
   682                           
   683                           ; Switch size 1, requested type "speed"
   684                           ; Number of cases is 7, Range of values is 16 to 22
   685                           ; switch strategies available:
   686                           ; Name         Instructions Cycles
   687                           ; simple_byte           22    12 (average)
   688                           ;	Chosen strategy is simple_byte
   689  0001C8  0A10               	xorlw	16	; case 16
   690  0001CA  E101 D725          	bz	l1017
   691  0001CE  0A01               	xorlw	1	; case 17
   692  0001D0  E0C7               	bz	l1055
   693  0001D2  0A03               	xorlw	3	; case 18
   694  0001D4  E0C8               	bz	l1057
   695  0001D6  0A01               	xorlw	1	; case 19
   696  0001D8  E101 D725          	bz	l1023
   697  0001DC  0A07               	xorlw	7	; case 20
   698  0001DE  E101 D73C          	bz	l1037
   699  0001E2  0A01               	xorlw	1	; case 21
   700  0001E4  E0CE               	bz	l1069
   701  0001E6  0A03               	xorlw	3	; case 22
   702  0001E8  E0DC               	bz	l1081
   703  0001EA  D7E0               	goto	l1085
   704  0001EC                     l123:
   705  0001EC  0012               	return		;funcret
   706  0001EE                     __end_of_bootloader_state_machine:
   707                           	opt stack 0
   708                           tblptru	equ	0xFF8
   709                           postinc0	equ	0xFEE
   710                           wreg	equ	0xFE8
   711                           indf2	equ	0xFDF
   712                           fsr2h	equ	0xFDA
   713                           fsr2l	equ	0xFD9
   714                           status	equ	0xFD8
   715                           
   716 ;; *************** function _write_flash *****************
   717 ;; Defined at:
   718 ;;		line 581 in file "main.c"
   719 ;; Parameters:    Size  Location     Type
   720 ;;  address         4    0[COMRAM] unsigned long 
   721 ;;  buffer          1    4[COMRAM] PTR unsigned char 
   722 ;;		 -> gbuffer(64), 
   723 ;;  length          1    5[COMRAM] unsigned char 
   724 ;; Auto vars:     Size  Location     Type
   725 ;;  counter         2    9[COMRAM] int 
   726 ;; Return value:  Size  Location     Type
   727 ;;		None               void
   728 ;; Registers used:
   729 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   730 ;; Tracked objects:
   731 ;;		On entry : 0/0
   732 ;;		On exit  : 0/0
   733 ;;		Unchanged: 0/0
   734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   735 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   736 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   737 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   738 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   739 ;;Total ram usage:       11 bytes
   740 ;; Hardware stack levels used:    1
   741 ;; Hardware stack levels required when called:    1
   742 ;; This function calls:
   743 ;;		Nothing
   744 ;; This function is called by:
   745 ;;		_bootloader_state_machine
   746 ;; This function uses a non-reentrant model
   747 ;;
   748                           
   749                           	psect	text2
   750  000FA2                     __ptext2:
   751                           	opt stack 0
   752  000FA2                     _write_flash:
   753                           	opt stack 28
   754                           
   755                           ;main.c: 583: int counter;
   756                           ;main.c: 585: PIR4bits.EEIF = 0;
   757                           
   758                           ;incstack = 0
   759  000FA2  9CB7               	bcf	4023,6,c	;volatile
   760                           
   761                           ;main.c: 587: TBLPTRL = (address) & 0xC0;
   762  000FA4  5001               	movf	write_flash@address,w,c
   763  000FA6  0BC0               	andlw	192
   764  000FA8  6EF6               	movwf	tblptrl,c	;volatile
   765                           
   766                           ;main.c: 588: TBLPTRH = (address >> 8) & 0xFF;
   767  000FAA  C002  FFF7         	movff	write_flash@address+1,tblptrh	;volatile
   768                           
   769                           ;main.c: 589: TBLPTRU = (address >> 16) & 0xFF;
   770  000FAE  C003  FFF8         	movff	write_flash@address+2,tblptru	;volatile
   771                           
   772                           ;main.c: 595: for (counter = 0; counter < length; counter++) {
   773  000FB2  6A0A               	clrf	write_flash@counter,c
   774  000FB4  6A0B               	clrf	write_flash@counter+1,c
   775  000FB6  D009               	goto	l991
   776  000FB8                     l987:
   777                           
   778                           ;main.c: 596: TABLAT = buffer[counter];
   779  000FB8  5005               	movf	write_flash@buffer,w,c
   780  000FBA  240A               	addwf	write_flash@counter,w,c
   781  000FBC  6ED9               	movwf	fsr2l,c
   782  000FBE  6ADA               	clrf	fsr2h,c
   783  000FC0  50DF               	movf	indf2,w,c
   784  000FC2  6EF5               	movwf	tablat,c	;volatile
   785  000FC4  000D               	tblwt		*+	;# 
   786  000FC6  4A0A               	infsnz	write_flash@counter,f,c
   787  000FC8  2A0B               	incf	write_flash@counter+1,f,c
   788  000FCA                     l991:
   789  000FCA  5006               	movf	write_flash@length,w,c
   790  000FCC  6E07               	movwf	??_write_flash& (0+255),c
   791  000FCE  6A08               	clrf	(??_write_flash+1)& (0+255),c
   792  000FD0  5007               	movf	??_write_flash,w,c
   793  000FD2  5C0A               	subwf	write_flash@counter,w,c
   794  000FD4  500B               	movf	write_flash@counter+1,w,c
   795  000FD6  0A80               	xorlw	128
   796  000FD8  6E09               	movwf	(??_write_flash+2)& (0+255),c
   797  000FDA  5008               	movf	??_write_flash+1,w,c
   798  000FDC  0A80               	xorlw	128
   799  000FDE  5809               	subwfb	(??_write_flash+2)& (0+255),w,c
   800  000FE0  E3EB               	bnc	l987
   801  000FE2  000A               	tblrd		*-	;# 
   802                           
   803                           ;main.c: 622: EECON1 = 0x84;
   804  000FE4  0E84               	movlw	132
   805  000FE6  6E7F               	movwf	3967,c	;volatile
   806                           
   807                           ;main.c: 624: INTCONbits.GIE = 0;
   808  000FE8  9EF2               	bcf	intcon,7,c	;volatile
   809                           
   810                           ;main.c: 626: EECON2 = 0x55;
   811  000FEA  0E55               	movlw	85
   812  000FEC  6E7E               	movwf	3966,c	;volatile
   813                           
   814                           ;main.c: 627: EECON2 = 0xAA;
   815  000FEE  0EAA               	movlw	170
   816  000FF0  6E7E               	movwf	3966,c	;volatile
   817                           
   818                           ;main.c: 629: EECON1bits.WR = 1;
   819  000FF2  827F               	bsf	3967,1,c	;volatile
   820                           
   821                           ;main.c: 635: INTCONbits.GIE = 1;
   822  000FF4  8EF2               	bsf	intcon,7,c	;volatile
   823  000FF6                     l138:
   824  000FF6  ACB7               	btfss	4023,6,c	;volatile
   825  000FF8  D7FE               	goto	l138
   826                           
   827                           ;main.c: 638: PIR4bits.EEIF = 0;
   828  000FFA  9CB7               	bcf	4023,6,c	;volatile
   829                           
   830                           ;main.c: 639: EECON1bits.WREN = 0;
   831  000FFC  947F               	bcf	3967,2,c	;volatile
   832  000FFE  0012               	return		;funcret
   833  001000                     __end_of_write_flash:
   834                           	opt stack 0
   835                           tblptru	equ	0xFF8
   836                           tblptrh	equ	0xFF7
   837                           tblptrl	equ	0xFF6
   838                           tablat	equ	0xFF5
   839                           intcon	equ	0xFF2
   840                           postinc0	equ	0xFEE
   841                           wreg	equ	0xFE8
   842                           indf2	equ	0xFDF
   843                           fsr2h	equ	0xFDA
   844                           fsr2l	equ	0xFD9
   845                           status	equ	0xFD8
   846                           
   847 ;; *************** function _send_string_uart *****************
   848 ;; Defined at:
   849 ;;		line 442 in file "main.c"
   850 ;; Parameters:    Size  Location     Type
   851 ;;  buf             1    wreg     PTR unsigned char 
   852 ;;		 -> STR_1(11), 
   853 ;; Auto vars:     Size  Location     Type
   854 ;;  buf             1    4[COMRAM] PTR unsigned char 
   855 ;;		 -> STR_1(11), 
   856 ;;  i               1    3[COMRAM] unsigned char 
   857 ;; Return value:  Size  Location     Type
   858 ;;		None               void
   859 ;; Registers used:
   860 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   861 ;; Tracked objects:
   862 ;;		On entry : 0/0
   863 ;;		On exit  : 0/0
   864 ;;		Unchanged: 0/0
   865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   867 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   868 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   869 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   870 ;;Total ram usage:        4 bytes
   871 ;; Hardware stack levels used:    1
   872 ;; Hardware stack levels required when called:    2
   873 ;; This function calls:
   874 ;;		_UART_putchar
   875 ;; This function is called by:
   876 ;;		_bootloader_state_machine
   877 ;; This function uses a non-reentrant model
   878 ;;
   879                           
   880                           	psect	text3
   881  0001EE                     __ptext3:
   882                           	opt stack 0
   883  0001EE                     _send_string_uart:
   884                           	opt stack 27
   885                           
   886                           ;incstack = 0
   887                           ;send_string_uart@buf stored from wreg
   888  0001EE  6E05               	movwf	send_string_uart@buf,c
   889                           
   890                           ;main.c: 444: u8 i = 0x00;
   891  0001F0  6A04               	clrf	send_string_uart@i,c
   892  0001F2                     l953:
   893                           
   894                           ;main.c: 447: if(buf[i] != '\0'){
   895  0001F2  5005               	movf	send_string_uart@buf,w,c
   896  0001F4  2404               	addwf	send_string_uart@i,w,c
   897  0001F6  6E02               	movwf	??_send_string_uart& (0+255),c
   898  0001F8  C002  FFF6         	movff	??_send_string_uart,tblptrl
   899  0001FC                     	if	1	;There is more than 1 active tblptr byte
   900  0001FC  0E0F               	movlw	high __smallconst
   901  0001FE  6EF7               	movwf	tblptrh,c
   902  000200                     	endif
   903  000200                     	if	0	;tblptru may be non-zero
   904  000200                     	endif
   905  000200                     	if	0	;tblptru may be non-zero
   906  000200                     	endif
   907  000200  0008               	tblrd		*
   908  000202  50F5               	movf	tablat,w,c
   909  000204  E00B               	bz	l957
   910                           
   911                           ;main.c: 448: UART_putchar(buf[i]);
   912  000206  5005               	movf	send_string_uart@buf,w,c
   913  000208  2404               	addwf	send_string_uart@i,w,c
   914  00020A  6E02               	movwf	??_send_string_uart& (0+255),c
   915  00020C  C002  FFF6         	movff	??_send_string_uart,tblptrl
   916  000210                     	if	1	;There is more than 1 active tblptr byte
   917  000210  0E0F               	movlw	high __smallconst
   918  000212  6EF7               	movwf	tblptrh,c
   919  000214                     	endif
   920  000214                     	if	0	;tblptru may be non-zero
   921  000214                     	endif
   922  000214                     	if	0	;tblptru may be non-zero
   923  000214                     	endif
   924  000214  0008               	tblrd		*
   925  000216  50F5               	movf	tablat,w,c
   926  000218  EC69  F001         	call	_UART_putchar
   927  00021C                     l957:
   928                           
   929                           ;main.c: 449: }
   930                           ;main.c: 450: }while(buf[i++] != '\0');
   931  00021C  2A04               	incf	send_string_uart@i,f,c
   932  00021E  0404               	decf	send_string_uart@i,w,c
   933  000220  6E02               	movwf	??_send_string_uart& (0+255),c
   934  000222  5005               	movf	send_string_uart@buf,w,c
   935  000224  2402               	addwf	??_send_string_uart,w,c
   936  000226  6E03               	movwf	(??_send_string_uart+1)& (0+255),c
   937  000228  C003  FFF6         	movff	??_send_string_uart+1,tblptrl
   938  00022C                     	if	1	;There is more than 1 active tblptr byte
   939  00022C  0E0F               	movlw	high __smallconst
   940  00022E  6EF7               	movwf	tblptrh,c
   941  000230                     	endif
   942  000230                     	if	0	;tblptru may be non-zero
   943  000230                     	endif
   944  000230                     	if	0	;tblptru may be non-zero
   945  000230                     	endif
   946  000230  0008               	tblrd		*
   947  000232  50F5               	movf	tablat,w,c
   948  000234  B4D8               	btfsc	status,2,c
   949  000236  0012               	return		;funcret
   950  000238  D7DC               	goto	l953
   951  00023A                     __end_of_send_string_uart:
   952                           	opt stack 0
   953                           tblptru	equ	0xFF8
   954                           tblptrh	equ	0xFF7
   955                           tblptrl	equ	0xFF6
   956                           tablat	equ	0xFF5
   957                           intcon	equ	0xFF2
   958                           postinc0	equ	0xFEE
   959                           wreg	equ	0xFE8
   960                           indf2	equ	0xFDF
   961                           fsr2h	equ	0xFDA
   962                           fsr2l	equ	0xFD9
   963                           status	equ	0xFD8
   964                           
   965 ;; *************** function _UART_putchar *****************
   966 ;; Defined at:
   967 ;;		line 407 in file "main.c"
   968 ;; Parameters:    Size  Location     Type
   969 ;;  outchar         1    wreg     unsigned char 
   970 ;; Auto vars:     Size  Location     Type
   971 ;;  outchar         1    0[COMRAM] unsigned char 
   972 ;; Return value:  Size  Location     Type
   973 ;;		None               void
   974 ;; Registers used:
   975 ;;		wreg
   976 ;; Tracked objects:
   977 ;;		On entry : 0/0
   978 ;;		On exit  : 0/0
   979 ;;		Unchanged: 0/0
   980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   982 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   984 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   985 ;;Total ram usage:        1 bytes
   986 ;; Hardware stack levels used:    1
   987 ;; Hardware stack levels required when called:    1
   988 ;; This function calls:
   989 ;;		Nothing
   990 ;; This function is called by:
   991 ;;		_send_string_uart
   992 ;;		_bootloader_state_machine
   993 ;; This function uses a non-reentrant model
   994 ;;
   995                           
   996                           	psect	text4
   997  0002D2                     __ptext4:
   998                           	opt stack 0
   999  0002D2                     _UART_putchar:
  1000                           	opt stack 27
  1001                           
  1002                           ;incstack = 0
  1003                           ;UART_putchar@outchar stored from wreg
  1004  0002D2  6E01               	movwf	UART_putchar@outchar,c
  1005  0002D4                     l82:
  1006  0002D4  A2AC               	btfss	4012,1,c	;volatile
  1007  0002D6  D7FE               	goto	l82
  1008                           
  1009                           ;main.c: 411: TXREG1 = outchar;
  1010  0002D8  C001  FFAD         	movff	UART_putchar@outchar,4013	;volatile
  1011  0002DC                     l85:
  1012  0002DC  B2AC               	btfsc	4012,1,c	;volatile
  1013  0002DE  0012               	return		;funcret
  1014  0002E0  D7FD               	goto	l85
  1015  0002E2                     __end_of_UART_putchar:
  1016                           	opt stack 0
  1017                           tblptru	equ	0xFF8
  1018                           tblptrh	equ	0xFF7
  1019                           tblptrl	equ	0xFF6
  1020                           tablat	equ	0xFF5
  1021                           intcon	equ	0xFF2
  1022                           postinc0	equ	0xFEE
  1023                           wreg	equ	0xFE8
  1024                           indf2	equ	0xFDF
  1025                           fsr2h	equ	0xFDA
  1026                           fsr2l	equ	0xFD9
  1027                           status	equ	0xFD8
  1028                           
  1029 ;; *************** function _jump_to_app *****************
  1030 ;; Defined at:
  1031 ;;		line 531 in file "main.c"
  1032 ;; Parameters:    Size  Location     Type
  1033 ;;		None
  1034 ;; Auto vars:     Size  Location     Type
  1035 ;;		None
  1036 ;; Return value:  Size  Location     Type
  1037 ;;		None               void
  1038 ;; Registers used:
  1039 ;;		wreg, status,2, status,0
  1040 ;; Tracked objects:
  1041 ;;		On entry : 0/0
  1042 ;;		On exit  : 0/0
  1043 ;;		Unchanged: 0/0
  1044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1048 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1049 ;;Total ram usage:        0 bytes
  1050 ;; Hardware stack levels used:    1
  1051 ;; Hardware stack levels required when called:    1
  1052 ;; This function calls:
  1053 ;;		Nothing
  1054 ;; This function is called by:
  1055 ;;		_bootloader_state_machine
  1056 ;; This function uses a non-reentrant model
  1057 ;;
  1058                           
  1059                           	psect	text5
  1060  0002E2                     __ptext5:
  1061                           	opt stack 0
  1062  0002E2                     _jump_to_app:
  1063                           	opt stack 28
  1064                           
  1065                           ;main.c: 534: TRISBbits.TRISB0 = 0;
  1066                           
  1067                           ;incstack = 0
  1068  0002E2  9093               	bcf	3987,0,c	;volatile
  1069                           
  1070                           ;main.c: 536: RCON |= 0x93;
  1071  0002E4  0E93               	movlw	147
  1072  0002E6  12D0               	iorwf	4048,f,c	;volatile
  1073  0002E8  EF00 F008          	goto	4096	;# 
  1074  0002EC  0012               	return		;funcret
  1075  0002EE                     __end_of_jump_to_app:
  1076                           	opt stack 0
  1077                           tblptru	equ	0xFF8
  1078                           tblptrh	equ	0xFF7
  1079                           tblptrl	equ	0xFF6
  1080                           tablat	equ	0xFF5
  1081                           intcon	equ	0xFF2
  1082                           postinc0	equ	0xFEE
  1083                           wreg	equ	0xFE8
  1084                           indf2	equ	0xFDF
  1085                           fsr2h	equ	0xFDA
  1086                           fsr2l	equ	0xFD9
  1087                           status	equ	0xFD8
  1088                           
  1089 ;; *************** function _erase_flash *****************
  1090 ;; Defined at:
  1091 ;;		line 543 in file "main.c"
  1092 ;; Parameters:    Size  Location     Type
  1093 ;;  address         4    0[COMRAM] unsigned long 
  1094 ;; Auto vars:     Size  Location     Type
  1095 ;;		None
  1096 ;; Return value:  Size  Location     Type
  1097 ;;		None               void
  1098 ;; Registers used:
  1099 ;;		wreg, status,2, status,0
  1100 ;; Tracked objects:
  1101 ;;		On entry : 0/0
  1102 ;;		On exit  : 0/0
  1103 ;;		Unchanged: 0/0
  1104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1105 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1108 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1109 ;;Total ram usage:        4 bytes
  1110 ;; Hardware stack levels used:    1
  1111 ;; Hardware stack levels required when called:    1
  1112 ;; This function calls:
  1113 ;;		Nothing
  1114 ;; This function is called by:
  1115 ;;		_bootloader_state_machine
  1116 ;; This function uses a non-reentrant model
  1117 ;;
  1118                           
  1119                           	psect	text6
  1120  000270                     __ptext6:
  1121                           	opt stack 0
  1122  000270                     _erase_flash:
  1123                           	opt stack 28
  1124                           
  1125                           ;main.c: 545: PIR4bits.EEIF = 0;
  1126                           
  1127                           ;incstack = 0
  1128  000270  9CB7               	bcf	4023,6,c	;volatile
  1129                           
  1130                           ;main.c: 547: TBLPTRL = (address) & 0xC0;
  1131  000272  5001               	movf	erase_flash@address,w,c
  1132  000274  0BC0               	andlw	192
  1133  000276  6EF6               	movwf	tblptrl,c	;volatile
  1134                           
  1135                           ;main.c: 548: TBLPTRH = (address >> 8) & 0xFF;
  1136  000278  C002  FFF7         	movff	erase_flash@address+1,tblptrh	;volatile
  1137                           
  1138                           ;main.c: 549: TBLPTRU = (address >> 16) & 0xFF;
  1139  00027C  C003  FFF8         	movff	erase_flash@address+2,tblptru	;volatile
  1140                           
  1141                           ;main.c: 562: EECON1 = 0x94;
  1142  000280  0E94               	movlw	148
  1143  000282  6E7F               	movwf	3967,c	;volatile
  1144                           
  1145                           ;main.c: 564: EECON2 = 0x55;
  1146  000284  0E55               	movlw	85
  1147  000286  6E7E               	movwf	3966,c	;volatile
  1148                           
  1149                           ;main.c: 565: EECON2 = 0xAA;
  1150  000288  0EAA               	movlw	170
  1151  00028A  6E7E               	movwf	3966,c	;volatile
  1152                           
  1153                           ;main.c: 566: EECON1bits.WR = 1;
  1154  00028C  827F               	bsf	3967,1,c	;volatile
  1155                           
  1156                           ;main.c: 568: INTCONbits.GIE = 1;
  1157  00028E  8EF2               	bsf	intcon,7,c	;volatile
  1158  000290                     l129:
  1159  000290  ACB7               	btfss	4023,6,c	;volatile
  1160  000292  D7FE               	goto	l129
  1161                           
  1162                           ;main.c: 571: PIR4bits.EEIF = 0;
  1163  000294  9CB7               	bcf	4023,6,c	;volatile
  1164                           
  1165                           ;main.c: 572: EECON1bits.WREN = 0;
  1166  000296  947F               	bcf	3967,2,c	;volatile
  1167                           
  1168                           ;main.c: 573: EECON1bits.FREE = 0;
  1169  000298  987F               	bcf	3967,4,c	;volatile
  1170                           
  1171                           ;main.c: 575: INTCONbits.GIE = 0;
  1172  00029A  9EF2               	bcf	intcon,7,c	;volatile
  1173  00029C  0012               	return		;funcret
  1174  00029E                     __end_of_erase_flash:
  1175                           	opt stack 0
  1176                           tblptru	equ	0xFF8
  1177                           tblptrh	equ	0xFF7
  1178                           tblptrl	equ	0xFF6
  1179                           tablat	equ	0xFF5
  1180                           intcon	equ	0xFF2
  1181                           postinc0	equ	0xFEE
  1182                           wreg	equ	0xFE8
  1183                           indf2	equ	0xFDF
  1184                           fsr2h	equ	0xFDA
  1185                           fsr2l	equ	0xFD9
  1186                           status	equ	0xFD8
  1187                           
  1188 ;; *************** function _UART_getchar *****************
  1189 ;; Defined at:
  1190 ;;		line 419 in file "main.c"
  1191 ;; Parameters:    Size  Location     Type
  1192 ;;  tout_val        2    0[COMRAM] unsigned int 
  1193 ;; Auto vars:     Size  Location     Type
  1194 ;;  tout            2    2[COMRAM] unsigned int 
  1195 ;; Return value:  Size  Location     Type
  1196 ;;                  1    wreg      unsigned char 
  1197 ;; Registers used:
  1198 ;;		wreg, status,2, status,0
  1199 ;; Tracked objects:
  1200 ;;		On entry : 0/0
  1201 ;;		On exit  : 0/0
  1202 ;;		Unchanged: 0/0
  1203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1204 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1205 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1207 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1208 ;;Total ram usage:        4 bytes
  1209 ;; Hardware stack levels used:    1
  1210 ;; Hardware stack levels required when called:    1
  1211 ;; This function calls:
  1212 ;;		Nothing
  1213 ;; This function is called by:
  1214 ;;		_main
  1215 ;;		_bootloader_state_machine
  1216 ;; This function uses a non-reentrant model
  1217 ;;
  1218                           
  1219                           	psect	text7
  1220  00023A                     __ptext7:
  1221                           	opt stack 0
  1222  00023A                     _UART_getchar:
  1223                           	opt stack 28
  1224                           
  1225                           ;main.c: 421: u16 tout = 0x00000000;
  1226                           
  1227                           ;incstack = 0
  1228  00023A  6A03               	clrf	UART_getchar@tout,c
  1229  00023C  6A04               	clrf	UART_getchar@tout+1,c
  1230                           
  1231                           ;main.c: 423: while(!RCIF){
  1232  00023E  D00A               	goto	l943
  1233  000240                     l933:
  1234                           
  1235                           ;main.c: 424: if(tout == tout_val){
  1236  000240  5001               	movf	UART_getchar@tout_val,w,c
  1237  000242  1803               	xorwf	UART_getchar@tout,w,c
  1238  000244  E105               	bnz	l941
  1239  000246  5002               	movf	UART_getchar@tout_val+1,w,c
  1240  000248  1804               	xorwf	UART_getchar@tout+1,w,c
  1241  00024A  A4D8               	btfss	status,2,c
  1242  00024C  D001               	goto	l941
  1243                           
  1244                           ;main.c: 425: return(0);
  1245  00024E  0C00               	retlw	0
  1246  000250                     l941:
  1247                           
  1248                           ;main.c: 427: else{
  1249                           ;main.c: 428: tout++;
  1250  000250  4A03               	infsnz	UART_getchar@tout,f,c
  1251  000252  2A04               	incf	UART_getchar@tout+1,f,c
  1252  000254                     l943:
  1253  000254  AA9E               	btfss	3998,5,c	;volatile
  1254  000256  D7F4               	goto	l933
  1255                           
  1256                           ;main.c: 429: }
  1257                           ;main.c: 430: }
  1258                           ;main.c: 431: timeout = 0x00000000;
  1259  000258  6A28               	clrf	_timeout,c
  1260  00025A  6A29               	clrf	_timeout+1,c
  1261  00025C  6A2A               	clrf	_timeout+2,c
  1262  00025E  6A2B               	clrf	_timeout+3,c
  1263                           
  1264                           ;main.c: 432: if( (RCSTAbits.FERR == 1) || (RCSTAbits.OERR == 1) ){
  1265  000260  B4AB               	btfsc	4011,2,c	;volatile
  1266  000262  D002               	goto	l99
  1267  000264  A2AB               	btfss	4011,1,c	;volatile
  1268  000266  D002               	goto	l947
  1269  000268                     l99:
  1270                           
  1271                           ;main.c: 433: RCSTAbits.CREN = 0;
  1272  000268  98AB               	bcf	4011,4,c	;volatile
  1273                           
  1274                           ;main.c: 434: RCSTAbits.CREN = 1;
  1275  00026A  88AB               	bsf	4011,4,c	;volatile
  1276  00026C                     l947:
  1277                           
  1278                           ;main.c: 435: }
  1279                           ;main.c: 436: return((u8)RCREG1);
  1280  00026C  50AE               	movf	4014,w,c	;volatile
  1281  00026E  0012               	return		;funcret
  1282  000270                     __end_of_UART_getchar:
  1283                           	opt stack 0
  1284                           tblptru	equ	0xFF8
  1285                           tblptrh	equ	0xFF7
  1286                           tblptrl	equ	0xFF6
  1287                           tablat	equ	0xFF5
  1288                           intcon	equ	0xFF2
  1289                           postinc0	equ	0xFEE
  1290                           wreg	equ	0xFE8
  1291                           indf2	equ	0xFDF
  1292                           fsr2h	equ	0xFDA
  1293                           fsr2l	equ	0xFD9
  1294                           status	equ	0xFD8
  1295                           
  1296 ;; *************** function _UART_init *****************
  1297 ;; Defined at:
  1298 ;;		line 380 in file "main.c"
  1299 ;; Parameters:    Size  Location     Type
  1300 ;;		None
  1301 ;; Auto vars:     Size  Location     Type
  1302 ;;		None
  1303 ;; Return value:  Size  Location     Type
  1304 ;;		None               void
  1305 ;; Registers used:
  1306 ;;		wreg, status,2
  1307 ;; Tracked objects:
  1308 ;;		On entry : 0/0
  1309 ;;		On exit  : 0/0
  1310 ;;		Unchanged: 0/0
  1311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1316 ;;Total ram usage:        0 bytes
  1317 ;; Hardware stack levels used:    1
  1318 ;; Hardware stack levels required when called:    1
  1319 ;; This function calls:
  1320 ;;		Nothing
  1321 ;; This function is called by:
  1322 ;;		_main
  1323 ;; This function uses a non-reentrant model
  1324 ;;
  1325                           
  1326                           	psect	text8
  1327  0002BC                     __ptext8:
  1328                           	opt stack 0
  1329  0002BC                     _UART_init:
  1330                           	opt stack 29
  1331                           
  1332                           ;main.c: 382: TRISCbits.TRISC6 = 0;
  1333                           
  1334                           ;incstack = 0
  1335  0002BC  9C94               	bcf	3988,6,c	;volatile
  1336                           
  1337                           ;main.c: 383: TRISCbits.TRISC7 = 1;
  1338  0002BE  8E94               	bsf	3988,7,c	;volatile
  1339                           
  1340                           ;main.c: 389: TXSTAbits.SYNC = 0;
  1341  0002C0  98AC               	bcf	4012,4,c	;volatile
  1342                           
  1343                           ;main.c: 390: TXSTAbits.BRGH = 0;
  1344  0002C2  94AC               	bcf	4012,2,c	;volatile
  1345                           
  1346                           ;main.c: 391: BAUDCON1bits.BRG16 = 0;
  1347  0002C4  96A7               	bcf	4007,3,c	;volatile
  1348                           
  1349                           ;main.c: 392: SPBRG = 103;
  1350  0002C6  0E67               	movlw	103
  1351  0002C8  6EAF               	movwf	4015,c	;volatile
  1352                           
  1353                           ;main.c: 395: TXSTAbits.TXEN = 1;
  1354  0002CA  8AAC               	bsf	4012,5,c	;volatile
  1355                           
  1356                           ;main.c: 398: RCSTAbits.SPEN = 1;
  1357  0002CC  8EAB               	bsf	4011,7,c	;volatile
  1358                           
  1359                           ;main.c: 401: RCSTAbits.CREN = 1;
  1360  0002CE  88AB               	bsf	4011,4,c	;volatile
  1361  0002D0  0012               	return		;funcret
  1362  0002D2                     __end_of_UART_init:
  1363                           	opt stack 0
  1364                           tblptru	equ	0xFF8
  1365                           tblptrh	equ	0xFF7
  1366                           tblptrl	equ	0xFF6
  1367                           tablat	equ	0xFF5
  1368                           intcon	equ	0xFF2
  1369                           postinc0	equ	0xFEE
  1370                           wreg	equ	0xFE8
  1371                           indf2	equ	0xFDF
  1372                           fsr2h	equ	0xFDA
  1373                           fsr2l	equ	0xFD9
  1374                           status	equ	0xFD8
  1375                           
  1376 ;; *************** function _high_isr *****************
  1377 ;; Defined at:
  1378 ;;		line 645 in file "main.c"
  1379 ;; Parameters:    Size  Location     Type
  1380 ;;		None
  1381 ;; Auto vars:     Size  Location     Type
  1382 ;;		None
  1383 ;; Return value:  Size  Location     Type
  1384 ;;		None               void
  1385 ;; Registers used:
  1386 ;;		None
  1387 ;; Tracked objects:
  1388 ;;		On entry : 0/0
  1389 ;;		On exit  : 0/0
  1390 ;;		Unchanged: 0/0
  1391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1396 ;;Total ram usage:        0 bytes
  1397 ;; Hardware stack levels used:    1
  1398 ;; This function calls:
  1399 ;;		Nothing
  1400 ;; This function is called by:
  1401 ;;		Interrupt level 2
  1402 ;; This function uses a non-reentrant model
  1403 ;;
  1404                           
  1405                           	psect	intcode
  1406  000008                     __pintcode:
  1407                           	opt stack 0
  1408  000008                     _high_isr:
  1409                           	opt stack 27
  1410                           
  1411                           ;incstack = 0
  1412  000008  EF04 F008          	goto	4104	;# 
  1413  00000C  0011               	retfie		f
  1414  00000E                     __end_of_high_isr:
  1415                           	opt stack 0
  1416                           tblptru	equ	0xFF8
  1417                           tblptrh	equ	0xFF7
  1418                           tblptrl	equ	0xFF6
  1419                           tablat	equ	0xFF5
  1420                           intcon	equ	0xFF2
  1421                           postinc0	equ	0xFEE
  1422                           wreg	equ	0xFE8
  1423                           indf2	equ	0xFDF
  1424                           fsr2h	equ	0xFDA
  1425                           fsr2l	equ	0xFD9
  1426                           status	equ	0xFD8
  1427                           tblptru	equ	0xFF8
  1428                           tblptrh	equ	0xFF7
  1429                           tblptrl	equ	0xFF6
  1430                           tablat	equ	0xFF5
  1431                           intcon	equ	0xFF2
  1432                           postinc0	equ	0xFEE
  1433                           wreg	equ	0xFE8
  1434                           indf2	equ	0xFDF
  1435                           fsr2h	equ	0xFDA
  1436                           fsr2l	equ	0xFD9
  1437                           status	equ	0xFD8
  1438                           
  1439                           	psect	rparam
  1440  0000                     tblptru	equ	0xFF8
  1441                           tblptrh	equ	0xFF7
  1442                           tblptrl	equ	0xFF6
  1443                           tablat	equ	0xFF5
  1444                           intcon	equ	0xFF2
  1445                           postinc0	equ	0xFEE
  1446                           wreg	equ	0xFE8
  1447                           indf2	equ	0xFDF
  1448                           fsr2h	equ	0xFDA
  1449                           fsr2l	equ	0xFD9
  1450                           status	equ	0xFD8


Data Sizes:
    Strings     11
    Constant    0
    Data        0
    BSS         68
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     39      43
    BANK0           160      0      64
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    write_flash@buffer	PTR unsigned char  size(1) Largest target is 64
		 -> gbuffer(BANK0[64]), 

    send_string_uart@buf	PTR unsigned char  size(1) Largest target is 11
		 -> STR_1(CODE[11]), 


Critical Paths under _main in COMRAM

    _main->_bootloader_state_machine
    _bootloader_state_machine->_write_flash
    _send_string_uart->_UART_putchar

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     4      5    1818
                                             30 COMRAM     9     4      5
                       _UART_getchar
                          _UART_init
           _bootloader_state_machine
 ---------------------------------------------------------------------------------
 (1) _bootloader_state_machine                            19    19      0    1315
                                             11 COMRAM    19    19      0
                       _UART_getchar
                       _UART_putchar
                        _erase_flash
                        _jump_to_app
                   _send_string_uart
                        _write_flash
 ---------------------------------------------------------------------------------
 (2) _write_flash                                         11     5      6     317
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (2) _send_string_uart                                     4     4      0     182
                                              1 COMRAM     4     4      0
                       _UART_putchar
 ---------------------------------------------------------------------------------
 (3) _UART_putchar                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _jump_to_app                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _erase_flash                                          4     0      4     174
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _UART_getchar                                         4     2      2     364
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _high_isr                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_getchar
   _UART_init
   _bootloader_state_machine
     _UART_getchar
     _UART_putchar
     _erase_flash
     _jump_to_app
     _send_string_uart
       _UART_putchar
     _write_flash

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      40       5       40.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     27      2B       1       45.3%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      6B       6        0.0%
DATA                 0      0      6B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Wed Aug 12 22:38:34 2015

                               l82 02D4                                 l85 02DC  
                               l99 0268                        __CFG_BORV$1 000000  
                     __CFG_CP0$OFF 000000                       __CFG_CP1$OFF 000000  
                     __CFG_CP2$OFF 000000                       __CFG_CP3$OFF 000000  
                              l123 01EC                                l129 0290  
                              l138 0FF6                                l941 0250  
                              l933 0240                                l943 0254  
                              l953 01F2                                l947 026C  
                     ?_erase_flash 0001                                l957 021C  
                              l991 0FCA                                l987 0FB8  
                     __CFG_CPB$OFF 000000                                u300 0058  
                              u310 0130                                u330 0F48  
                     __CFG_CPD$OFF 000000  __size_of_bootloader_state_machine 01DC  
                              wreg 000FE8                         _TXSTA1bits 000FAC  
        ?_bootloader_state_machine 0001                               l1023 0026  
                             l1103 0F26                               l1017 0018  
                             l1121 0F7C                               l1113 0F5E  
                             l1115 0F6A                               l1045 0104  
                             l1037 005A                               l1029 0030  
                             l1109 0F50                               l1055 0160  
                             l1127 0F94                               l1081 01A2  
                             l1057 0166                               l1083 01A8  
                             l1091 01C6                               l1085 01AC  
                             l1069 0182                               l1079 019C  
                             STR_1 0F01                               _RCIF 007CF5  
                             _RCON 000FD0                      __CFG_FCMEN$ON 000000  
                             _main 0F0E                               fsr2h 000FDA  
                             indf2 000FDF                               fsr2l 000FD9  
                             start 000E                      __CFG_IESO$OFF 000000  
                    __CFG_MCLRE$ON 000000                       ___param_bank 000010  
                     _BAUDCON1bits 000FA7                              ?_main 001F  
                            _SPBRG 000FAF                      __CFG_WRT0$OFF 000000  
                    __CFG_WRT1$OFF 000000                      __CFG_WRT2$OFF 000000  
                      _write_flash 0FA2                      __CFG_WRT3$OFF 000000  
                   __CFG_EBTR0$OFF 000000                     __CFG_EBTR1$OFF 000000  
                   __CFG_EBTR2$OFF 000000                     __CFG_EBTR3$OFF 000000  
                    __CFG_WRTB$OFF 000000                      __CFG_WRTC$OFF 000000  
                    __CFG_WRTD$OFF 000000                     __CFG_EBTRB$OFF 000000  
               __size_of_UART_init 0016          __size_of_send_string_uart 004C  
                            tablat 000FF5                              status 000FD8  
                  __initialization 029E                       __end_of_main 0FA2  
                           ??_main 0024                      __activetblptr 000002  
                   __CFG_PLLCFG$ON 000000                     __CFG_RETEN$OFF 000000  
                           _EECON1 000F7F                             _EECON2 000F7E  
                  __CFG_BBSIZ$BB2K 000000                     __CFG_WDTEN$OFF 000000  
    bootloader_state_machine@state 0011                             _TABLAT 000FF5  
                           _RCREG1 000FAE                       ?_jump_to_app 0001  
                   __CFG_WDTPS$256 000000                             _TXREG1 000FAD  
                   __CFG_XINST$OFF 000000                   __end_of_high_isr 000E  
                __end_of_UART_init 02D2                     __CFG_STVREN$ON 000000  
                           clear_0 02A4                       __mediumconst 0000  
             __size_of_erase_flash 002E                             tblptrh 000FF7  
                           tblptrl 000FF6                             tblptru 000FF8  
              send_string_uart@buf 0005        bootloader_state_machine@adr 0016  
      bootloader_state_machine@crc 001E                         __accesstop 0060  
          __end_of__initialization 02B2                 erase_flash@address 0001  
                    ___rparam_used 000001                     __pcstackCOMRAM 0001  
                 _send_string_uart 01EE                         __pbssBANK0 0060  
              UART_putchar@outchar 0001                   UART_getchar@tout 0003  
                 __CFG_CANMX$PORTB 000000                       ?_write_flash 0001  
                          _TBLPTRH 000FF7                            _TBLPTRL 000FF6  
                          _TBLPTRU 000FF8                          ?_high_isr 0001  
             __size_of_jump_to_app 000C                    __CFG_PWRTEN$OFF 000000  
                          __Hparam 0000                            __Lparam 0000  
                     __psmallconst 0F00                      ?_UART_getchar 0001  
                          __pcinit 029E                            __ramtop 0F00  
                          __ptext0 0F0E                            __ptext1 0012  
                          __ptext2 0FA2                            __ptext3 01EE  
                          __ptext4 02D2                            __ptext5 02E2  
                          __ptext6 0270                            __ptext7 023A  
                          __ptext8 02BC           _bootloader_state_machine 0012  
                          _gbuffer 0060                      ?_UART_putchar 0001  
                __CFG_MSSPMSK$MSK7 000000                            _timeout 0028  
             UART_getchar@tout_val 0001                         ??_high_isr 0001  
             end_of_initialization 02B2                      __Lmediumconst 0000  
               write_flash@address 0001                          _RCSTAbits 000FAB  
                          postinc0 000FEE                 write_flash@counter 000A  
                   ??_UART_getchar 0003                          _UART_init 02BC  
                   ??_UART_putchar 0001                   __CFG_FOSC$INTIO2 000000  
                        _TRISBbits 000F93                          _TRISCbits 000F94  
                        _TXSTAbits 000FAC           __end_of_send_string_uart 023A  
                       ?_UART_init 0001                      ??_erase_flash 0005  
                send_string_uart@i 0004                start_initialization 029E  
             __size_of_write_flash 005E                        __pbssCOMRAM 0028  
              __end_of_erase_flash 029E               __end_of_UART_getchar 0270  
                __size_of_high_isr 0006               __end_of_UART_putchar 02E2  
       ??_bootloader_state_machine 000C                          __pintcode 0008  
                      ??_UART_init 0001                        __smallconst 0F00  
  bootloader_state_machine@adr_778 001A    bootloader_state_machine@address 0012  
                    ??_jump_to_app 0001                           _LATBbits 000F8A  
                         _PIR4bits 000FB7                  write_flash@buffer 0005  
                write_flash@length 0006                   __CFG_SOSCSEL$DIG 000000  
                      _erase_flash 0270                          main@hbeat 0024  
                       _EECON1bits 000F7F                           __Hrparam 0000  
              __end_of_jump_to_app 02EE                           __Lrparam 0000  
               __CFG_BOREN$SBORDIS 000000                  ?_send_string_uart 0001  
               ??_send_string_uart 0002              __size_of_UART_getchar 0036  
                         _high_isr 0008              __size_of_UART_putchar 0010  
                    __size_of_main 0094   __end_of_bootloader_state_machine 01EE  
                         main@argc 001F                           main@argv 0021  
                     _UART_getchar 023A                __CFG_INTOSCSEL$HIGH 000000  
                      _OSCTUNEbits 000F9B                         _INTCONbits 000FF2  
                    ??_write_flash 0007                       _UART_putchar 02D2  
                         intlevel2 0000                        _jump_to_app 02E2  
                       _OSCCONbits 000FD3                __end_of_write_flash 1000  
              __CFG_BORPWR$ZPBORMV 000000  
